"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[90078],{3905:(n,e,t)=>{t.d(e,{Zo:()=>o,kt:()=>c});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},s=Object.keys(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var m=r.createContext({}),a=function(n){var e=r.useContext(m),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},o=function(n){var e=a(n.components);return r.createElement(m.Provider,{value:e},n.children)},p="mdxType",f={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,s=n.originalType,m=n.parentName,o=u(n,["components","mdxType","originalType","parentName"]),p=a(t),g=i,c=p["".concat(m,".").concat(g)]||p[g]||f[g]||s;return t?r.createElement(c,l(l({ref:e},o),{},{components:t})):r.createElement(c,l({ref:e},o))}));function c(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var s=t.length,l=new Array(s);l[0]=g;var u={};for(var m in e)hasOwnProperty.call(e,m)&&(u[m]=e[m]);u.originalType=n,u[p]="string"==typeof n?n:i,l[1]=u;for(var a=2;a<s;a++)l[a]=t[a];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},82628:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>m,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>u,toc:()=>a});var r=t(87462),i=(t(67294),t(3905));const s={},l=void 0,u={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/15-16-18-<\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488>-xx\u6570\u4e4b\u548c",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/15-16-18-<\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488>-xx\u6570\u4e4b\u548c",title:"15-16-18-<\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488>-xx\u6570\u4e4b\u548c",description:"15. \u4e09\u6570\u4e4b\u548c",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/15-16-18-<\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488>-xx\u6570\u4e4b\u548c.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/15-16-18-<\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488>-xx\u6570\u4e4b\u548c",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/15-16-18-<\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488>-xx\u6570\u4e4b\u548c",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u6307\u5411\u5404\u81ea\u96c6\u5408\u7684\u53cc\u6307\u9488>-\u8ffd\u52a0\u5b57\u7b26\u4ee5\u83b7\u5f97\u5b50\u5e8f\u5217",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u6307\u5411\u5404\u81ea\u96c6\u5408\u7684\u53cc\u6307\u9488>-\u8ffd\u52a0\u5b57\u7b26\u4ee5\u83b7\u5f97\u5b50\u5e8f\u5217"},next:{title:"26-80-<\u6570\u636e\u6709\u5e8f-\u76f8\u540c\u5143\u7d20\u6700\u591a\u4fdd\u7559k\u4f4d>-\u5220\u9664\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/26-80-<\u6570\u636e\u6709\u5e8f-\u76f8\u540c\u5143\u7d20\u6700\u591a\u4fdd\u7559k\u4f4d>-\u5220\u9664\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879"}},m={},a=[{value:"\u65b9\u6cd5\uff1a\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488",id:"\u65b9\u6cd5\u6392\u5e8f\u5de6\u53f3\u53cc\u6307\u9488",level:2},{value:"\u65b9\u6cd5\uff1a\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488",id:"\u65b9\u6cd5\u6392\u5e8f\u5de6\u53f3\u53cc\u6307\u9488-1",level:2},{value:"\u65b9\u6cd5\uff1a\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488",id:"\u65b9\u6cd5\u6392\u5e8f\u5de6\u53f3\u53cc\u6307\u9488-2",level:2}],o={toc:a};function p(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},o,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/3sum/"},"15. \u4e09\u6570\u4e4b\u548c")),(0,i.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," \uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e09\u5143\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"[nums[i], nums[j], nums[k]]")," \u6ee1\u8db3",(0,i.kt)("inlineCode",{parentName:"p"},"i != j"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"i != k")," \u4e14 ",(0,i.kt)("inlineCode",{parentName:"p"},"j != k")," \uff0c\u540c\u65f6\u8fd8\u6ee1\u8db3 ",(0,i.kt)("inlineCode",{parentName:"p"},"nums[i] + nums[j] + nums[k] == 0")," \u3002\u8bf7"),(0,i.kt)("p",null,"\u4f60\u8fd4\u56de\u6240\u6709\u548c\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," \u4e14\u4e0d\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a"),"\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anums = [-1,0,1,2,-1,-4]\n\u8f93\u51fa\uff1a[[-1,-1,2],[-1,0,1]]\n\u89e3\u91ca\uff1a\nnums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0 \u3002\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0 \u3002\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0 \u3002\n\u4e0d\u540c\u7684\u4e09\u5143\u7ec4\u662f [-1,0,1] \u548c [-1,-1,2] \u3002\n\u6ce8\u610f\uff0c\u8f93\u51fa\u7684\u987a\u5e8f\u548c\u4e09\u5143\u7ec4\u7684\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1anums = [0,1,1]\n\u8f93\u51fa\uff1a[]\n\u89e3\u91ca\uff1a\u552f\u4e00\u53ef\u80fd\u7684\u4e09\u5143\u7ec4\u548c\u4e0d\u4e3a 0 \u3002\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1anums = [0,0,0]\n\u8f93\u51fa\uff1a[[0,0,0]]\n\u89e3\u91ca\uff1a\u552f\u4e00\u53ef\u80fd\u7684\u4e09\u5143\u7ec4\u548c\u4e3a 0 \u3002\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"3 <= nums.length <= 3000")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-105 <= nums[i] <= 105"))),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u6392\u5e8f\u5de6\u53f3\u53cc\u6307\u9488"},"\u65b9\u6cd5\uff1a\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488"),(0,i.kt)("p",null,"\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a\u6392\u5e8f\uff0c\u7136\u540e\u5728\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\u8df3\u8fc7\u91cd\u590d\u7684\u503c"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n^2)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(logn)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<vector<int>> threeSum(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        vector<vector<int>> ans;\n        if (n < 2) return ans;\n        for (int i = 0; i < n - 2; i++) {\n            if (i > 0 && nums[i] == nums[i - 1]) {\n                continue;\n            }\n            int left = i + 1;\n            int right = n - 1;\n            while (left < right) {\n                int tmp = nums[left] + nums[right];\n                if (tmp == -1 * nums[i]) {\n                    ans.push_back({nums[i], nums[left], nums[right]});\n                    left++;\n                    right--;\n                    while (nums[left] == nums[left - 1] && left < right) {\n                        left++;\n                    }\n                    while (nums[right] == nums[right + 1] && left < right) {\n                        right--;\n                    }\n                } else if (tmp < -1 * nums[i]) {\n                    left++;\n                } else if (tmp > -1 * nums[i]) {\n                    right--;\n                }\n            }\n        }\n        return ans;\n    }\n};\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        sz = len(nums)\n        if sz < 3:\n            return []\n        nums.sort()\n        ans = []\n\n        for i in range(sz - 2):\n            if i>0 and nums[i] == nums[i-1]:\n                continue\n            left = i + 1\n            right = sz - 1\n            while left < right:\n                if nums[i] + nums[left] + nums[right] == 0:\n                    # print(i, left, right)\n                    ans.append([nums[i], nums[left], nums[right]])\n                    left += 1\n                    right -= 1\n                    while left < right and nums[left] == nums[left-1]:\n                        left += 1\n                    while left < right and nums[right] == nums[right+1]:\n                        right -= 1\n                elif nums[i] + nums[left] + nums[right] < 0:\n                    left += 1\n                elif nums[i] + nums[left] + nums[right] > 0:\n                    right -= 1\n        return ans\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/3sum-closest/"},"16. \u6700\u63a5\u8fd1\u7684\u4e09\u6570\u4e4b\u548c")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u6392\u5e8f\u5de6\u53f3\u53cc\u6307\u9488-1"},"\u65b9\u6cd5\uff1a\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n^2)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(logn)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int threeSumClosest(vector<int>& nums, int target) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        int diff = INT_MAX;\n        int ans = 0;\n        for (int i = 0; i < n - 2; i++) {\n            int left = i + 1;\n            int right = n - 1;\n            while (left < right) {\n                int tmp = nums[i] + nums[left] + nums[right];\n                if (abs(tmp - target) < diff) {\n                    ans = tmp;\n                    diff = abs(tmp - target);\n                }\n                if (tmp == target) {\n                    return target;\n                } else if (tmp < target) {\n                    left++;\n                } else if (tmp > target) {\n                    right--;\n                }\n            }\n        }\n        return ans;\n    }\n};\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def threeSumClosest(self, nums: List[int], target: int) -> int:\n        sz = len(nums)\n        nums.sort()\n        diff = float("inf")\n\n        for i in range(sz - 2):\n            left = i + 1\n            right = sz - 1\n            while left < right:\n                _sum = nums[i] + nums[left] + nums[right]\n                if _sum == target:\n                    return target\n                elif _sum < target:\n                    if abs(_sum-target) < diff:\n                        diff = abs(_sum-target)\n                        res = _sum\n                    left += 1\n                elif _sum > target:\n                    if abs(_sum-target) < diff:\n                        diff = abs(_sum-target)\n                        res = _sum\n                    right -= 1\n        return res\n')),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/4sum/"},"18. \u56db\u6570\u4e4b\u548c")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u6392\u5e8f\u5de6\u53f3\u53cc\u6307\u9488-2"},"\u65b9\u6cd5\uff1a\u6392\u5e8f+\u5de6\u53f3\u53cc\u6307\u9488"),(0,i.kt)("p",null,"\u56e0\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"-109 <= nums[i] <= 109"),"\uff0c\u6709\u4e2a\u7528\u4f8b\u662f ","[1000000000,1000000000,1000000000,1000000000]"," 0\uff0c\u4e09\u4e2a 10^9 \u76f8\u52a0\uff0c\u521a\u597d\u6ea2\u51fa"),(0,i.kt)("p",null," ",(0,i.kt)("inlineCode",{parentName:"p"},"int tmp = nums[i] + nums[j] + nums[left] + nums[right];")," \u8fd9\u6837\u5199\u6574\u6570\u4f1a\u6ea2\u51fa"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n^3)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(logn)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<vector<int>> fourSum(vector<int>& nums, int target) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        vector<vector<int>> ans;\n        if (n < 4) return ans;\n        for (int i = 0; i < n - 3; i++) {\n            if (i != 0 && nums[i] == nums[i - 1]) continue;\n            for (int j = i + 1; j < n - 2; j++) {\n                if (j != i + 1 && nums[j] == nums[j - 1]) continue;\n                int left = j + 1;\n                int right = n - 1;\n                while (left < right) {\n                    long long tmp = (long long)nums[i] + (long long)nums[j] + (long long)nums[left] + (long long)nums[right];\n                    if (tmp == target) {\n                        ans.push_back({nums[i], nums[j], nums[left], nums[right]});\n                        left++;\n                        right--;\n                        while (nums[left] == nums[left - 1] && left < right) left++;\n                        while (nums[right] == nums[right + 1] && left < right) right--;\n                    } else if (tmp < target) {\n                        left++;\n                    } else if (tmp > target) {\n                        right--;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:\n        sz = len(nums)\n        if sz < 4:\n            return []\n        nums.sort()\n        ans = []\n\n        for i in range(sz-3):\n            if i != 0 and nums[i] == nums[i-1]:\n                continue\n            for j in range(i+1, sz-2):\n                if j != i+1 and nums[j] == nums[j-1]:\n                    continue\n                l = j+1\n                r = sz-1\n                while l < r:\n                    _sum = nums[i] + nums[j] + nums[l] + nums[r]\n                    if _sum == target:\n                        ans.append([nums[i], nums[j], nums[l], nums[r]])\n                        l += 1\n                        r -= 1\n                        while l < r and nums[l] == nums[l-1]:\n                            l += 1\n                        while l < r and nums[r] == nums[r+1]:\n                            r -= 1\n                    elif _sum < target:\n                        l += 1\n                    else:\n                        r -= 1\n        return ans\n")))}p.isMDXComponent=!0}}]);
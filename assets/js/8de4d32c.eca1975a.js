"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[18376],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>f});var r=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var c=r.createContext({}),p=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},u=function(n){var e=p(n.components);return r.createElement(c.Provider,{value:e},n.children)},m="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,c=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),m=p(t),s=o,f=m["".concat(c,".").concat(s)]||m[s]||d[s]||i;return t?r.createElement(f,a(a({ref:e},u),{},{components:t})):r.createElement(f,a({ref:e},u))}));function f(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,a=new Array(i);a[0]=s;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l[m]="string"==typeof n?n:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},69185:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const i={},a=void 0,l={unversionedId:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/LCP-07-<\u7b80\u5355\u9898>-\u4f20\u9012\u4fe1\u606f",id:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/LCP-07-<\u7b80\u5355\u9898>-\u4f20\u9012\u4fe1\u606f",title:"LCP-07-<\u7b80\u5355\u9898>-\u4f20\u9012\u4fe1\u606f",description:"\u9898\u76ee\uff1aLCP 07. \u4f20\u9012\u4fe1\u606f",source:"@site/docs/Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/LCP-07-<\u7b80\u5355\u9898>-\u4f20\u9012\u4fe1\u606f.md",sourceDirName:"Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22",slug:"/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/LCP-07-<\u7b80\u5355\u9898>-\u4f20\u9012\u4fe1\u606f",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/LCP-07-<\u7b80\u5355\u9898>-\u4f20\u9012\u4fe1\u606f",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5012\u53d9dp>-\u89e3\u51b3\u667a\u529b\u95ee\u9898",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u5012\u53d9dp>-\u89e3\u51b3\u667a\u529b\u95ee\u9898"},next:{title:"\u4e0d\u540c\u8def\u5f84",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898/\u4e0d\u540c\u8def\u5f84"}},c={},p=[{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22",id:"\u65b9\u6cd5\u4e8c\u8bb0\u5fc6\u5316\u641c\u7d22",level:2}],u={toc:p};function m(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/chuan-di-xin-xi/"},"LCP 07. \u4f20\u9012\u4fe1\u606f")),(0,o.kt)("p",null,"\u5c0f\u670b\u53cb A \u5728\u548c ta \u7684\u5c0f\u4f19\u4f34\u4eec\u73a9\u4f20\u4fe1\u606f\u6e38\u620f\uff0c\u6e38\u620f\u89c4\u5219\u5982\u4e0b\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u6709 n \u540d\u73a9\u5bb6\uff0c\u6240\u6709\u73a9\u5bb6\u7f16\u53f7\u5206\u522b\u4e3a 0 \uff5e n-1\uff0c\u5176\u4e2d\u5c0f\u670b\u53cb A \u7684\u7f16\u53f7\u4e3a 0"),(0,o.kt)("li",{parentName:"ol"},"\u6bcf\u4e2a\u73a9\u5bb6\u90fd\u6709\u56fa\u5b9a\u7684\u82e5\u5e72\u4e2a\u53ef\u4f20\u4fe1\u606f\u7684\u5176\u4ed6\u73a9\u5bb6\uff08\u4e5f\u53ef\u80fd\u6ca1\u6709\uff09\u3002\u4f20\u4fe1\u606f\u7684\u5173\u7cfb\u662f\u5355\u5411\u7684\uff08\u6bd4\u5982 A \u53ef\u4ee5\u5411 B \u4f20\u4fe1\u606f\uff0c\u4f46 B \u4e0d\u80fd\u5411 A \u4f20\u4fe1\u606f\uff09\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u6bcf\u8f6e\u4fe1\u606f\u5fc5\u987b\u9700\u8981\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u4eba\uff0c\u4e14\u4fe1\u606f\u53ef\u91cd\u590d\u7ecf\u8fc7\u540c\u4e00\u4e2a\u4eba")),(0,o.kt)("p",null,"\u7ed9\u5b9a\u603b\u73a9\u5bb6\u6570 ",(0,o.kt)("inlineCode",{parentName:"p"},"n"),"\uff0c\u4ee5\u53ca\u6309 ",(0,o.kt)("inlineCode",{parentName:"p"},"[\u73a9\u5bb6\u7f16\u53f7,\u5bf9\u5e94\u53ef\u4f20\u9012\u73a9\u5bb6\u7f16\u53f7]")," \u5173\u7cfb\u7ec4\u6210\u7684\u4e8c\u7ef4\u6570\u7ec4 ",(0,o.kt)("inlineCode",{parentName:"p"},"relation"),"\u3002\u8fd4\u56de\u4fe1\u606f\u4ece\u5c0f A (\u7f16\u53f7 0 ) \u7ecf\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"k")," \u8f6e\u4f20\u9012\u5230\u7f16\u53f7\u4e3a n-1 \u7684\u5c0f\u4f19\u4f34\u5904\u7684\u65b9\u6848\u6570\uff1b\u82e5\u4e0d\u80fd\u5230\u8fbe\uff0c\u8fd4\u56de 0\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1an = 5, relation = [[0,2],[2,1],[3,4],[2,3],[1,4],[2,0],[0,4]], k = 3\n\n\u8f93\u51fa\uff1a3\n\n\u89e3\u91ca\uff1a\u4fe1\u606f\u4ece\u5c0f A \u7f16\u53f7 0 \u5904\u5f00\u59cb\uff0c\u7ecf 3 \u8f6e\u4f20\u9012\uff0c\u5230\u8fbe\u7f16\u53f7 4\u3002\u5171\u6709 3 \u79cd\u65b9\u6848\uff0c\u5206\u522b\u662f 0->2->0->4\uff0c 0->2->1->4\uff0c 0->2->3->4\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1an = 3, relation = [[0,2],[2,1]], k = 2\n\n\u8f93\u51fa\uff1a0\n\n\u89e3\u91ca\uff1a\u4fe1\u606f\u4e0d\u80fd\u4ece\u5c0f A \u5904\u7ecf\u8fc7 2 \u8f6e\u4f20\u9012\u5230\u7f16\u53f7 2\n\n")),(0,o.kt)("p",null,"\u9650\u5236\uff1a"),(0,o.kt)("p",null,"2 <= n <= 10\n1 <= k <= 5\n1 <= relation.length <= 90, \u4e14 relation","[i]",".length == 2\n",(0,o.kt)("inlineCode",{parentName:"p"},"0 <= relation[i][0],relation[i][1] < n \u4e14 relation[i][0] != relation[i][1]")),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e00dfs"},"\u65b9\u6cd5\u4e00\uff1adfs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int end;\n    unordered_map<int, vector<int>> adj;  // \u4e34\u63a5\u8868\n\n    // \u4ece cur \u4f4d\u7f6e\uff0c\u518d\u8d70 k \u6b65\uff0c\u80fd\u5230\u8fbe n-1 \u4f4d\u7f6e\u7684\u65b9\u6848\u6570\n    int dfs(int cur, int k) {\n        // \u8d70\u7684\u7ec8\u70b9\uff0c\u4e14\u5269\u4f59\u6b65\u6570\u4e3a0\n        if (k == 0) {\n            if (cur == end) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n        int cnt = 0;\n        for (int next : adj[cur]) {\n            cnt += dfs(next, k - 1);\n        }\n        return cnt;\n    }\n    int numWays(int n, vector<vector<int>>& relation, int k) {\n        end = n - 1;\n        for (vector<int> r : relation) {\n            adj[r[0]].push_back(r[1]);\n        }\n        return dfs(0, k);\n    }\n};\n")),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u8bb0\u5fc6\u5316\u641c\u7d22"},"\u65b9\u6cd5\u4e8c\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22"),(0,o.kt)("p",null,"\u300c\u5b50\u95ee\u9898\u300d\u4e3a\u7ad9\u5728 cur \u4f4d\u7f6e\u4e0a\uff0c\u8fd8\u6709 k \u6b65"),(0,o.kt)("p",null,"\u5bf9\u6b64\u4f7f\u7528\u8bb0\u5fc6\u5316"),(0,o.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(n * k)")),(0,o.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(n * k)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int end;\n    unordered_map<int, vector<int>> adj;  // \u4e34\u63a5\u8868\n\n    // \u4ece cur \u4f4d\u7f6e\uff0c\u518d\u8d70 k \u6b65\uff0c\u80fd\u5230\u8fbe n-1 \u4f4d\u7f6e\u7684\u65b9\u6848\u6570\n    int dfs(int cur, int k, vector<vector<int>>& memo) {\n        // \u8d70\u7684\u7ec8\u70b9\uff0c\u4e14\u5269\u4f59\u6b65\u6570\u4e3a0\n        if (k == 0) {\n            if (cur == end) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n        if (memo[cur][k] != -1) return memo[cur][k];\n\n        int cnt = 0;\n        for (int next : adj[cur]) {\n            cnt += dfs(next, k - 1, memo);\n        }\n        memo[cur][k] = cnt;\n        return cnt;\n    }\n\n    int numWays(int n, vector<vector<int>>& relation, int k) {\n        end = n - 1;\n        for (vector<int> r : relation) {\n            adj[r[0]].push_back(r[1]);\n        }\n        vector<vector<int>> memo(n, vector<int>(k + 1, -1));\n        return dfs(0, k, memo);\n    }\n};\n")))}m.isMDXComponent=!0}}]);
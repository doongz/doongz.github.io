"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[35705],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>m});var r=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var p=r.createContext({}),u=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},s=function(n){var e=u(n.components);return r.createElement(p.Provider,{value:e},n.children)},d="mdxType",f={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,p=n.parentName,s=l(n,["components","mdxType","originalType","parentName"]),d=u(t),c=o,m=d["".concat(p,".").concat(c)]||d[c]||f[c]||i;return t?r.createElement(m,a(a({ref:e},s),{},{components:t})):r.createElement(m,a({ref:e},s))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,a=new Array(i);a[0]=c;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=n,l[d]="string"==typeof n?n:o,a[1]=l;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5908:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(87462),o=(t(67294),t(3905));const i={},a=void 0,l={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u62d3\u6251\u6392\u5e8f/<\u62d3\u6251\u6392\u5e8f-\u6709\u5411\u65e0\u73af\u56fe>-\u8bfe\u7a0b\u8868",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u62d3\u6251\u6392\u5e8f/<\u62d3\u6251\u6392\u5e8f-\u6709\u5411\u65e0\u73af\u56fe>-\u8bfe\u7a0b\u8868",title:"<\u62d3\u6251\u6392\u5e8f-\u6709\u5411\u65e0\u73af\u56fe>-\u8bfe\u7a0b\u8868",description:"207. \u8bfe\u7a0b\u8868",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-\u62d3\u6251\u6392\u5e8f/207-<\u62d3\u6251\u6392\u5e8f-\u6709\u5411\u65e0\u73af\u56fe>-\u8bfe\u7a0b\u8868.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-\u62d3\u6251\u6392\u5e8f",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u62d3\u6251\u6392\u5e8f/<\u62d3\u6251\u6392\u5e8f-\u6709\u5411\u65e0\u73af\u56fe>-\u8bfe\u7a0b\u8868",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u62d3\u6251\u6392\u5e8f/<\u62d3\u6251\u6392\u5e8f-\u6709\u5411\u65e0\u73af\u56fe>-\u8bfe\u7a0b\u8868",draft:!1,tags:[],version:"current",sidebarPosition:207,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5206\u7c7b>-\u6dfb\u52a0\u8fb9\u4f7f\u6240\u6709\u8282\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u56fe\u76f8\u5173\u7684\u9898/<\u5206\u7c7b>-\u6dfb\u52a0\u8fb9\u4f7f\u6240\u6709\u8282\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570"},next:{title:"<\u51fa\u5ea6\u4e3a0-\u53cd\u56fe-\u7ecf\u8fc7\u70b9>-\u627e\u5230\u6700\u7ec8\u7684\u5b89\u5168\u72b6\u6001",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u62d3\u6251\u6392\u5e8f/<\u51fa\u5ea6\u4e3a0-\u53cd\u56fe-\u7ecf\u8fc7\u70b9>-\u627e\u5230\u6700\u7ec8\u7684\u5b89\u5168\u72b6\u6001"}},p={},u=[{value:"\u65b9\u6cd5\u4e00\uff1akahn \u7b97\u6cd5",id:"\u65b9\u6cd5\u4e00kahn-\u7b97\u6cd5",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1adfs",id:"\u65b9\u6cd5\u4e8cdfs",level:2}],s={toc:u};function d(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/course-schedule/"},"207. \u8bfe\u7a0b\u8868")),(0,o.kt)("p",null,"\u4f60\u8fd9\u4e2a\u5b66\u671f\u5fc5\u987b\u9009\u4fee ",(0,o.kt)("inlineCode",{parentName:"p"},"numCourses")," \u95e8\u8bfe\u7a0b\uff0c\u8bb0\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," \u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"numCourses - 1")," \u3002"),(0,o.kt)("p",null,"\u5728\u9009\u4fee\u67d0\u4e9b\u8bfe\u7a0b\u4e4b\u524d\u9700\u8981\u4e00\u4e9b\u5148\u4fee\u8bfe\u7a0b\u3002 \u5148\u4fee\u8bfe\u7a0b\u6309\u6570\u7ec4 ",(0,o.kt)("inlineCode",{parentName:"p"},"prerequisites")," \u7ed9\u51fa\uff0c\u5176\u4e2d ",(0,o.kt)("inlineCode",{parentName:"p"},"prerequisites[i] = [ai, bi]")," \uff0c\u8868\u793a\u5982\u679c\u8981\u5b66\u4e60\u8bfe\u7a0b ",(0,o.kt)("inlineCode",{parentName:"p"},"ai")," \u5219 ",(0,o.kt)("strong",{parentName:"p"},"\u5fc5\u987b")," \u5148\u5b66\u4e60\u8bfe\u7a0b ",(0,o.kt)("inlineCode",{parentName:"p"},"bi")," \u3002"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u4f8b\u5982\uff0c\u5148\u4fee\u8bfe\u7a0b\u5bf9 ",(0,o.kt)("inlineCode",{parentName:"li"},"[0, 1]")," \u8868\u793a\uff1a\u60f3\u8981\u5b66\u4e60\u8bfe\u7a0b ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," \uff0c\u4f60\u9700\u8981\u5148\u5b8c\u6210\u8bfe\u7a0b ",(0,o.kt)("inlineCode",{parentName:"li"},"1")," \u3002")),(0,o.kt)("p",null,"\u8bf7\u4f60\u5224\u65ad\u662f\u5426\u53ef\u80fd\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b\u7684\u5b66\u4e60\uff1f\u5982\u679c\u53ef\u4ee5\uff0c\u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," \uff1b\u5426\u5219\uff0c\u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," \u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anumCourses = 2, prerequisites = [[1,0]]\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a\u603b\u5171\u6709 2 \u95e8\u8bfe\u7a0b\u3002\u5b66\u4e60\u8bfe\u7a0b 1 \u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5b8c\u6210\u8bfe\u7a0b 0 \u3002\u8fd9\u662f\u53ef\u80fd\u7684\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1anumCourses = 2, prerequisites = [[1,0],[0,1]]\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u603b\u5171\u6709 2 \u95e8\u8bfe\u7a0b\u3002\u5b66\u4e60\u8bfe\u7a0b 1 \u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5148\u5b8c\u6210\u200b\u8bfe\u7a0b 0 \uff1b\u5e76\u4e14\u5b66\u4e60\u8bfe\u7a0b 0 \u4e4b\u524d\uff0c\u4f60\u8fd8\u5e94\u5148\u5b8c\u6210\u8bfe\u7a0b 1 \u3002\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n")),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("p",null,"1 <= numCourses <= 105\n0 <= prerequisites.length <= 5000\nprerequisites","[i]",".length == 2\n0 <= ai, bi < numCourses\nprerequisites","[i]"," \u4e2d\u7684\u6240\u6709\u8bfe\u7a0b\u5bf9 \u4e92\u4e0d\u76f8\u540c"),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e00kahn-\u7b97\u6cd5"},"\u65b9\u6cd5\u4e00\uff1akahn \u7b97\u6cd5"),(0,o.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(n+m)"),"\uff0c\u5176\u4e2d n \u4e3a\u8bfe\u7a0b\u6570\uff0cm \u4e3a\u5148\u4fee\u8bfe\u7a0b\u7684\u8981\u6c42\u6570"),(0,o.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(n+m)"),"\uff0c\u90bb\u63a5\u8868\u6240\u9700\u7684\u7a7a\u95f4\u4e3a",(0,o.kt)("inlineCode",{parentName:"p"},"O(n+m)"),"\uff0c\u961f\u5217\u6240\u9700\u7684\u7a7a\u95f4\u4e3a",(0,o.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,o.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a36 ms, \u5728\u6240\u6709 Python3 \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8684.58%\u7684\u7528\u6237"),(0,o.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a15.7 MB, \u5728\u6240\u6709 Python3 \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8664.10%\u7684\u7528\u6237"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\n        adj = collections.defaultdict(list)\n        indegree = collections.defaultdict(int)\n        topo = []\n\n        # 1\u3001\u521b\u5efa\u90bb\u63a5\u8868\u548c\u5165\u5ea6\u8868\n        for a, b in prerequisites:\n            adj[b].append(a)\n            indegree[a] += 1\n\n        # 2\u3001\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u8fdb\u5165\u961f\u5217\n        queue = collections.deque([k for k in range(numCourses) if indegree[k] == 0])\n        while queue:\n            node = queue.popleft()\n            topo.append(node)               # 3\u3001topo\u4e2d\u8bb0\u5f55\u5165\u5ea6\u4e3a0\u7684\u70b9\n            for n_node in adj[node]:\n                indegree[n_node] -= 1       # 4\u3001\u8d70\u5230\u4e00\u4e2a\u70b9\u65f6\u5165\u5ea6\u51cf\u4e00\n                if indegree[n_node] == 0:\n                    queue.append(n_node)    # 5\u3001\u4e0b\u4e00\u4e2a\u70b9\u5165\u5ea6\u4e3a0\uff0c\u53ef\u8fdb\u5165\u961f\u5217\n        \n        # print(topo)\n        return len(topo) == numCourses\n")),(0,o.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a8 ms, \u5728\u6240\u6709 Go \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8694.81%\u7684\u7528\u6237"),(0,o.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a6.2 MB, \u5728\u6240\u6709 Go \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8651.58%\u7684\u7528\u6237"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func canFinish(numCourses int, prerequisites [][]int) bool {\n    adj := map[int][]int{}\n    indegree := map[int]int{}\n    topo := []int{}\n\n    // 1\u3001\u521b\u5efa\u90bb\u63a5\u8868\u548c\u5165\u5ea6\u8868\n    for _, pre := range prerequisites {\n        adj[pre[1]] = append(adj[pre[1]], pre[0])\n        indegree[pre[0]]++\n    }\n    // fmt.Println(adj)\n    // fmt.Println(indegree)\n\n    // 2\u3001\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u8fdb\u5165\u961f\u5217\n    queue := []int{}\n    for k := 0; k < numCourses; k++ {\n        if indegree[k] == 0 {\n            queue = append(queue, k)\n        }\n    }\n    for len(queue) > 0 {\n        node := queue[0]\n        queue = queue[1:]\n        topo = append(topo, node) // 3\u3001topo\u4e2d\u8bb0\u5f55\u5165\u5ea6\u4e3a0\u7684\u70b9\n        for _, n_node := range adj[node] {\n            indegree[n_node]-- // 4\u3001\u8d70\u5230\u4e00\u4e2a\u70b9\u65f6\u5165\u5ea6\u51cf\u4e00\n            if indegree[n_node] == 0 {\n                queue = append(queue, n_node) // 5\u3001\u4e0b\u4e00\u4e2a\u70b9\u5165\u5ea6\u4e3a0\uff0c\u53ef\u8fdb\u5165\u961f\u5217\n            }\n        }\n    }\n\n    return len(topo) == numCourses\n}\n")),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e8cdfs"},"\u65b9\u6cd5\u4e8c\uff1adfs"),(0,o.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a40 ms, \u5728\u6240\u6709 Python3 \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8666.14%\u7684\u7528\u6237"),(0,o.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a17.8 MB, \u5728\u6240\u6709 Python3 \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8624.67%\u7684\u7528\u6237"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\n        adj = collections.defaultdict(list)  # \u90bb\u63a5\u8868\n        flags = collections.defaultdict(int)  # \u6807\u5fd7\u8868\uff0c0\u6ca1\u8bbf\u95ee\u8fc7\uff0c-1\u5df2\u8bbf\u95ee\u8fc7\uff0c1\u5f53\u524d\u6b63\u5728\u8bbf\u95ee\n        topo = []  # \u62d3\u6251\u6392\u5e8f\u7684\u9006\u5e8f\n\n        # \u521b\u5efa\u90bb\u63a5\u8868\n        for a, b in prerequisites:\n            adj[b].append(a)\n\n        def dfs(node):\n            if flags[node] == -1:\n                return True\n            if flags[node] == 1:\n                return False\n\n            flags[node] = 1\n            for n_node in adj[node]:\n                if not dfs(n_node):\n                    return False\n\n            flags[node] = -1\n            topo.append(node)\n            return True\n\n        # \u6bcf\u4e2a\u70b9\u8fdb\u884c\u65e0\u73af\u5224\u65ad\n        for n in range(numCourses):\n            if not dfs(n):\n                return False\n\n        # print(topo[::-1])\n        return True\n")),(0,o.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a12 ms, \u5728\u6240\u6709 Go \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8670.61%\u7684\u7528\u6237"),(0,o.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a6.6 MB, \u5728\u6240\u6709 Go \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8617.14%\u7684\u7528\u6237"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func canFinish(numCourses int, prerequisites [][]int) bool {\n    adj := map[int][]int{} // \u90bb\u63a5\u8868\n    flags := map[int]int{} // \u6807\u5fd7\u8868\uff0c0\u6ca1\u8bbf\u95ee\u8fc7\uff0c-1\u5df2\u8bbf\u95ee\u8fc7\uff0c1\u5f53\u524d\u6b63\u5728\u8bbf\u95ee\n    var topo *[]int        // \u4fdd\u5b58\u9006\u5e8f\u7684\u62d3\u6251\u6392\u5e8f\uff0c\u5176\u5b9e\u7528\u4e2a\u6570\u7ec4\u4e5f\u884c\uff0c\u8fd9\u91cc\u60f3\u8bd5\u8bd5\u6570\u636e\u6307\u9488\n    topo = &[]int{}\n\n    // \u521b\u5efa\u90bb\u63a5\u8868\n    for _, pre := range prerequisites {\n        adj[pre[1]] = append(adj[pre[1]], pre[0])\n    }\n\n    var dfs func(int, *[]int) bool\n    dfs = func(node int, topo *[]int) bool {\n        if flags[node] == -1 {\n            return true\n        }\n        if flags[node] == 1 {\n            return false\n        }\n\n        flags[node] = 1\n        for _, n_node := range adj[node] {\n            if ok := dfs(n_node, topo); !ok {\n                return false\n            }\n        }\n        flags[node] = -1\n        *topo = append(*topo, node)\n        return true\n    }\n    \n  // \u6bcf\u4e2a\u70b9\u8fdb\u884c\u65e0\u73af\u5224\u65ad\n    for n := 0; n < numCourses; n++ {\n        if ok := dfs(n, topo); !ok {\n            return false\n        }\n    }\n    fmt.Println(*topo) // golang \u4f3c\u4e4e\u6ca1\u6709\u9006\u5e8f\u7684\u51fd\u6570\n    return true\n}\n")))}d.isMDXComponent=!0}}]);
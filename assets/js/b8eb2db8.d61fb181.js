"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[50961],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,f=u["".concat(a,".").concat(m)]||u[m]||d[m]||l;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=m;var p={};for(var a in t)hasOwnProperty.call(t,a)&&(p[a]=t[a]);p.originalType=e,p[u]="string"==typeof e?e:i,o[1]=p;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},35915:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const l={},o=void 0,p={unversionedId:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898/\u4e0d\u540c\u8def\u5f84II",id:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898/\u4e0d\u540c\u8def\u5f84II",title:"\u4e0d\u540c\u8def\u5f84II",description:"63. \u4e0d\u540c\u8def\u5f84 II",source:"@site/docs/Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898/63-\u4e0d\u540c\u8def\u5f84II.md",sourceDirName:"Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898",slug:"/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898/\u4e0d\u540c\u8def\u5f84II",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898/\u4e0d\u540c\u8def\u5f84II",draft:!1,tags:[],version:"current",sidebarPosition:63,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"\u4e0d\u540c\u8def\u5f84",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898/\u4e0d\u540c\u8def\u5f84"},next:{title:"\u6700\u5c0f\u8def\u5f84\u548c",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8def\u5f84\u95ee\u9898/\u6700\u5c0f\u8def\u5f84\u548c"}},a={},c=[{value:"63. \u4e0d\u540c\u8def\u5f84 II",id:"63-\u4e0d\u540c\u8def\u5f84-ii",level:3}],s={toc:c};function u(e){let{components:t,...l}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"63-\u4e0d\u540c\u8def\u5f84-ii"},(0,i.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/unique-paths-ii/"},"63. \u4e0d\u540c\u8def\u5f84 II")),(0,i.kt)("p",null,"\u4e00\u4e2a\u673a\u5668\u4eba\u4f4d\u4e8e\u4e00\u4e2a m x n \u7f51\u683c\u7684\u5de6\u4e0a\u89d2 \uff08\u8d77\u59cb\u70b9\u5728\u4e0b\u56fe\u4e2d\u6807\u8bb0\u4e3a \u201cStart\u201d \uff09\u3002"),(0,i.kt)("p",null,"\u673a\u5668\u4eba\u6bcf\u6b21\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\u3002\u673a\u5668\u4eba\u8bd5\u56fe\u8fbe\u5230\u7f51\u683c\u7684\u53f3\u4e0b\u89d2\uff08\u5728\u4e0b\u56fe\u4e2d\u6807\u8bb0\u4e3a \u201cFinish\u201d\uff09\u3002"),(0,i.kt)("p",null,"\u73b0\u5728\u8003\u8651\u7f51\u683c\u4e2d\u6709\u969c\u788d\u7269\u3002\u90a3\u4e48\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u5c06\u4f1a\u6709\u591a\u5c11\u6761\u4e0d\u540c\u7684\u8def\u5f84\uff1f"),(0,i.kt)("p",null,"\u7f51\u683c\u4e2d\u7684\u969c\u788d\u7269\u548c\u7a7a\u4f4d\u7f6e\u5206\u522b\u7528 1 \u548c 0 \u6765\u8868\u793a\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"63",src:n(52867).Z,width:"242",height:"242"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aobstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1a3x3 \u7f51\u683c\u7684\u6b63\u4e2d\u95f4\u6709\u4e00\u4e2a\u969c\u788d\u7269\u3002\n\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u4e00\u5171\u6709 2 \u6761\u4e0d\u540c\u7684\u8def\u5f84\uff1a\n1. \u5411\u53f3 -> \u5411\u53f3 -> \u5411\u4e0b -> \u5411\u4e0b\n2. \u5411\u4e0b -> \u5411\u4e0b -> \u5411\u53f3 -> \u5411\u53f3\n\n\u8f93\u5165\uff1aobstacleGrid = [[0,1],[0,0]]\n\u8f93\u51fa\uff1a1\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"1. \u5b9a\u4e49\u72b6\u6001")),(0,i.kt)("p",null,"\u4e0e\u4e0a\u9898\u4e00\u6837\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"dp[i][j]")," \u4e3a\u5230\u8fbe\u4f4d\u7f6e ",(0,i.kt)("inlineCode",{parentName:"p"},"(i,j)")," \u7684\u4e0d\u540c\u8def\u5f84\u6570\u91cf"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"2. \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b")),(0,i.kt)("p",null,"\u4e0e\u4e0a\u9898\u7684\u4e0d\u540c\uff1a\u6709\u969c\u788d\u7269\uff0c\u8868\u660e\u5f53\u524d\u4f4d\u7f6e\u4ece\u4e0a\u65b9\u6216\u5de6\u8fb9\u8fc7\u4e0d\u6765\uff0c\u4e5f\u53bb\u4e0d\u4e86\u4e0b\u65b9\u6216\u53f3\u8fb9\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"dp[i][j] = 0")),(0,i.kt)("p",null,"\u673a\u5668\u4eba\u6bcf\u6b21\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\uff0c\u8868\u660e",(0,i.kt)("strong",{parentName:"p"},"\u5f53\u524d\u4f4d\u7f6e\u53ef\u80fd\u4ece\u4e0a\u65b9\u6216\u8005\u5de6\u8fb9\u8d70\u6765\u7684")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5f53\u524d\u4f4d\u7f6e\u53ea\u80fd\u4ece\u300c\u5de6\u8fb9\u300d\u8d70\u6765\uff0c\u5373\u7b2c\u4e00\u884c\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"dp[i][j] = dp[i][j-1]")),(0,i.kt)("li",{parentName:"ul"},"\u5f53\u524d\u4f4d\u7f6e\u53ea\u80fd\u4ece\u300c\u4e0a\u65b9\u300d\u8d70\u6765\uff0c\u5373\u7b2c\u4e00\u5217\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"dp[i][j] = dp[i-1][j]")),(0,i.kt)("li",{parentName:"ul"},"\u5f53\u524d\u4f4d\u7f6e\u300c\u5373\u80fd\u4ece\u4e0a\u65b9\u53c8\u80fd\u4ece\u5de6\u8fb9\u300d\u8d70\u6765\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"dp[i][j] = dp[i][j-1] + dp[i-1][j]"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"3. \u521d\u59cb\u5316")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"dp[0][0] = 1"),"  \u8d77\u70b9\u4e3a 1"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"4. \u8f93\u51fa")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"dp[m-1][n-1] ")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u7a7a\u95f4\u4f18\u5316")),(0,i.kt)("p",null,"\u4e0d\u4f18\u5316"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u590d\u6742\u5ea6\u5206\u6790")),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(m * n)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(m * n)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        if (obstacleGrid[0][0] == 1) return 0;\n\n        int rows = obstacleGrid.size();\n        int cols = obstacleGrid[0].size();\n        vector<vector<int>> dp(rows, vector<int>(cols, 0));\n        dp[0][0] = 1;\n\n        for (int r = 0; r < rows; r++) {\n            for (int c = 0; c < cols; c++) {\n                if (obstacleGrid[r][c] == 1) {\n                    dp[r][c] == 0;\n                    continue;\n                }\n                if (r == 0 && c > 0) {  // \u7b2c\u4e00\u884c\n                    dp[r][c] = dp[r][c - 1];\n                } else if (r > 0 && c == 0) {  // \u7b2c\u4e00\u5217\n                    dp[r][c] = dp[r - 1][c];\n                } else if (r > 0 && c > 0) {\n                    dp[r][c] = dp[r][c - 1] + dp[r - 1][c];\n                }\n            }\n        }\n\n        return dp[rows - 1][cols - 1];\n    }\n};\n")))}u.isMDXComponent=!0},52867:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/63-ec697f0f95439738fbac997f9c0af950.png"}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[65853],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(t),m=a,f=c["".concat(l,".").concat(m)]||c[m]||u[m]||i;return t?r.createElement(f,o(o({ref:n},d),{},{components:t})):r.createElement(f,o({ref:n},d))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},32125:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const i={},o=void 0,p={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u8def\u5f84>-\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u8def\u5f84>-\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9",title:"<\u6b27\u62c9\u8def\u5f84>-\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9",description:"2097. \u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/2097-<\u6b27\u62c9\u8def\u5f84>-\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u8def\u5f84>-\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u8def\u5f84>-\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9",draft:!1,tags:[],version:"current",sidebarPosition:2097,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u4e8c\u5206\u56fe>-\u5224\u65ad\u4e8c\u5206\u56fe",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u4e8c\u5206\u56fe>-\u5224\u65ad\u4e8c\u5206\u56fe"},next:{title:"num\u548carr\u4e92\u8f6c",permalink:"/docs/Algorithm/\u6570\u5b66/\u6570\u5b66\u8fd0\u7b97/num\u548carr\u4e92\u8f6c"}},l={},s=[{value:"2097. \u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9",id:"2097-\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9",level:4},{value:"\u6a21\u7248\u9898",id:"\u6a21\u7248\u9898",level:2}],d={toc:s};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"2097-\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9"},(0,a.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/valid-arrangement-of-pairs/"},"2097. \u5408\u6cd5\u91cd\u65b0\u6392\u5217\u6570\u5bf9")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u4e0b\u6807\u4ece ",(0,a.kt)("strong",{parentName:"p"},"0")," \u5f00\u59cb\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"pairs")," \uff0c\u5176\u4e2d ",(0,a.kt)("inlineCode",{parentName:"p"},"pairs[i] = [starti, endi]")," \u3002\u5982\u679c ",(0,a.kt)("inlineCode",{parentName:"p"},"pairs")," \u7684\u4e00\u4e2a\u91cd\u65b0\u6392\u5217\uff0c\u6ee1\u8db3\u5bf9\u6bcf\u4e00\u4e2a\u4e0b\u6807 ",(0,a.kt)("inlineCode",{parentName:"p"},"i")," \uff08 ",(0,a.kt)("inlineCode",{parentName:"p"},"1 <= i < pairs.length")," \uff09\u90fd\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"endi-1 == starti")," \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba4\u4e3a\u8fd9\u4e2a\u91cd\u65b0\u6392\u5217\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"pairs")," \u7684\u4e00\u4e2a ",(0,a.kt)("strong",{parentName:"p"},"\u5408\u6cd5\u91cd\u65b0\u6392\u5217")," \u3002"),(0,a.kt)("p",null,"\u8bf7\u4f60\u8fd4\u56de ",(0,a.kt)("strong",{parentName:"p"},"\u4efb\u610f\u4e00\u4e2a")," ",(0,a.kt)("inlineCode",{parentName:"p"},"pairs")," \u7684\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a"),"\u6570\u636e\u4fdd\u8bc1\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"pairs")," \u7684\u5408\u6cd5\u91cd\u65b0\u6392\u5217\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1apairs = [[5,1],[4,5],[11,9],[9,4]]\n\u8f93\u51fa\uff1a[[11,9],[9,4],[4,5],[5,1]]\n\u89e3\u91ca\uff1a\n\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u91cd\u65b0\u6392\u5217\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a endi-1 \u90fd\u7b49\u4e8e starti\xa0\u3002\nend0 = 9 == 9 = start1 \nend1 = 4 == 4 = start2\nend2 = 5 == 5 = start3\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1apairs = [[1,3],[3,2],[2,1]]\n\u8f93\u51fa\uff1a[[1,3],[3,2],[2,1]]\n\u89e3\u91ca\uff1a\n\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u91cd\u65b0\u6392\u5217\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a endi-1 \u90fd\u7b49\u4e8e starti\xa0\u3002\nend0 = 3 == 3 = start1\nend1 = 2 == 2 = start2\n\u91cd\u65b0\u6392\u5217\u540e\u7684\u6570\u7ec4 [[2,1],[1,3],[3,2]] \u548c [[3,2],[2,1],[1,3]] \u90fd\u662f\u5408\u6cd5\u7684\u3002\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1apairs = [[1,2],[1,3],[2,1]]\n\u8f93\u51fa\uff1a[[1,2],[2,1],[1,3]]\n\u89e3\u91ca\uff1a\n\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u91cd\u65b0\u6392\u5217\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a endi-1 \u90fd\u7b49\u4e8e starti\xa0\u3002\nend0 = 2 == 2 = start1\nend1 = 1 == 1 = start2\n\n")),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("p",null,"1 <= pairs.length <= 105\npairs","[i]",".length == 2\n0 <= starti, endi <= 109\nstarti != endi\npairs \u4e2d\u4e0d\u5b58\u5728\u4e00\u6a21\u4e00\u6837\u7684\u6570\u5bf9\u3002\n\u81f3\u5c11 \u5b58\u5728 \u4e00\u4e2a\u5408\u6cd5\u7684 pairs \u91cd\u65b0\u6392\u5217\u3002"),(0,a.kt)("h2",{id:"\u6a21\u7248\u9898"},"\u6a21\u7248\u9898"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def validArrangement(self, pairs: List[List[int]]) -> List[List[int]]:\n\n        # 1\u3001\u5efa\u7acb\u90bb\u63a5\u8868\u3001\u5165\u5ea6\u8868\u3001\u51fa\u5ea6\u8868\n        adj = collections.defaultdict(list)\n        indeg = collections.defaultdict(int)\n        outdeg = collections.defaultdict(int)\n        for p in pairs:\n            adj[p[0]].append(p[1])\n            indeg[p[1]] += 1\n            outdeg[p[0]] += 1\n\n        # 2\u3001\u627e\u8d77\u70b9\n        start = pairs[0][0]\n        for i in outdeg:\n            if outdeg[i] == indeg[i] + 1:\n                start = i\n                break\n\n        # 3\u3001dfs\u627e\u8def\u5f84\n        ans = []\n        def dfs(node):\n            while adj[node]:\n                v = adj[node].pop()\n                dfs(v)\n                ans.append([node, v])\n        dfs(start)\n        \n        # 4\u3001\u5c06\u8def\u5f84\u9006\u56de\u6765\n        return ans[::-1]\n")))}c.isMDXComponent=!0}}]);
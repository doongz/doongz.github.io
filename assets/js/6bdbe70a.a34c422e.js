"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[99768],{3905:(n,e,t)=>{t.d(e,{Zo:()=>o,kt:()=>k});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var m=r.createContext({}),u=function(n){var e=r.useContext(m),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},o=function(n){var e=u(n.components);return r.createElement(m.Provider,{value:e},n.children)},s="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,l=n.originalType,m=n.parentName,o=p(n,["components","mdxType","originalType","parentName"]),s=u(t),d=a,k=s["".concat(m,".").concat(d)]||s[d]||c[d]||l;return t?r.createElement(k,i(i({ref:e},o),{},{components:t})):r.createElement(k,i({ref:e},o))}));function k(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var l=t.length,i=new Array(l);i[0]=d;var p={};for(var m in e)hasOwnProperty.call(e,m)&&(p[m]=e[m]);p.originalType=n,p[s]="string"==typeof n?n:a,i[1]=p;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},68614:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const l={},i=void 0,p={unversionedId:"Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/415-43-67-<\u6a21\u62df>-\u5b57\u7b26\u4e32\u76f8\u52a0\u76f8\u4e58",id:"Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/415-43-67-<\u6a21\u62df>-\u5b57\u7b26\u4e32\u76f8\u52a0\u76f8\u4e58",title:"415-43-67-<\u6a21\u62df>-\u5b57\u7b26\u4e32\u76f8\u52a0\u76f8\u4e58",description:"415. \u5b57\u7b26\u4e32\u76f8\u52a0",source:"@site/docs/Algorithm/5-\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/415-43-67-<\u6a21\u62df>-\u5b57\u7b26\u4e32\u76f8\u52a0\u76f8\u4e58.md",sourceDirName:"Algorithm/5-\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97",slug:"/Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/415-43-67-<\u6a21\u62df>-\u5b57\u7b26\u4e32\u76f8\u52a0\u76f8\u4e58",permalink:"/docs/Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/415-43-67-<\u6a21\u62df>-\u5b57\u7b26\u4e32\u76f8\u52a0\u76f8\u4e58",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"168-171-<\u8fdb\u5236\u8f6c\u5316>-Excel\u8868\u5217\u540d\u79f0\u5e8f\u53f7\u8f6c\u6362",permalink:"/docs/Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/168-171-<\u8fdb\u5236\u8f6c\u5316>-Excel\u8868\u5217\u540d\u79f0\u5e8f\u53f7\u8f6c\u6362"},next:{title:"\u5251\u6307Offer-16-<\u5feb\u901f\u5e42>-\u6570\u503c\u7684\u6574\u6570\u6b21\u65b9",permalink:"/docs/Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/\u5251\u6307Offer-16-<\u5feb\u901f\u5e42>-\u6570\u503c\u7684\u6574\u6570\u6b21\u65b9"}},m={},u=[{value:"415. \u5b57\u7b26\u4e32\u76f8\u52a0",id:"415-\u5b57\u7b26\u4e32\u76f8\u52a0",level:4},{value:"43. \u5b57\u7b26\u4e32\u76f8\u4e58",id:"43-\u5b57\u7b26\u4e32\u76f8\u4e58",level:4},{value:"67. \u4e8c\u8fdb\u5236\u6c42\u548c",id:"67-\u4e8c\u8fdb\u5236\u6c42\u548c",level:4}],o={toc:u};function s(n){let{components:e,...l}=n;return(0,a.kt)("wrapper",(0,r.Z)({},o,l,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"415-\u5b57\u7b26\u4e32\u76f8\u52a0"},(0,a.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/add-strings/"},"415. \u5b57\u7b26\u4e32\u76f8\u52a0")),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"num1")," \u548c",(0,a.kt)("inlineCode",{parentName:"p"},"num2")," \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u540c\u6837\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u3002"),(0,a.kt)("p",null,"\u4f60\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5167\u5efa\u7684\u7528\u4e8e\u5904\u7406\u5927\u6574\u6570\u7684\u5e93\uff08\u6bd4\u5982 ",(0,a.kt)("inlineCode",{parentName:"p"},"BigInteger"),"\uff09\uff0c \u4e5f\u4e0d\u80fd\u76f4\u63a5\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u5f62\u5f0f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anum1 = "11", num2 = "123"\n\u8f93\u51fa\uff1a"134"\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1anum1 = "456", num2 = "77"\n\u8f93\u51fa\uff1a"533"\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1anum1 = "0", num2 = "0"\n\u8f93\u51fa\uff1a"0"\n')),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("p",null,"1 <= num1.length, num2.length <= 104\nnum1 \u548cnum2 \u90fd\u53ea\u5305\u542b\u6570\u5b57 0-9\nnum1 \u548cnum2 \u90fd\u4e0d\u5305\u542b\u4efb\u4f55\u524d\u5bfc\u96f6"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\u672c\u9898\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e24\u4e2a\u5927\u6574\u6570",(0,a.kt)("strong",{parentName:"p"},"\u6a21\u62df\u300c\u7ad6\u5f0f\u52a0\u6cd5\u300d"),"\u7684\u8fc7\u7a0b\u3002\u5982\u540c\u6211\u4eec\u5728\u7eb8\u4e0a\u5bf9\u4e24\u4e2a\u6574\u6570\u76f8\u52a0\u7684\u64cd\u4f5c\uff0c\u76f8\u540c\u6570\u4f4d\u5bf9\u9f50\uff0c\u4ece\u4f4e\u5230\u9ad8\u9010\u4f4d\u76f8\u52a0\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u548c\u8d85\u8fc7 10\uff0c\u5219\u5411\u9ad8\u4f4d\u8fdb\u4e00\u4f4d\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(81888).Z,width:"2000",height:"1063"})),(0,a.kt)("p",null,"\u5177\u4f53\u5b9e\u73b0\u4e5f\u4e0d\u590d\u6742\uff0c\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488 i \u548c j \u5206\u522b\u6307\u5411 num1\u548c num 2\u7684\u672b\u5c3e\uff0c\u5373\u6700\u4f4e\u4f4d\uff0c"),(0,a.kt)("p",null,"\u540c\u65f6\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf add \u7ef4\u62a4\u5f53\u524d\u662f\u5426\u6709\u8fdb\u4f4d\uff0c\u7136\u540e\u4ece\u672b\u5c3e\u5230\u5f00\u5934\u9010\u4f4d\u76f8\u52a0\u5373\u53ef\u3002\u4f60\u53ef\u80fd\u4f1a\u60f3\u4e24\u4e2a\u6570\u5b57\u4f4d\u6570\u4e0d\u540c\u600e\u4e48\u5904\u7406\uff0c\u8fd9\u91cc\u6211\u4eec\u7edf\u4e00\u5728\u6307\u9488\u5f53\u524d\u4e0b\u6807\u5904\u4e8e\u8d1f\u6570\u7684\u65f6\u5019\u8fd4\u56de 0\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u7b49\u4ef7\u4e8e\u5bf9\u4f4d\u6570\u8f83\u77ed\u7684\u6570\u5b57\u8fdb\u884c\u4e86\u8865\u96f6\u64cd\u4f5c"),"\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u9664\u53bb\u4e24\u4e2a\u6570\u5b57\u4f4d\u6570\u4e0d\u540c\u60c5\u51b5\u7684\u5904\u7406\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def addStrings(self, num1: str, num2: str) -> str:\n        i = len(num1) - 1\n        j = len(num2) - 1\n        carry = 0\n        ans = ""\n        while i >= 0 or j >= 0 or carry > 0:\n            # \u5982\u679c\u4e24\u4e2a\u6307\u9488\u8fd8\u6ca1\u6709\u904d\u5386\u5b8c\uff0c\u6216\u8005\u6700\u540e\u4e00\u6b21\u76f8\u52a0\u540e\u9700\u8981\u8fdb\u4f4d\u65f6\n            x = int(num1[i]) if i >= 0 else 0\n            y = int(num2[j]) if j >= 0 else 0\n            tmp = x + y + carry\n            ans = str(tmp % 10) + ans\n            carry = tmp // 10\n            i -= 1\n            j -= 1\n        return ans\n')),(0,a.kt)("h4",{id:"43-\u5b57\u7b26\u4e32\u76f8\u4e58"},(0,a.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/multiply-strings/"},"43. \u5b57\u7b26\u4e32\u76f8\u4e58")),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e24\u4e2a\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"num1")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"num2"),"\uff0c\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"num1")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"num2")," \u7684\u4e58\u79ef\uff0c\u5b83\u4eec\u7684\u4e58\u79ef\u4e5f\u8868\u793a\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a"),"\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5185\u7f6e\u7684 BigInteger \u5e93\u6216\u76f4\u63a5\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u6574\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1:\n\n\u8f93\u5165: num1 = "2", num2 = "3"\n\u8f93\u51fa: "6"\n\n\u793a\u4f8b\xa02:\n\n\u8f93\u5165: num1 = "123", num2 = "456"\n\u8f93\u51fa: "56088"\n')),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("p",null,"1 <= num1.length, num2.length <= 200\nnum1 \u548c num2 \u53ea\u80fd\u7531\u6570\u5b57\u7ec4\u6210\u3002\nnum1 \u548c num2 \u90fd\u4e0d\u5305\u542b\u4efb\u4f55\u524d\u5bfc\u96f6\uff0c\u9664\u4e86\u6570\u5b570\u672c\u8eab\u3002"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\u627f\u63a5\u4e0a\u9898\uff0c\u6bcf\u4f4d\u76f8\u4e58\uff0c\u6700\u540e\u7d2f\u52a0"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"mutiply",src:t(5545).Z,width:"966",height:"286"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        if num1 == "0" or num2 == "0":\n            return "0"\n        sz_1 = len(num1)\n        sz_2 = len(num2)\n        \n        ans = ""\n        for j in range(sz_2-1, -1, -1):\n            res = ""      # num2\u4e2d\u6bcf\u4e00\u4f4d\u4e0enum1\u76f8\u4e58\u7684\u7ed3\u679c\n            carry = 0\n            for i in range(sz_1-1, -1, -1):\n                tmp = int(num2[j]) * int(num1[i]) + carry\n                res = str(tmp % 10) + res\n                carry = tmp // 10\n            res += "0" * (sz_2-1-j)\n            if carry > 0:\n                res = str(carry) + res \n            ans = self.add(ans, res)\n        return ans\n\n    def add(self, num1, num2):\n        i = len(num1) - 1\n        j = len(num2) - 1\n        carry = 0\n        ans = ""\n        while i >= 0 or j >= 0 or carry > 0:\n            # \u5982\u679c\u4e24\u4e2a\u6307\u9488\u8fd8\u6ca1\u6709\u904d\u5386\u5b8c\uff0c\u6216\u8005\u6700\u540e\u4e00\u6b21\u76f8\u52a0\u540e\u9700\u8981\u8fdb\u4f4d\u65f6\n            x = int(num1[i]) if i >= 0 else 0\n            y = int(num2[j]) if j >= 0 else 0\n            tmp = x + y + carry\n            ans = str(tmp % 10) + ans\n            carry = tmp // 10\n            i -= 1\n            j -= 1\n        return ans\n\n')),(0,a.kt)("h4",{id:"67-\u4e8c\u8fdb\u5236\u6c42\u548c"},(0,a.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/add-binary/"},"67. \u4e8c\u8fdb\u5236\u6c42\u548c")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"b")," \uff0c\u4ee5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u793a\u4f8b\xa01\uff1a\n\n\u8f93\u5165:a = "11", b = "1"\n\u8f93\u51fa\uff1a"100"\n\n\u793a\u4f8b\xa02\uff1a\n\n\u8f93\u5165\uff1aa = "1010", b = "1011"\n\u8f93\u51fa\uff1a"10101"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= a.length, b.length <= 104")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"a")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"b")," \u4ec5\u7531\u5b57\u7b26 ",(0,a.kt)("inlineCode",{parentName:"li"},"'0'")," \u6216 ",(0,a.kt)("inlineCode",{parentName:"li"},"'1'")," \u7ec4\u6210"),(0,a.kt)("li",{parentName:"ul"},"\u5b57\u7b26\u4e32\u5982\u679c\u4e0d\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},'"0"')," \uff0c\u5c31\u4e0d\u542b\u524d\u5bfc\u96f6")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6ee1\u4e8c\u8fdb\u4e00")),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)"),(0,a.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def addBinary(self, a: str, b: str) -> str:\n        i = len(a) - 1\n        j = len(b) - 1\n        ans = ""\n        carry = 0\n        while i >= 0 or j >= 0 or carry > 0:\n            x = int(a[i]) if i >= 0 else 0\n            y = int(b[j]) if j >= 0 else 0\n            tmp = x + y + carry\n            ans = str(tmp % 2) + ans\n            carry = tmp // 2\n            \n            i -= 1\n            j -= 1\n        return ans\n')))}s.isMDXComponent=!0},81888:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/add-ecefe1e619ea13d137903d6c8b074b77.png"},5545:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/mutiply-e22d3d86ea8463c30879b5e466730883.png"}}]);
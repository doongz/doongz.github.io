"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[32446],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>k});var a=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var p=a.createContext({}),i=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):u(u({},e),n)),t},c=function(n){var e=i(n.components);return a.createElement(p.Provider,{value:e},n.children)},o="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,l=n.originalType,p=n.parentName,c=s(n,["components","mdxType","originalType","parentName"]),o=i(t),d=r,k=o["".concat(p,".").concat(d)]||o[d]||m[d]||l;return t?a.createElement(k,u(u({ref:e},c),{},{components:t})):a.createElement(k,u({ref:e},c))}));function k(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var l=t.length,u=new Array(l);u[0]=d;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=n,s[o]="string"==typeof n?n:r,u[1]=s;for(var i=2;i<l;i++)u[i]=t[i];return a.createElement.apply(null,u)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},97079:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>u,default:()=>o,frontMatter:()=>l,metadata:()=>s,toc:()=>i});var a=t(87462),r=(t(67294),t(3905));const l={},u="\u7ed3\u6784\u4f53",s={unversionedId:"Skill/C/\u57fa\u7840\u77e5\u8bc6/\u7ed3\u6784\u4f53",id:"Skill/C/\u57fa\u7840\u77e5\u8bc6/\u7ed3\u6784\u4f53",title:"\u7ed3\u6784\u4f53",description:"\u5728C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u4f53\uff08Struct\uff09\u6765\u5b58\u653e\u4e00\u7ec4\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e3a\uff1a",source:"@site/docs/Skill/C/1-\u57fa\u7840\u77e5\u8bc6/08-\u7ed3\u6784\u4f53.md",sourceDirName:"Skill/C/1-\u57fa\u7840\u77e5\u8bc6",slug:"/Skill/C/\u57fa\u7840\u77e5\u8bc6/\u7ed3\u6784\u4f53",permalink:"/docs/Skill/C/\u57fa\u7840\u77e5\u8bc6/\u7ed3\u6784\u4f53",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"skillSidebar",previous:{title:"\u6307\u9488",permalink:"/docs/Skill/C/\u57fa\u7840\u77e5\u8bc6/\u6307\u9488"},next:{title:"\u6587\u4ef6\u64cd\u4f5c",permalink:"/docs/Skill/C/\u57fa\u7840\u77e5\u8bc6/\u6587\u4ef6\u64cd\u4f5c"}},p={},i=[{value:"\u4e00\u3001\u57fa\u7840",id:"\u4e00\u57fa\u7840",level:2},{value:"1\u3001\u7ed3\u6784\u4f53\u53d8\u91cf",id:"1\u7ed3\u6784\u4f53\u53d8\u91cf",level:3},{value:"2\u3001\u6210\u5458\u7684\u83b7\u53d6\u548c\u8d4b\u503c",id:"2\u6210\u5458\u7684\u83b7\u53d6\u548c\u8d4b\u503c",level:3},{value:"\u4e8c\u3001\u7ed3\u6784\u4f53\u6570\u7ec4",id:"\u4e8c\u7ed3\u6784\u4f53\u6570\u7ec4",level:2},{value:"\u4e09\u3001\u7ed3\u6784\u4f53\u6307\u9488\uff08\u6307\u5411\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff09",id:"\u4e09\u7ed3\u6784\u4f53\u6307\u9488\u6307\u5411\u7ed3\u6784\u4f53\u7684\u6307\u9488",level:2},{value:"1\u3001\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458",id:"1\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458",level:3},{value:"2\u3001\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570",id:"2\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570",level:3},{value:"3\u3001\u7ed3\u6784\u4f53\u4e2d\u6709\u5b57\u7b26\u4e32\u6570\u7ec4",id:"3\u7ed3\u6784\u4f53\u4e2d\u6709\u5b57\u7b26\u4e32\u6570\u7ec4",level:3},{value:"\u56db\u3001\u51fd\u6570\u8fd4\u56de\u7ed3\u6784\u4f53\u7c7b\u578b",id:"\u56db\u51fd\u6570\u8fd4\u56de\u7ed3\u6784\u4f53\u7c7b\u578b",level:2},{value:"\u4e94\u3001\u679a\u4e3e\u7c7b\u578b\uff08C\u8bed\u8a00enum\u7528\u6cd5\uff09",id:"\u4e94\u679a\u4e3e\u7c7b\u578bc\u8bed\u8a00enum\u7528\u6cd5",level:2},{value:"\u516d\u3001\u5171\u7528\u4f53\uff08C\u8bed\u8a00union\u7528\u6cd5\uff09",id:"\u516d\u5171\u7528\u4f53c\u8bed\u8a00union\u7528\u6cd5",level:2},{value:"1\u3001\u5171\u7528\u4f53\u5b9a\u4e49\u548c\u4f7f\u7528",id:"1\u5171\u7528\u4f53\u5b9a\u4e49\u548c\u4f7f\u7528",level:3},{value:"2\u3001\u5171\u7528\u4f53\u7684\u5e94\u7528",id:"2\u5171\u7528\u4f53\u7684\u5e94\u7528",level:3},{value:"\u4e03\u3001\u4f4d\u57df\uff08\u4f4d\u6bb5\uff09",id:"\u4e03\u4f4d\u57df\u4f4d\u6bb5",level:2},{value:"\u4f4d\u57df\u7684\u5b58\u50a8",id:"\u4f4d\u57df\u7684\u5b58\u50a8",level:3},{value:"\u65e0\u540d\u4f4d\u57df",id:"\u65e0\u540d\u4f4d\u57df",level:3}],c={toc:i};function o(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u7ed3\u6784\u4f53"},"\u7ed3\u6784\u4f53"),(0,r.kt)("p",null,"\u5728C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528",(0,r.kt)("strong",{parentName:"p"},"\u7ed3\u6784\u4f53\uff08Struct\uff09"),"\u6765\u5b58\u653e\u4e00\u7ec4\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct \u7ed3\u6784\u4f53\u540d{\n    \u7ed3\u6784\u4f53\u6240\u5305\u542b\u7684\u53d8\u91cf\u6216\u6570\u7ec4\n};\n")),(0,r.kt)("p",null,"\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u96c6\u5408\uff0c\u5b83\u91cc\u9762\u5305\u542b\u4e86\u591a\u4e2a\u53d8\u91cf\u6216\u6570\u7ec4\uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u53ef\u4ee5\u76f8\u540c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u540c\uff0c\u6bcf\u4e2a\u8fd9\u6837\u7684\u53d8\u91cf\u6216\u6570\u7ec4\u90fd\u79f0\u4e3a\u7ed3\u6784\u4f53\u7684\u6210\u5458\uff08Member\uff09\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5b66\u4e60\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n};\n")),(0,r.kt)("p",null,"\u7ed3\u6784\u4f53\u6210\u5458\u7684\u5b9a\u4e49\u65b9\u5f0f\u4e0e\u53d8\u91cf\u548c\u6570\u7ec4\u7684\u5b9a\u4e49\u65b9\u5f0f\u76f8\u540c\uff0c",(0,r.kt)("strong",{parentName:"p"},"\u4e0d\u80fd\u521d\u59cb\u5316"),"\u3002"),(0,r.kt)("p",null,"\u50cf int\u3001float\u3001char \u7b49\u662f\u7531C\u8bed\u8a00\u672c\u8eab\u63d0\u4f9b\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4e0d\u80fd\u518d\u8fdb\u884c\u5206\u62c6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a",(0,r.kt)("strong",{parentName:"p"},"\u57fa\u672c\u6570\u636e\u7c7b\u578b"),"\uff1b\u800c\u7ed3\u6784\u4f53\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u57fa\u672c\u7c7b\u578b\u7684\u6570\u636e\uff0c",(0,r.kt)("strong",{parentName:"p"},"\u4e5f\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u7684\u7ed3\u6784\u4f53"),"\uff0c\u6211\u4eec\u5c06\u5b83\u79f0\u4e3a",(0,r.kt)("strong",{parentName:"p"},"\u590d\u6742\u6570\u636e\u7c7b\u578b\u6216\u6784\u9020\u6570\u636e\u7c7b\u578b"),"\u3002"),(0,r.kt)("h2",{id:"\u4e00\u57fa\u7840"},"\u4e00\u3001\u57fa\u7840"),(0,r.kt)("h3",{id:"1\u7ed3\u6784\u4f53\u53d8\u91cf"},"1\u3001\u7ed3\u6784\u4f53\u53d8\u91cf"),(0,r.kt)("p",null,"\u65e2\u7136\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u5b83\u6765\u5b9a\u4e49\u53d8\u91cf\u3002\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu stu1, stu2;\n")),(0,r.kt)("p",null,"\u6ce8\u610f\u5173\u952e\u5b57",(0,r.kt)("inlineCode",{parentName:"p"},"struct"),"\u4e0d\u80fd\u5c11\u3002"),(0,r.kt)("p",null,"\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u540c\u65f6\u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5b66\u4e60\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stu1, stu2;\n")),(0,r.kt)("p",null,"\u5982\u679c\u53ea\u9700\u8981 stu1\u3001stu2 \u4e24\u4e2a\u53d8\u91cf\uff0c\u540e\u9762\u4e0d\u9700\u8981\u518d\u4f7f\u7528\u7ed3\u6784\u4f53\u540d\u5b9a\u4e49\u5176\u4ed6\u53d8\u91cf\uff0c\u90a3\u4e48\u5728\u5b9a\u4e49\u65f6\u4e5f\u53ef\u4ee5\u4e0d\u7ed9\u51fa\u7ed3\u6784\u4f53\u540d\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct{  //\u6ca1\u6709\u5199 stu\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5b66\u4e60\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stu1, stu2;\n")),(0,r.kt)("p",null,"\u7406\u8bba\u4e0a\u8bb2\u7ed3\u6784\u4f53\u7684\u5404\u4e2a\u6210\u5458\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u548c\u6570\u7ec4\u975e\u5e38\u7c7b\u4f3c\uff0c\u4f8b\u5982\u4e0a\u9762\u7684\u7ed3\u6784\u4f53\u53d8\u91cf stu1\u3001stu2 \u7684\u5185\u5b58\u5206\u5e03\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5171\u5360\u7528 4+4+4+1+4 = 17 \u4e2a\u5b57\u8282\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://c.biancheng.net/uploads/allimg/190118/150GQ243-0.jpg",alt:"img"})),(0,r.kt)("p",null,"\u4f46\u662f\u5728\u7f16\u8bd1\u5668\u7684\u5177\u4f53\u5b9e\u73b0\u4e2d\uff0c\u5404\u4e2a\u6210\u5458\u4e4b\u95f4\u53ef\u80fd\u4f1a\u5b58\u5728\u7f1d\u9699\uff0c\u5bf9\u4e8e stu1\u3001stu2\uff0c\u6210\u5458\u53d8\u91cf group \u548c score \u4e4b\u95f4\u5c31\u5b58\u5728 3 \u4e2a\u5b57\u8282\u7684\u7a7a\u767d\u586b\u5145\uff08\u89c1\u4e0b\u56fe\uff09\u3002\u8fd9\u6837\u7b97\u6765\uff0cstu1\u3001stu2 \u5176\u5b9e\u5360\u7528\u4e86 17 + 3 = 20 \u4e2a\u5b57\u8282\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"http://c.biancheng.net/uploads/allimg/190118/150GUE0-1.jpg",alt:"img"})),(0,r.kt)("h3",{id:"2\u6210\u5458\u7684\u83b7\u53d6\u548c\u8d4b\u503c"},"2\u3001\u6210\u5458\u7684\u83b7\u53d6\u548c\u8d4b\u503c"),(0,r.kt)("p",null,"\u7ed3\u6784\u4f53\u548c\u6570\u7ec4\u7c7b\u4f3c\uff0c\u4e5f\u662f\u4e00\u7ec4\u6570\u636e\u7684\u96c6\u5408\uff0c\u6574\u4f53\u4f7f\u7528\u6ca1\u6709\u592a\u5927\u7684\u610f\u4e49\u3002\u6570\u7ec4\u4f7f\u7528\u4e0b\u6807",(0,r.kt)("inlineCode",{parentName:"p"},"[ ]"),"\u83b7\u53d6\u5355\u4e2a\u5143\u7d20\uff0c\u7ed3\u6784\u4f53\u4f7f\u7528\u70b9\u53f7",(0,r.kt)("inlineCode",{parentName:"p"},"."),"\u83b7\u53d6\u5355\u4e2a\u6210\u5458\u3002\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458\u7684\u4e00\u822c\u683c\u5f0f\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"\u7ed3\u6784\u4f53\u53d8\u91cf\u540d.\u6210\u5458\u540d;\n")),(0,r.kt)("p",null,"\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u83b7\u53d6\u6210\u5458\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u6210\u5458\u8d4b\u503c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <string.h>\n\nstruct STU {\n  char *name;  // \u59d3\u540d\n  int num;     // \u5b66\u53f7\n  char cls[5]; // \u73ed\u7ea7\n};\n\nint main() {\n  struct STU stu;\n\n  //\u7ed9\u7ed3\u6784\u4f53\u6210\u5458\u8d4b\u503c\n  stu.name = "Tom";\n  stu.num = 12;\n  // stu.cls = "abc"; // error: assignment to expression with array type\n  strcpy(stu.cls, "abc");\n\n  //\u8bfb\u53d6\u7ed3\u6784\u4f53\u6210\u5458\u7684\u503c\n  printf("name:%s, num:%d, cls:%s\\n", stu.name, stu.num, stu.cls);\n  // name:Tom, num:12, cls:abc\n\n  struct STU *stup = &stu;\n  stup->name = "Bob";\n  stup->num = 9;\n  //   stup->cls = "efg"; // error: assignment to expression with array type\n  strcpy(stup->cls, "efg");\n\n  printf("name:%s, num:%d, cls:%s\\n", stup->name, stup->num, stup->cls);\n  // name:Bob, num:9, cls:efg\n  return 0;\n}\n')),(0,r.kt)("p",null,"\u9664\u4e86\u53ef\u4ee5\u5bf9\u6210\u5458\u8fdb\u884c\u9010\u4e00\u8d4b\u503c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u6574\u4f53\u8d4b\u503c\uff0c\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct{\n    char *name;  //\u59d3\u540d\n    int num;  //\u5b66\u53f7\n    int age;  //\u5e74\u9f84\n    char group;  //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stu1, stu2 = { \"Tom\", 12, 18, 'A', 136.5 };\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\uff0c\u662f\u521b\u5efa\u53d8\u91cf\u7684\u6a21\u677f\uff0c\u4e0d\u5360\u7528\u5185\u5b58\u7a7a\u95f4\uff1b\u7ed3\u6784\u4f53\u53d8\u91cf\u624d\u5305\u542b\u4e86\u5b9e\u5b9e\u5728\u5728\u7684\u6570\u636e\uff0c\u9700\u8981\u5185\u5b58\u7a7a\u95f4\u6765\u5b58\u50a8"),"\u3002"),(0,r.kt)("h2",{id:"\u4e8c\u7ed3\u6784\u4f53\u6570\u7ec4"},"\u4e8c\u3001\u7ed3\u6784\u4f53\u6570\u7ec4"),(0,r.kt)("p",null,"\u6240\u8c13\u7ed3\u6784\u4f53\u6570\u7ec4\uff0c",(0,r.kt)("strong",{parentName:"p"},"\u662f\u6307\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53"),"\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0cC\u8bed\u8a00\u7ed3\u6784\u4f53\u6570\u7ec4\u5e38\u88ab\u7528\u6765\u8868\u793a\u4e00\u4e2a\u62e5\u6709\u76f8\u540c\u6570\u636e\u7ed3\u6784\u7684\u7fa4\u4f53\uff0c\u6bd4\u5982\u4e00\u4e2a\u73ed\u7684\u5b66\u751f\u3001\u4e00\u4e2a\u8f66\u95f4\u7684\u804c\u5de5\u7b49\u3002"),(0,r.kt)("p",null,"\u5b9a\u4e49\u7ed3\u6784\u4f53\u6570\u7ec4\u548c\u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u8868\u793a\u4e00\u4e2a\u73ed\u7ea7\u67095\u4e2a\u5b66\u751f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} class[5];\n")),(0,r.kt)("p",null,"\u7ed3\u6784\u4f53\u6570\u7ec4\u5728\u5b9a\u4e49\u7684\u540c\u65f6\u4e5f\u53ef\u4ee5\u521d\u59cb\u5316\uff0c\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} class[5] = {\n    {\"Li ping\", 5, 18, 'C', 145.0},\n    {\"Zhang ping\", 4, 19, 'A', 130.5},\n    {\"He fang\", 1, 18, 'A', 148.5},\n    {\"Cheng ling\", 2, 17, 'F', 139.0},\n    {\"Wang ming\", 3, 17, 'B', 144.5}};\n")),(0,r.kt)("p",null,"\u5f53\u5bf9\u6570\u7ec4\u4e2d\u5168\u90e8\u5143\u7d20\u8d4b\u503c\u65f6\uff0c\u4e5f\u53ef\u4e0d\u7ed9\u51fa\u6570\u7ec4\u957f\u5ea6\uff0c\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} class[] = {\n    {\"Li ping\", 5, 18, 'C', 145.0},\n    {\"Zhang ping\", 4, 19, 'A', 130.5},\n    {\"He fang\", 1, 18, 'A', 148.5},\n    {\"Cheng ling\", 2, 17, 'F', 139.0},\n    {\"Wang ming\", 3, 17, 'B', 144.5}};\n")),(0,r.kt)("p",null,"\u7ed3\u6784\u4f53\u6570\u7ec4\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355\uff0c\u4f8b\u5982\uff0c\u83b7\u53d6 Wang ming \u7684\u6210\u7ee9\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"class[4].score\n")),(0,r.kt)("p",null,"\u4fee\u6539 Li ping \u7684\u5b66\u4e60\u5c0f\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"class[0].group = 'B'\n")),(0,r.kt)("p",null,"\u3010\u793a\u4f8b\u3011\u8ba1\u7b97\u5168\u73ed\u5b66\u751f\u7684\u603b\u6210\u7ee9\u3001\u5e73\u5747\u6210\u7ee9\u548c\u4ee5\u53ca 140 \u5206\u4ee5\u4e0b\u7684\u4eba\u6570\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nstruct {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} class[] = {\n    {"Li ping", 5, 18, \'C\', 145.0},\n    {"Zhang ping", 4, 19, \'A\', 130.5},\n    {"He fang", 1, 18, \'A\', 148.5},\n    {"Cheng ling", 2, 17, \'F\', 139.0},\n    {"Wang ming", 3, 17, \'B\', 144.5}};\n\nint main() {\n    int i, num_140 = 0;\n    float sum = 0;\n    for (i = 0; i < 5; i++) {\n        sum += class[i].score;\n        if (class[i].score < 140) num_140++;\n    }\n    printf("sum=%.2f\\naverage=%.2f\\nnum_140=%d\\n", sum, sum / 5, num_140);\n    return 0;\n}\n')),(0,r.kt)("h2",{id:"\u4e09\u7ed3\u6784\u4f53\u6307\u9488\u6307\u5411\u7ed3\u6784\u4f53\u7684\u6307\u9488"},"\u4e09\u3001\u7ed3\u6784\u4f53\u6307\u9488\uff08\u6307\u5411\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff09"),(0,r.kt)("p",null,"\u5f53\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u7ed3\u6784\u4f53\u65f6\uff0c\u6211\u4eec\u5c31\u79f0\u5b83\u4e3a\u7ed3\u6784\u4f53\u6307\u9488\u3002\u7ed3\u6784\u4f53\u6307\u9488\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e00\u822c\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct \u7ed3\u6784\u4f53\u540d *\u53d8\u91cf\u540d;\n")),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u5b9a\u4e49\u7ed3\u6784\u4f53\u6307\u9488\u7684\u5b9e\u4f8b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"//\u7ed3\u6784\u4f53\nstruct stu {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stu1 = {\"Tom\", 12, 18, 'A', 136.5};\n//\u7ed3\u6784\u4f53\u6307\u9488\nstruct stu *pstu = &stu1;\n")),(0,r.kt)("p",null,"\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u540c\u65f6\u5b9a\u4e49\u7ed3\u6784\u4f53\u6307\u9488\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stu1 = {\"Tom\", 12, 18, 'A', 136.5}, *pstu = &stu1;\n")),(0,r.kt)("p",null,"\u6ce8\u610f\uff0c\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u548c\u6570\u7ec4\u540d\u4e0d\u540c\uff0c\u6570\u7ec4\u540d\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f1a\u88ab\u8f6c\u6362\u4e3a\u6570\u7ec4\u6307\u9488\uff0c\u800c\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u4e0d\u4f1a\uff0c\u65e0\u8bba\u5728\u4efb\u4f55\u8868\u8fbe\u5f0f\u4e2d\u5b83\u8868\u793a\u7684\u90fd\u662f\u6574\u4e2a\u96c6\u5408\u672c\u8eab\uff0c\u8981\u60f3\u53d6\u5f97\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5fc5\u987b\u5728\u524d\u9762\u52a0",(0,r.kt)("inlineCode",{parentName:"p"},"&"),"\uff0c\u6240\u4ee5\u7ed9 pstu \u8d4b\u503c\u53ea\u80fd\u5199\u4f5c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu *pstu = &stu1;\n")),(0,r.kt)("p",null,"\u800c\u4e0d\u80fd\u5199\u4f5c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu *pstu = stu1;\n")),(0,r.kt)("p",null,"\u8fd8\u5e94\u8be5\u6ce8\u610f\uff0c\u7ed3\u6784\u4f53\u548c\u7ed3\u6784\u4f53\u53d8\u91cf\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5\uff1a\u7ed3\u6784\u4f53\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u662f\u4e00\u79cd\u521b\u5efa\u53d8\u91cf\u7684\u6a21\u677f\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a\u5b83\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c31\u50cf int\u3001float\u3001char \u8fd9\u4e9b\u5173\u952e\u5b57\u672c\u8eab\u4e0d\u5360\u7528\u5185\u5b58\u4e00\u6837\uff1b\u7ed3\u6784\u4f53\u53d8\u91cf\u624d\u5305\u542b\u5b9e\u5b9e\u5728\u5728\u7684\u6570\u636e\uff0c\u624d\u9700\u8981\u5185\u5b58\u6765\u5b58\u50a8\u3002\u4e0b\u9762\u7684\u5199\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u4e0d\u53ef\u80fd\u53bb\u53d6\u4e00\u4e2a\u7ed3\u6784\u4f53\u540d\u7684\u5730\u5740\uff0c\u4e5f\u4e0d\u80fd\u5c06\u5b83\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct stu *pstu = &stu;\nstruct stu *pstu = stu;\n")),(0,r.kt)("h3",{id:"1\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458"},"1\u3001\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458"),(0,r.kt)("p",null,"\u901a\u8fc7\u7ed3\u6784\u4f53\u6307\u9488\u53ef\u4ee5\u83b7\u53d6\u7ed3\u6784\u4f53\u6210\u5458\uff0c\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"(*pointer).memberName\n")),(0,r.kt)("p",null,"\u6216\u8005\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"pointer->memberName\n")),(0,r.kt)("p",null,"\u7b2c\u4e00\u79cd\u5199\u6cd5\u4e2d\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"."),"\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"*"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"(*pointer)"),"\u4e24\u8fb9\u7684\u62ec\u53f7\u4e0d\u80fd\u5c11\u3002\u5982\u679c\u53bb\u6389\u62ec\u53f7\u5199\u4f5c",(0,r.kt)("inlineCode",{parentName:"p"},"*pointer.memberName"),"\uff0c\u90a3\u4e48\u5c31\u7b49\u6548\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"*(pointer.memberName)"),"\uff0c\u8fd9\u6837\u610f\u4e49\u5c31\u5b8c\u5168\u4e0d\u5bf9\u4e86\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e8c\u79cd\u5199\u6cd5\u4e2d\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"->"),"\u662f\u4e00\u4e2a\u65b0\u7684\u8fd0\u7b97\u7b26\uff0c\u4e60\u60ef\u79f0\u5b83\u4e3a\u201c\u7bad\u5934\u201d\uff0c\u6709\u4e86\u5b83\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ed3\u6784\u4f53\u6307\u9488\u76f4\u63a5\u53d6\u5f97\u7ed3\u6784\u4f53\u6210\u5458\uff1b\u8fd9\u4e5f\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"->"),"\u5728C\u8bed\u8a00\u4e2d\u7684\u552f\u4e00\u7528\u9014\u3002"),(0,r.kt)("p",null,"\u4e0a\u9762\u7684\u4e24\u79cd\u5199\u6cd5\u662f\u7b49\u6548\u7684\uff0c\u6211\u4eec\u901a\u5e38\u91c7\u7528\u540e\u9762\u7684\u5199\u6cd5\uff0c\u8fd9\u6837\u66f4\u52a0\u76f4\u89c2\u3002"),(0,r.kt)("p",null,"\u3010\u793a\u4f8b\u3011\u7ed3\u6784\u4f53\u6307\u9488\u7684\u4f7f\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n    struct {\n        char *name;   //\u59d3\u540d\n        int num;      //\u5b66\u53f7\n        int age;      //\u5e74\u9f84\n        char group;   //\u6240\u5728\u5c0f\u7ec4\n        float score;  //\u6210\u7ee9\n    } stu1 = {"Tom", 12, 18, \'A\', 136.5}, *pstu = &stu1;\n\n    //\u8bfb\u53d6\u7ed3\u6784\u4f53\u6210\u5458\u7684\u503c\n    printf("%s\u7684\u5b66\u53f7\u662f%d\uff0c\u5e74\u9f84\u662f%d\uff0c\u5728%c\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f%.1f\uff01\\n", (*pstu).name, (*pstu).num, (*pstu).age, (*pstu).group, (*pstu).score);\n    printf("%s\u7684\u5b66\u53f7\u662f%d\uff0c\u5e74\u9f84\u662f%d\uff0c\u5728%c\u7ec4\uff0c\u4eca\u5e74\u7684\u6210\u7ee9\u662f%.1f\uff01\\n", pstu->name, pstu->num, pstu->age, pstu->group, pstu->score);\n    return 0;\n}\n')),(0,r.kt)("p",null,"\u3010\u793a\u4f8b\u3011\u7ed3\u6784\u4f53\u6570\u7ec4\u6307\u9488\u7684\u4f7f\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nstruct stu {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stus[] = {\n    {"Zhou ping", 5, 18, \'C\', 145.0},\n    {"Zhang ping", 4, 19, \'A\', 130.5},\n    {"Liu fang", 1, 18, \'A\', 148.5},\n    {"Cheng ling", 2, 17, \'F\', 139.0},\n    {"Wang ming", 3, 17, \'B\', 144.5}},\n  *ps;\n\nint main() {\n    //\u6c42\u6570\u7ec4\u957f\u5ea6\n    int len = sizeof(stus) / sizeof(struct stu);\n    printf("Name\\t\\tNum\\tAge\\tGroup\\tScore\\t\\n");\n    for (ps = stus; ps < stus + len; ps++) {\n        printf("%s\\t%d\\t%d\\t%c\\t%.1f\\n", ps->name, ps->num, ps->age, ps->group, ps->score);\n    }\n    return 0;\n}\n')),(0,r.kt)("h3",{id:"2\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570"},"2\u3001\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570"),(0,r.kt)("p",null,"\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u4ee3\u8868\u7684\u662f\u6574\u4e2a\u96c6\u5408\u672c\u8eab\uff0c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6\u4f20\u9012\u7684\u6574\u4e2a\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u6210\u5458\uff0c\u800c\u4e0d\u662f\u50cf\u6570\u7ec4\u4e00\u6837\u88ab\u7f16\u8bd1\u5668\u8f6c\u6362\u6210\u4e00\u4e2a\u6307\u9488\u3002\u5982\u679c\u7ed3\u6784\u4f53\u6210\u5458\u8f83\u591a\uff0c\u5c24\u5176\u662f\u6210\u5458\u4e3a\u6570\u7ec4\u65f6\uff0c\u4f20\u9001\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u5f00\u9500\u4f1a\u5f88\u5927\uff0c\u5f71\u54cd\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\u6240\u4ee5\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f",(0,r.kt)("strong",{parentName:"p"},"\u4f7f\u7528\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u8fd9\u65f6\u7531\u5b9e\u53c2\u4f20\u5411\u5f62\u53c2\u7684\u53ea\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u975e\u5e38\u5feb\u901f"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nstruct stu {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n} stus[] = {\n    {"Li ping", 5, 18, \'C\', 145.0},\n    {"Zhang ping", 4, 19, \'A\', 130.5},\n    {"He fang", 1, 18, \'A\', 148.5},\n    {"Cheng ling", 2, 17, \'F\', 139.0},\n    {"Wang ming", 3, 17, \'B\', 144.5}};\n\nvoid average(struct stu *ps, int len);\n\nint main() {\n    int len = sizeof(stus) / sizeof(struct stu);\n    average(stus, len);\n    return 0;\n}\n\nvoid average(struct stu *ps, int len) {\n    int i, num_140 = 0;\n    float average, sum = 0;\n    for (i = 0; i < len; i++) {\n        sum += (ps + i)->score;\n        if ((ps + i)->score < 140) num_140++;\n    }\n    printf("sum=%.2f\\naverage=%.2f\\nnum_140=%d\\n", sum, sum / 5, num_140);\n}\n')),(0,r.kt)("h3",{id:"3\u7ed3\u6784\u4f53\u4e2d\u6709\u5b57\u7b26\u4e32\u6570\u7ec4"},"3\u3001\u7ed3\u6784\u4f53\u4e2d\u6709\u5b57\u7b26\u4e32\u6570\u7ec4"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/37225244/error-assignment-to-expression-with-array-type-error-when-i-assign-a-struct-f"},'"error: assignment to expression with array type error" when I assign a struct field (C) - Stack Overflow')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nstruct Coroutine {\n    int num;\n    char *name;\n    char stack[10];\n};\n\nint main() {\n    char *str = "hello world";\n\n    printf("addr:%p, str:%s\\n", str, str);\n    printf("addr:%p, str:%s\\n", str + 1, str + 1);\n\n    struct Coroutine co;\n    co.num = 1;\n    co.name = "abc";\n    memcpy(co.stack, "def", 4);\n\n    char r[] = "hello";\n    printf("type1: %ld\\n", sizeof(co.stack));\n    printf("type2: %ld\\n", sizeof(r));\n\n    printf("co       addr:%p\\n", &co);\n    printf("co.num   addr:%p    val:%d\\n", &co.num, co.num);\n    printf("co.name  addr:%p    val:%s\\n", &co.name, co.name);\n    printf("co.stack addr:%p    val:%s\\n", &co.stack, co.stack);\n\n    struct Coroutine *cop = &co;\n    printf("cop:%p\\n", cop);\n    printf("cop->num:%d   *cop:%d\\n", cop->num, *cop);\n    printf("cop->name:%s  *(cop+1):%s\\n", cop->name, *(cop + 1));\n    printf("cop->stack:%s *(cop+5):%s\\n", cop->stack, *(cop + 5));\n}\n\naddr:0x564f2feaa9b4, str:hello world\naddr:0x564f2feaa9b5, str:ello world\ntype1: 10\ntype2: 6\nco       addr:0x7ffff36d56e0\nco.num   addr:0x7ffff36d56e0    val:1\nco.name  addr:0x7ffff36d56e8    val:abc\nco.stack addr:0x7ffff36d56f0    val:def\ncop:0x7ffff36d56e0\ncop->num:1   *cop:1\ncop->name:abc  *(cop+1):abc\ncop->stack:def *(cop+5):def\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"typedef struct{\n     char name[30];\n     char surname[30];\n     int age;\n} data;\n")),(0,r.kt)("p",null,"defines that ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," should be a block of memory that fits 60 chars plus 4 for the int (see note)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[----------------------------,------------------------------,----]\n ^ this is name              ^ this is surname              ^ this is age\n")),(0,r.kt)("p",null,"This allocates the memory on the stack."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"data s1;\n")),(0,r.kt)("p",null,"Assignments just copies numbers, sometimes pointers."),(0,r.kt)("p",null,"This fails"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'s1.name = "Paulo";\n')),(0,r.kt)("p",null,"because the compiler knows that ",(0,r.kt)("inlineCode",{parentName:"p"},"s1.name")," is the start of a struct 64 bytes long, and ",(0,r.kt)("inlineCode",{parentName:"p"},'"Paulo"'),"is a char[] 6 bytes long (6 because of the trailing \\0 in C strings)"),(0,r.kt)("p",null,"Thus, trying to assign a pointer to a string into a string."),(0,r.kt)("p",null,'To copy "Paulo" ',(0,r.kt)("em",{parentName:"p"},"into")," the struct at the point ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),' and "Rossi" ',(0,r.kt)("em",{parentName:"p"},"into")," the struct at point ",(0,r.kt)("inlineCode",{parentName:"p"},"surname"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'memcpy(s1.name,    "Paulo", 6);\nmemcpy(s1.surname, "Rossi", 6);\ns1.age = 1;\n')),(0,r.kt)("p",null,"You end up with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[Paulo0----------------------,Rossi0-------------------------,0001]\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"strcpy")," does the same thing but it knows about ",(0,r.kt)("inlineCode",{parentName:"p"},"\\0")," termination so does not need the length hardcoded."),(0,r.kt)("p",null,"Alternatively you can define a struct which ",(0,r.kt)("em",{parentName:"p"},"points to")," char arrays of any length."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"typedef struct {\n  char *name;\n  char *surname;\n  int age;\n} data;\n")),(0,r.kt)("p",null,"This will create"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[----,----,----]\n")),(0,r.kt)("p",null,"This will now work because you are filling the struct with pointers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'s1.name = "Paulo";\ns1.surname = "Rossi";\ns1.age = 1;\n')),(0,r.kt)("p",null,"Something like this"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[---4,--10,---1]\n")),(0,r.kt)("p",null,"Where 4 and 10 are pointers."),(0,r.kt)("p",null,"Note: the ints and pointers can be different sizes, the sizes 4 above are 32bit as an example."),(0,r.kt)("h2",{id:"\u56db\u51fd\u6570\u8fd4\u56de\u7ed3\u6784\u4f53\u7c7b\u578b"},"\u56db\u3001\u51fd\u6570\u8fd4\u56de\u7ed3\u6784\u4f53\u7c7b\u578b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <stdlib.h>\n\nstruct STU {\n    char *name;   //\u59d3\u540d\n    int num;      //\u5b66\u53f7\n    int age;      //\u5e74\u9f84\n    char group;   //\u6240\u5728\u5c0f\u7ec4\n    float score;  //\u6210\u7ee9\n};\n\nstruct STU getError1() {\n    struct STU stu = {"Aod", 20, 18, \'A\', 136.5};\n    return stu;\n}\n\nstruct STU *getError2() {\n    struct STU stu = {"Tom", 12, 18, \'A\', 136.5};\n    return &stu;\n}\n\nvoid get(struct STU *stu) {\n    stu->name = "Dad";\n    stu->num = 15;\n    stu->age = 27;\n    stu->group = \'D\';\n    stu->score = 99.99;\n}\n\nint main() {\n    // \u6210\u529f\u7684\u65b9\u6cd5\uff1a\u5728\u5916\u9762\u58f0\u660e\uff0c\u5730\u5740\u4f20\u5230\u51fd\u6570\u91cc\u9762\uff0c\u51fd\u6570\u91cc\u9762\u8fdb\u884c\u590d\u5236\uff0c\u5916\u9762\u5c31\u80fd\u7528\u4e86\n    struct STU us;\n    get(&us);\n    printf("us num: %d\\n", us.num);\n\n    // \u6700\u597d\u7684\u65b9\u6cd5\uff1a\u7528malloc\n    struct STU *us2 = (struct STU *)malloc(sizeof(struct STU));\n    get(us2);\n    printf("us2 num: %d\\n", us2->num);\n\n    // \u5728\u91cc\u9762\u58f0\u660e\uff0c\u5c06\u58f0\u660e\u7684\u76f4\u63a5\u8fd4\u56de\u51fa\u6765\uff0c\u867d\u7136\u80fd\u7528\uff0c\u53ef\u80fd\u7528\u7740\u7528\u7740\u4f60\u8fd9\u4e2a\u5c40\u90e8\u7ed3\u6784\u4f53\u88ab\u91ca\u653e\u4e86\n    struct STU ue1 = getError1();\n    printf("ue1 num: %d\\n", ue1.num);\n\n    // \u5728\u91cc\u9762\u58f0\u660e\uff0c\u7136\u540e\u5c06\u5730\u5740\u8fd4\u56de\u51fa\u6765\uff0c\u8fd9\u6837\u4f1a\u62a5\u9519 Segmentation fault (core dumped)\n    struct STU *ue2 = getError2();\n    printf("ue2 num: %d", ue2->num);\n\n    return 0;\n}\n\n')),(0,r.kt)("h2",{id:"\u4e94\u679a\u4e3e\u7c7b\u578bc\u8bed\u8a00enum\u7528\u6cd5"},"\u4e94\u3001\u679a\u4e3e\u7c7b\u578b\uff08C\u8bed\u8a00enum\u7528\u6cd5\uff09"),(0,r.kt)("p",null,"\u5728\u5b9e\u9645\u7f16\u7a0b\u4e2d\uff0c\u6709\u4e9b\u6570\u636e\u7684\u53d6\u503c\u5f80\u5f80\u662f\u6709\u9650\u7684\uff0c\u53ea\u80fd\u662f\u975e\u5e38\u5c11\u91cf\u7684\u6574\u6570\uff0c\u5e76\u4e14\u6700\u597d\u4e3a\u6bcf\u4e2a\u503c\u90fd\u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u4ee5\u65b9\u4fbf\u5728\u540e\u7eed\u4ee3\u7801\u4e2d\u4f7f\u7528\uff0c\u6bd4\u5982\u4e00\u4e2a\u661f\u671f\u53ea\u6709\u4e03\u5929\uff0c\u4e00\u5e74\u53ea\u6709\u5341\u4e8c\u4e2a\u6708\uff0c\u4e00\u4e2a\u73ed\u6bcf\u5468\u6709\u516d\u95e8\u8bfe\u7a0b\u7b49\u3002"),(0,r.kt)("p",null,"\u4ee5\u6bcf\u5468\u4e03\u5929\u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"#define"),"\u547d\u4ee4\u6765\u7ed9\u6bcf\u5929\u6307\u5b9a\u4e00\u4e2a\u540d\u5b57\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\n#define Mon 1\n#define Tues 2\n#define Wed 3\n#define Thurs 4\n#define Fri 5\n#define Sat 6\n#define Sun 7\n\nint main(){\n    int day;\n    scanf("%d", &day);\n    switch(day){\n        case Mon: puts("Monday"); break;\n        case Tues: puts("Tuesday"); break;\n        case Wed: puts("Wednesday"); break;\n        case Thurs: puts("Thursday"); break;\n        case Fri: puts("Friday"); break;\n        case Sat: puts("Saturday"); break;\n        case Sun: puts("Sunday"); break;\n        default: puts("Error!");\n    }\n    return 0;\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"#define"),"\u547d\u4ee4\u867d\u7136\u80fd\u89e3\u51b3\u95ee\u9898\uff0c\u4f46\u4e5f\u5e26\u6765\u4e86\u4e0d\u5c0f\u7684\u526f\u4f5c\u7528\uff0c\u5bfc\u81f4\u5b8f\u540d\u8fc7\u591a\uff0c\u4ee3\u7801\u677e\u6563\uff0c\u770b\u8d77\u6765\u603b\u6709\u70b9\u4e0d\u8212\u670d\u3002C\u8bed\u8a00\u63d0\u4f9b\u4e86\u4e00\u79cd",(0,r.kt)("strong",{parentName:"p"},"\u679a\u4e3e\uff08Enum\uff09\u7c7b\u578b"),"\uff0c\u80fd\u591f\u5217\u51fa\u6240\u6709\u53ef\u80fd\u7684\u53d6\u503c\uff0c\u5e76\u7ed9\u5b83\u4eec\u53d6\u4e00\u4e2a\u540d\u5b57\u3002"),(0,r.kt)("p",null,"\u679a\u4e3e\u7c7b\u578b\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"enum typeName{ valueName1, valueName2, valueName3, ...... };\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"enum"),"\u662f\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57\uff0c\u4e13\u95e8\u7528\u6765\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\uff0c\u8fd9\u4e5f\u662f\u5b83\u5728C\u8bed\u8a00\u4e2d\u7684\u552f\u4e00\u7528\u9014\uff1b",(0,r.kt)("inlineCode",{parentName:"p"},"typeName"),"\u662f\u679a\u4e3e\u7c7b\u578b\u7684\u540d\u5b57\uff1b",(0,r.kt)("inlineCode",{parentName:"p"},"valueName1, valueName2, valueName3, ......"),"\u662f\u6bcf\u4e2a\u503c\u5bf9\u5e94\u7684\u540d\u5b57\u7684\u5217\u8868\u3002\u6ce8\u610f\u6700\u540e\u7684",(0,r.kt)("inlineCode",{parentName:"p"},";"),"\u4e0d\u80fd\u5c11\u3002"),(0,r.kt)("p",null,"\u4f8b\u5982\uff0c\u5217\u51fa\u4e00\u4e2a\u661f\u671f\u6709\u51e0\u5929\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"enum week{ Mon, Tues, Wed, Thurs, Fri, Sat, Sun };\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u4ec5\u4ec5\u7ed9\u51fa\u4e86\u540d\u5b57\uff0c\u5374\u6ca1\u6709\u7ed9\u51fa\u540d\u5b57\u5bf9\u5e94\u7684\u503c\uff0c\u8fd9\u662f\u56e0\u4e3a\u679a\u4e3e\u503c\u9ed8\u8ba4\u4ece 0 \u5f00\u59cb\uff0c\u5f80\u540e\u9010\u4e2a\u52a0 1\uff08\u9012\u589e\uff09\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0cweek \u4e2d\u7684 Mon\u3001Tues ...... Sun \u5bf9\u5e94\u7684\u503c\u5206\u522b\u4e3a 0\u30011 ...... 6\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u540d\u5b57\u90fd\u6307\u5b9a\u4e00\u4e2a\u503c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"enum week{ Mon = 1, Tues = 2, Wed = 3, Thurs = 4, Fri = 5, Sat = 6, Sun = 7 };\n")),(0,r.kt)("p",null,"\u66f4\u4e3a\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u53ea\u7ed9\u7b2c\u4e00\u4e2a\u540d\u5b57\u6307\u5b9a\u503c\uff1a\u8fd9\u6837\u679a\u4e3e\u503c\u5c31\u4ece 1 \u5f00\u59cb\u9012\u589e\uff0c\u8ddf\u4e0a\u9762\u7684\u5199\u6cd5\u662f\u7b49\u6548\u7684\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun };\n")),(0,r.kt)("p",null,"\u679a\u4e3e\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u5b9a\u4e49\u679a\u4e3e\u53d8\u91cf\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"enum week a, b, c;\n")),(0,r.kt)("p",null,"\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u7684\u540c\u65f6\u5b9a\u4e49\u53d8\u91cf\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } a, b, c;\n")),(0,r.kt)("p",null,"\u6709\u4e86\u679a\u4e3e\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u628a\u5217\u8868\u4e2d\u7684\u503c\u8d4b\u7ed9\u5b83\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun };\nenum week a = Mon, b = Wed, c = Sat;\n")),(0,r.kt)("p",null,"\u6216\u8005\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } a = Mon, b = Wed, c = Sat;\n")),(0,r.kt)("p",null,"\u3010\u793a\u4f8b\u3011\u5224\u65ad\u7528\u6237\u8f93\u5165\u7684\u662f\u661f\u671f\u51e0\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main(){\n    enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun } day;\n    \n    scanf("%d", &day);\n    switch(day){\n        case Mon: puts("Monday"); break;\n        case Tues: puts("Tuesday"); break;\n        case Wed: puts("Wednesday"); break;\n        case Thurs: puts("Thursday"); break;\n        case Fri: puts("Friday"); break;\n        case Sat: puts("Saturday"); break;\n        case Sun: puts("Sunday"); break;\n        default: puts("Error!");\n    }\n    return 0;\n}\n')),(0,r.kt)("p",null,"\u9700\u8981\u6ce8\u610f\u7684\u4e24\u70b9\u662f\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u679a\u4e3e\u5217\u8868\u4e2d\u7684 Mon\u3001Tues\u3001Wed \u8fd9\u4e9b\u6807\u8bc6\u7b26\u7684\u4f5c\u7528\u8303\u56f4\u662f\u5168\u5c40\u7684\uff08\u4e25\u683c\u6765\u8bf4\u662f main() \u51fd\u6570\u5185\u90e8\uff09\uff0c\u4e0d\u80fd\u518d\u5b9a\u4e49\u4e0e\u5b83\u4eec\u540d\u5b57\u76f8\u540c\u7684\u53d8\u91cf\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mon\u3001Tues\u3001Wed \u7b49\u90fd\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u5bf9\u5b83\u4eec\u8d4b\u503c\uff0c\u53ea\u80fd\u5c06\u5b83\u4eec\u7684\u503c\u8d4b\u7ed9\u5176\u4ed6\u7684\u53d8\u91cf\u3002"))),(0,r.kt)("p",null,"\u679a\u4e3e\u548c\u5b8f\u5176\u5b9e\u975e\u5e38\u7c7b\u4f3c\uff1a\u5b8f\u5728\u9884\u5904\u7406\u9636\u6bb5\u5c06\u540d\u5b57\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\uff0c\u679a\u4e3e\u5728\u7f16\u8bd1\u9636\u6bb5\u5c06\u540d\u5b57\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u679a\u4e3e\u7406\u89e3\u4e3a\u7f16\u8bd1\u9636\u6bb5\u7684\u5b8f\u3002"),(0,r.kt)("h2",{id:"\u516d\u5171\u7528\u4f53c\u8bed\u8a00union\u7528\u6cd5"},"\u516d\u3001\u5171\u7528\u4f53\uff08C\u8bed\u8a00union\u7528\u6cd5\uff09"),(0,r.kt)("p",null,"\u7ed3\u6784\u4f53\uff08Struct\uff09\u662f\u4e00\u79cd\u6784\u9020\u7c7b\u578b\u6216\u590d\u6742\u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7c7b\u578b\u4e0d\u540c\u7684\u6210\u5458\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u548c\u7ed3\u6784\u4f53\u975e\u5e38\u7c7b\u4f3c\u7684\u8bed\u6cd5\uff0c\u53eb\u505a",(0,r.kt)("strong",{parentName:"p"},"\u5171\u7528\u4f53\uff08Union\uff09"),"\uff0c\u5b83\u7684\u5b9a\u4e49\u683c\u5f0f\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"union \u5171\u7528\u4f53\u540d{\n    \u6210\u5458\u5217\u8868\n};\n")),(0,r.kt)("p",null,"\u5171\u7528\u4f53\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a\u8054\u5408\u6216\u8005\u8054\u5408\u4f53\uff0c\u8fd9\u4e5f\u662f Union \u8fd9\u4e2a\u5355\u8bcd\u7684\u672c\u610f\u3002"),(0,r.kt)("p",null,"\u7ed3\u6784\u4f53\u548c\u5171\u7528\u4f53\u7684\u533a\u522b\u5728\u4e8e\uff1a",(0,r.kt)("strong",{parentName:"p"},"\u7ed3\u6784\u4f53\u7684\u5404\u4e2a\u6210\u5458\u4f1a\u5360\u7528\u4e0d\u540c\u7684\u5185\u5b58\uff0c\u4e92\u76f8\u4e4b\u95f4\u6ca1\u6709\u5f71\u54cd\uff1b\u800c\u5171\u7528\u4f53\u7684\u6240\u6709\u6210\u5458\u5360\u7528\u540c\u4e00\u6bb5\u5185\u5b58\uff0c\u4fee\u6539\u4e00\u4e2a\u6210\u5458\u4f1a\u5f71\u54cd\u5176\u4f59\u6240\u6709\u6210\u5458"),"\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u7ed3\u6784\u4f53\u5360\u7528\u7684\u5185\u5b58\u5927\u4e8e\u7b49\u4e8e\u6240\u6709\u6210\u5458\u5360\u7528\u7684\u5185\u5b58\u7684\u603b\u548c\uff08\u6210\u5458\u4e4b\u95f4\u53ef\u80fd\u4f1a\u5b58\u5728\u7f1d\u9699\uff09\uff0c\u5171\u7528\u4f53\u5360\u7528\u7684\u5185\u5b58\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u5360\u7528\u7684\u5185\u5b58\u3002\u5171\u7528\u4f53\u4f7f\u7528\u4e86\u5185\u5b58\u8986\u76d6\u6280\u672f\uff0c\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u4fdd\u5b58\u4e00\u4e2a\u6210\u5458\u7684\u503c\uff0c\u5982\u679c\u5bf9\u65b0\u7684\u6210\u5458\u8d4b\u503c\uff0c\u5c31\u4f1a\u628a\u539f\u6765\u6210\u5458\u7684\u503c\u8986\u76d6\u6389"),"\u3002"),(0,r.kt)("h3",{id:"1\u5171\u7528\u4f53\u5b9a\u4e49\u548c\u4f7f\u7528"},"1\u3001\u5171\u7528\u4f53\u5b9a\u4e49\u548c\u4f7f\u7528"),(0,r.kt)("p",null,"\u5171\u7528\u4f53\u4e5f\u662f\u4e00\u79cd\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u521b\u5efa\u53d8\u91cf\uff0c\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"union data {\n    int n;\n    char ch;\n    double f;\n};\nunion data a, b, c;\n")),(0,r.kt)("p",null,"\u4e0a\u9762\u662f\u5148\u5b9a\u4e49\u5171\u7528\u4f53\uff0c\u518d\u521b\u5efa\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u5728\u5b9a\u4e49\u5171\u7528\u4f53\u7684\u540c\u65f6\u521b\u5efa\u53d8\u91cf\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"union data{\n    int n;\n    char ch;\n    double f;\n} a, b, c;\n")),(0,r.kt)("p",null,"\u5982\u679c\u4e0d\u518d\u5b9a\u4e49\u65b0\u7684\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5171\u7528\u4f53\u7684\u540d\u5b57\u7701\u7565\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"union{\n    int n;\n    char ch;\n    double f;\n} a, b, c;\n")),(0,r.kt)("p",null,"\u5171\u7528\u4f53 data \u4e2d\uff0c\u6210\u5458 f \u5360\u7528\u7684\u5185\u5b58\u6700\u591a\uff0c\u4e3a 8 \u4e2a\u5b57\u8282\uff0c\u6240\u4ee5 data \u7c7b\u578b\u7684\u53d8\u91cf\uff08\u4e5f\u5c31\u662f a\u3001b\u3001c\uff09\u4e5f\u5360\u7528 8 \u4e2a\u5b57\u8282\u7684\u5185\u5b58\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u6f14\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nunion data {\n    int n;\n    char ch;\n    short m;\n};\n\nint main() {\n    union data a;\n    printf("%d, %d\\n", sizeof(a), sizeof(union data));\n    a.n = 0x40;\n    printf("%X, %c, %hX\\n", a.n, a.ch, a.m);\n    a.ch = \'9\';\n    printf("%X, %c, %hX\\n", a.n, a.ch, a.m);\n    a.m = 0x2059;\n    printf("%X, %c, %hX\\n", a.n, a.ch, a.m);\n    a.n = 0x3E25AD54;\n    printf("%X, %c, %hX\\n", a.n, a.ch, a.m);\n\n    return 0;\n}\n// 4, 4\n// 40, @, 40\n// 39, 9, 39\n// 2059, Y, 2059\n// 3E25AD54, T, AD54\n')),(0,r.kt)("h3",{id:"2\u5171\u7528\u4f53\u7684\u5e94\u7528"},"2\u3001\u5171\u7528\u4f53\u7684\u5e94\u7528"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5171\u7528\u4f53\u5728\u4e00\u822c\u7684\u7f16\u7a0b\u4e2d\u5e94\u7528\u8f83\u5c11\uff0c\u5728\u5355\u7247\u673a\u4e2d\u5e94\u7528\u8f83\u591a"),"\u3002\u5bf9\u4e8e PC \u673a\uff0c\u7ecf\u5e38\u4f7f\u7528\u5230\u7684\u4e00\u4e2a\u5b9e\u4f8b\u662f\uff1a \u73b0\u6709\u4e00\u5f20\u5173\u4e8e\u5b66\u751f\u4fe1\u606f\u548c\u6559\u5e08\u4fe1\u606f\u7684\u8868\u683c\u3002\u5b66\u751f\u4fe1\u606f\u5305\u62ec\u59d3\u540d\u3001\u7f16\u53f7\u3001\u6027\u522b\u3001\u804c\u4e1a\u3001\u5206\u6570\uff0c\u6559\u5e08\u7684\u4fe1\u606f\u5305\u62ec\u59d3\u540d\u3001\u7f16\u53f7\u3001\u6027\u522b\u3001\u804c\u4e1a\u3001\u6559\u5b66\u79d1\u76ee\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u8868\u683c\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Num"),(0,r.kt)("th",{parentName:"tr",align:null},"Sex"),(0,r.kt)("th",{parentName:"tr",align:null},"Profession"),(0,r.kt)("th",{parentName:"tr",align:null},"Score / Course"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HanXiaoXiao"),(0,r.kt)("td",{parentName:"tr",align:null},"501"),(0,r.kt)("td",{parentName:"tr",align:null},"f"),(0,r.kt)("td",{parentName:"tr",align:null},"s"),(0,r.kt)("td",{parentName:"tr",align:null},"89.5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"YanWeiMin"),(0,r.kt)("td",{parentName:"tr",align:null},"1011"),(0,r.kt)("td",{parentName:"tr",align:null},"m"),(0,r.kt)("td",{parentName:"tr",align:null},"t"),(0,r.kt)("td",{parentName:"tr",align:null},"math")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LiuZhenTao"),(0,r.kt)("td",{parentName:"tr",align:null},"109"),(0,r.kt)("td",{parentName:"tr",align:null},"f"),(0,r.kt)("td",{parentName:"tr",align:null},"t"),(0,r.kt)("td",{parentName:"tr",align:null},"English")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ZhaoFeiYan"),(0,r.kt)("td",{parentName:"tr",align:null},"982"),(0,r.kt)("td",{parentName:"tr",align:null},"m"),(0,r.kt)("td",{parentName:"tr",align:null},"s"),(0,r.kt)("td",{parentName:"tr",align:null},"95.0")))),(0,r.kt)("p",null,"f \u548c m \u5206\u522b\u8868\u793a\u5973\u6027\u548c\u7537\u6027\uff0cs \u8868\u793a\u5b66\u751f\uff0ct \u8868\u793a\u6559\u5e08\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5b66\u751f\u548c\u6559\u5e08\u6240\u5305\u542b\u7684\u6570\u636e\u662f\u4e0d\u540c\u7684\u3002\u73b0\u5728\u8981\u6c42\u628a\u8fd9\u4e9b\u4fe1\u606f\u653e\u5728\u540c\u4e00\u4e2a\u8868\u683c\u4e2d\uff0c\u5e76\u8bbe\u8ba1\u7a0b\u5e8f\u8f93\u5165\u4eba\u5458\u4fe1\u606f\u7136\u540e\u8f93\u51fa\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u628a\u6bcf\u4e2a\u4eba\u7684\u4fe1\u606f\u90fd\u770b\u4f5c\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u8bdd\uff0c\u90a3\u4e48\u6559\u5e08\u548c\u5b66\u751f\u7684\u524d 4 \u4e2a\u6210\u5458\u53d8\u91cf\u662f\u4e00\u6837\u7684\uff0c\u7b2c 5 \u4e2a\u6210\u5458\u53d8\u91cf\u53ef\u80fd\u662f score \u6216\u8005 course\u3002\u5f53\u7b2c 4 \u4e2a\u6210\u5458\u53d8\u91cf\u7684\u503c\u662f s \u7684\u65f6\u5019\uff0c\u7b2c 5 \u4e2a\u6210\u5458\u53d8\u91cf\u5c31\u662f score\uff1b\u5f53\u7b2c 4 \u4e2a\u6210\u5458\u53d8\u91cf\u7684\u503c\u662f t \u7684\u65f6\u5019\uff0c\u7b2c 5 \u4e2a\u6210\u5458\u53d8\u91cf\u5c31\u662f course\u3002"),(0,r.kt)("p",null,"\u7ecf\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u5305\u542b\u5171\u7528\u4f53\u7684\u7ed3\u6784\u4f53\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <stdlib.h>\n\n#define TOTAL 4  //\u4eba\u5458\u603b\u6570\n\nstruct {\n    char name[20];\n    int num;\n    char sex;\n    char profession;\n    union {\n        float score;\n        char course[20];\n    } sc;\n} bodys[TOTAL];\n\nint main() {\n    int i;\n    //\u8f93\u5165\u4eba\u5458\u4fe1\u606f\n    for (i = 0; i < TOTAL; i++) {\n        printf("Input info: ");\n        scanf("%s %d %c %c", bodys[i].name, &(bodys[i].num), &(bodys[i].sex), &(bodys[i].profession));\n        if (bodys[i].profession == \'s\') {  //\u5982\u679c\u662f\u5b66\u751f\n            scanf("%f", &bodys[i].sc.score);\n        } else {  //\u5982\u679c\u662f\u8001\u5e08\n            scanf("%s", bodys[i].sc.course);\n        }\n        fflush(stdin);\n    }\n    //\u8f93\u51fa\u4eba\u5458\u4fe1\u606f\n    printf("\\nName\\t\\tNum\\tSex\\tProfession\\tScore / Course\\n");\n    for (i = 0; i < TOTAL; i++) {\n        if (bodys[i].profession == \'s\') {  //\u5982\u679c\u662f\u5b66\u751f\n            printf("%s\\t%d\\t%c\\t%c\\t\\t%f\\n", bodys[i].name, bodys[i].num, bodys[i].sex, bodys[i].profession, bodys[i].sc.score);\n        } else {  //\u5982\u679c\u662f\u8001\u5e08\n            printf("%s\\t%d\\t%c\\t%c\\t\\t%s\\n", bodys[i].name, bodys[i].num, bodys[i].sex, bodys[i].profession, bodys[i].sc.course);\n        }\n    }\n    return 0;\n}\n')),(0,r.kt)("h2",{id:"\u4e03\u4f4d\u57df\u4f4d\u6bb5"},"\u4e03\u3001\u4f4d\u57df\uff08\u4f4d\u6bb5\uff09"),(0,r.kt)("p",null,"\u6709\u4e9b\u6570\u636e\u5728\u5b58\u50a8\u65f6\u5e76\u4e0d\u9700\u8981\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u8282\uff0c\u53ea\u9700\u8981\u5360\u7528\u4e00\u4e2a\u6216\u51e0\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5373\u53ef\u3002\u4f8b\u5982\u5f00\u5173\u53ea\u6709\u901a\u7535\u548c\u65ad\u7535\u4e24\u79cd\u72b6\u6001\uff0c\u7528 0 \u548c 1 \u8868\u793a\u8db3\u4ee5\uff0c\u4e5f\u5c31\u662f\u7528\u4e00\u4e2a\u4e8c\u8fdb\u4f4d\u3002\u6b63\u662f\u57fa\u4e8e\u8fd9\u79cd\u8003\u8651\uff0cC\u8bed\u8a00\u53c8\u63d0\u4f9b\u4e86\u4e00\u79cd\u53eb\u505a\u4f4d\u57df\u7684\u6570\u636e\u7ed3\u6784\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5728\u7ed3\u6784\u4f53\u5b9a\u4e49\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u6210\u5458\u53d8\u91cf\u6240\u5360\u7528\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\uff08Bit\uff09\uff0c\u8fd9\u5c31\u662f\u4f4d\u57df"),"\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct bs{\n    unsigned m;\n    unsigned n: 4;\n    unsigned char ch: 6;\n};\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":"),"\u540e\u9762\u7684\u6570\u5b57\u7528\u6765\u9650\u5b9a\u6210\u5458\u53d8\u91cf\u5360\u7528\u7684\u4f4d\u6570\u3002\u6210\u5458 m \u6ca1\u6709\u9650\u5236\uff0c\u6839\u636e\u6570\u636e\u7c7b\u578b\u5373\u53ef\u63a8\u7b97\u51fa\u5b83\u5360\u7528 4 \u4e2a\u5b57\u8282\uff08Byte\uff09\u7684\u5185\u5b58\u3002\u6210\u5458 n\u3001ch \u88ab",(0,r.kt)("inlineCode",{parentName:"p"},":"),"\u540e\u9762\u7684\u6570\u5b57\u9650\u5236\uff0c\u4e0d\u80fd\u518d\u6839\u636e\u6570\u636e\u7c7b\u578b\u8ba1\u7b97\u957f\u5ea6\uff0c\u5b83\u4eec\u5206\u522b\u5360\u7528 4\u30016 \u4f4d\uff08Bit\uff09\u7684\u5185\u5b58\u3002"),(0,r.kt)("p",null,"n\u3001ch \u7684\u53d6\u503c\u8303\u56f4\u975e\u5e38\u6709\u9650\uff0c\u6570\u636e\u7a0d\u5fae\u5927\u4e9b\u5c31\u4f1a\u53d1\u751f\u6ea2\u51fa\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"#include <stdio.h>\n\nint main() {\n    struct bs {\n        unsigned m;\n        unsigned n : 4;\n        unsigned char ch : 6;\n    } a = {0xad, 0xE, '$'};\n\n    //\u7b2c\u4e00\u6b21\u8f93\u51fa\n    printf(\"%#x, %#x, %c\\n\", a.m, a.n, a.ch);\n\n    //\u66f4\u6539\u503c\u540e\u518d\u6b21\u8f93\u51fa\n    a.m = 0xb8901c;\n    a.n = 0x2d;\n    a.ch = 'z';\n    printf(\"%#x, %#x, %c\\n\", a.m, a.n, a.ch);\n    return 0;\n}\n// 0xad, 0xe, $\n// 0xb8901c, 0xd, :\n")),(0,r.kt)("p",null,"\u5bf9\u4e8e n \u548c ch\uff0c\u7b2c\u4e00\u6b21\u8f93\u51fa\u7684\u6570\u636e\u662f\u5b8c\u6574\u7684\uff0c\u7b2c\u4e8c\u6b21\u8f93\u51fa\u7684\u6570\u636e\u662f\u6b8b\u7f3a\u7684\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e00\u6b21\u8f93\u51fa\u65f6\uff0cn\u3001ch \u7684\u503c\u5206\u522b\u662f 0xE\u30010x24\uff08'$' \u5bf9\u5e94\u7684 ASCII \u7801\u4e3a 0x24\uff09\uff0c\u6362\u7b97\u6210\u4e8c\u8fdb\u5236\u662f 1110\u300110 0100\uff0c\u90fd\u6ca1\u6709\u8d85\u51fa\u9650\u5b9a\u7684\u4f4d\u6570\uff0c\u80fd\u591f\u6b63\u5e38\u8f93\u51fa\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e8c\u6b21\u8f93\u51fa\u65f6\uff0cn\u3001ch \u7684\u503c\u53d8\u4e3a 0x2d\u30010x7a\uff08'z' \u5bf9\u5e94\u7684 ASCII \u7801\u4e3a 0x7a\uff09\uff0c\u6362\u7b97\u6210\u4e8c\u8fdb\u5236\u5206\u522b\u662f 10 1101\u3001111 1010\uff0c\u90fd\u8d85\u51fa\u4e86\u9650\u5b9a\u7684\u4f4d\u6570\u3002\u8d85\u51fa\u90e8\u5206\u88ab\u76f4\u63a5\u622a\u53bb\uff0c\u5269\u4e0b 1101\u300111 1010\uff0c\u6362\u7b97\u6210\u5341\u516d\u8fdb\u5236\u4e3a 0xd\u30010x3a\uff080x3a \u5bf9\u5e94\u7684\u5b57\u7b26\u662f :\uff09\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"C\u8bed\u8a00\u6807\u51c6\u89c4\u5b9a\uff0c\u4f4d\u57df\u7684\u5bbd\u5ea6\u4e0d\u80fd\u8d85\u8fc7\u5b83\u6240\u4f9d\u9644\u7684\u6570\u636e\u7c7b\u578b\u7684\u957f\u5ea6\u3002\u901a\u4fd7\u5730\u8bb2\uff0c\u6210\u5458\u53d8\u91cf\u90fd\u662f\u6709\u7c7b\u578b\u7684\uff0c\u8fd9\u4e2a\u7c7b\u578b\u9650\u5236\u4e86\u6210\u5458\u53d8\u91cf\u7684\u6700\u5927\u957f\u5ea6\uff0c",(0,r.kt)("inlineCode",{parentName:"strong"},":"),"\u540e\u9762\u7684\u6570\u5b57\u4e0d\u80fd\u8d85\u8fc7\u8fd9\u4e2a\u957f\u5ea6"),"\u3002"),(0,r.kt)("p",null,"\u4f8b\u5982\u4e0a\u9762\u7684 bs\uff0cn \u7684\u7c7b\u578b\u662f unsigned int\uff0c\u957f\u5ea6\u4e3a 4 \u4e2a\u5b57\u8282\uff0c\u5171\u8ba1 32 \u4f4d\uff0c\u90a3\u4e48 n \u540e\u9762\u7684\u6570\u5b57\u5c31\u4e0d\u80fd\u8d85\u8fc7 32\uff1bch \u7684\u7c7b\u578b\u662f unsigned char\uff0c\u957f\u5ea6\u4e3a 1 \u4e2a\u5b57\u8282\uff0c\u5171\u8ba1 8 \u4f4d\uff0c\u90a3\u4e48 ch \u540e\u9762\u7684\u6570\u5b57\u5c31\u4e0d\u80fd\u8d85\u8fc7 8\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8ba4\u4e3a\uff0c\u4f4d\u57df\u6280\u672f\u5c31\u662f\u5728\u6210\u5458\u53d8\u91cf\u6240\u5360\u7528\u7684\u5185\u5b58\u4e2d\u9009\u51fa\u4e00\u90e8\u5206\u4f4d\u5bbd\u6765\u5b58\u50a8\u6570\u636e\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"C\u8bed\u8a00\u6807\u51c6\u8fd8\u89c4\u5b9a\uff0c\u53ea\u6709\u6709\u9650\u7684\u51e0\u79cd\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u7528\u4e8e\u4f4d\u57df\u3002\u5728 ANSI C \u4e2d\uff0c\u8fd9\u51e0\u79cd\u6570\u636e\u7c7b\u578b\u662f int\u3001signed int \u548c unsigned int\uff08int \u9ed8\u8ba4\u5c31\u662f signed int\uff09\uff1b\u5230\u4e86 C99\uff0c_Bool \u4e5f\u88ab\u652f\u6301\u4e86"),"\u3002"),(0,r.kt)("p",null,"\u4f46\u7f16\u8bd1\u5668\u5728\u5177\u4f53\u5b9e\u73b0\u65f6\u90fd\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u989d\u5916\u652f\u6301\u4e86 char\u3001signed char\u3001unsigned char \u4ee5\u53ca enum \u7c7b\u578b\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u867d\u7136\u4e0d\u7b26\u5408C\u8bed\u8a00\u6807\u51c6\uff0c\u4f46\u5b83\u4f9d\u7136\u80fd\u591f\u88ab\u7f16\u8bd1\u5668\u652f\u6301\u3002"),(0,r.kt)("h3",{id:"\u4f4d\u57df\u7684\u5b58\u50a8"},"\u4f4d\u57df\u7684\u5b58\u50a8"),(0,r.kt)("p",null,"C\u8bed\u8a00\u6807\u51c6\u5e76\u6ca1\u6709\u89c4\u5b9a\u4f4d\u57df\u7684\u5177\u4f53\u5b58\u50a8\u65b9\u5f0f\uff0c\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u4f46\u5b83\u4eec\u90fd\u5c3d\u91cf\u538b\u7f29\u5b58\u50a8\u7a7a\u95f4\u3002"),(0,r.kt)("p",null,"\u4f4d\u57df\u7684\u5177\u4f53\u5b58\u50a8\u89c4\u5219\u5982\u4e0b\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5f53\u76f8\u90bb\u6210\u5458\u7684\u7c7b\u578b\u76f8\u540c\u65f6\uff0c\u5982\u679c\u5b83\u4eec\u7684\u4f4d\u5bbd\u4e4b\u548c\u5c0f\u4e8e\u7c7b\u578b\u7684 sizeof \u5927\u5c0f\uff0c\u90a3\u4e48\u540e\u9762\u7684\u6210\u5458\u7d27\u90bb\u524d\u4e00\u4e2a\u6210\u5458\u5b58\u50a8\uff0c\u76f4\u5230\u4e0d\u80fd\u5bb9\u7eb3\u4e3a\u6b62\uff1b\u5982\u679c\u5b83\u4eec\u7684\u4f4d\u5bbd\u4e4b\u548c\u5927\u4e8e\u7c7b\u578b\u7684 sizeof \u5927\u5c0f\uff0c\u90a3\u4e48\u540e\u9762\u7684\u6210\u5458\u5c06\u4ece\u65b0\u7684\u5b58\u50a8\u5355\u5143\u5f00\u59cb\uff0c\u5176\u504f\u79fb\u91cf\u4e3a\u7c7b\u578b\u5927\u5c0f\u7684\u6574\u6570\u500d\u3002")),(0,r.kt)("p",null,"\u4ee5\u4e0b\u9762\u7684\u4f4d\u57df bs \u4e3a\u4f8b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n    struct bs {\n        unsigned m : 6;\n        unsigned n : 12;\n        unsigned p : 4;\n    };\n    printf("%d\\n", sizeof(struct bs));\n    return 0;\n}\n// 4\n')),(0,r.kt)("p",null,"m\u3001n\u3001p \u7684\u7c7b\u578b\u90fd\u662f unsigned int\uff0csizeof \u7684\u7ed3\u679c\u4e3a 4 \u4e2a\u5b57\u8282\uff08Byte\uff09\uff0c\u4e5f\u5373 32 \u4e2a\u4f4d\uff08Bit\uff09\u3002m\u3001n\u3001p \u7684\u4f4d\u5bbd\u4e4b\u548c\u4e3a 6+12+4 = 22\uff0c\u5c0f\u4e8e 32\uff0c\u6240\u4ee5\u5b83\u4eec\u4f1a\u6328\u7740\u5b58\u50a8\uff0c\u4e2d\u95f4\u6ca1\u6709\u7f1d\u9699\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u5c06\u6210\u5458 m \u7684\u4f4d\u5bbd\u6539\u4e3a 22\uff0c\u90a3\u4e48\u8f93\u51fa\u7ed3\u679c\u5c06\u4f1a\u662f 8\uff0c\u56e0\u4e3a 22+12 = 34\uff0c\u5927\u4e8e 32\uff0cn \u4f1a\u4ece\u65b0\u7684\u4f4d\u7f6e\u5f00\u59cb\u5b58\u50a8\uff0c\u76f8\u5bf9 m \u7684\u504f\u79fb\u91cf\u662f sizeof(unsigned int)\uff0c\u4e5f\u5373 4 \u4e2a\u5b57\u8282\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u518d\u5c06\u6210\u5458 p \u7684\u4f4d\u5bbd\u4e5f\u6539\u4e3a 22\uff0c\u90a3\u4e48\u8f93\u51fa\u7ed3\u679c\u5c06\u4f1a\u662f 12\uff0c\u4e09\u4e2a\u6210\u5458\u90fd\u4e0d\u4f1a\u6328\u7740\u5b58\u50a8\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5f53\u76f8\u90bb\u6210\u5458\u7684\u7c7b\u578b\u4e0d\u540c\u65f6\uff0c\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u6848\uff0cGCC \u4f1a\u538b\u7f29\u5b58\u50a8\uff0c\u800c VC/VS \u4e0d\u4f1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n    struct bs {\n        unsigned m : 12;\n        unsigned char ch : 4;\n        unsigned p : 4;\n    };\n    printf("%d\\n", sizeof(struct bs));\n    return 0;\n}\n// 4\n')),(0,r.kt)("p",null,"\u5728 GCC \u4e0b\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a 4\uff0c\u4e09\u4e2a\u6210\u5458\u6328\u7740\u5b58\u50a8\uff1b\u5728 VC/VS \u4e0b\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a 12\uff0c\u4e09\u4e2a\u6210\u5458\u6309\u7167\u5404\u81ea\u7684\u7c7b\u578b\u5b58\u50a8\uff08\u4e0e\u4e0d\u6307\u5b9a\u4f4d\u5bbd\u65f6\u7684\u5b58\u50a8\u65b9\u5f0f\u76f8\u540c\uff09\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u6210\u5458\u4e4b\u95f4\u7a7f\u63d2\u7740\u975e\u4f4d\u57df\u6210\u5458\uff0c\u90a3\u4e48\u4e0d\u4f1a\u8fdb\u884c\u538b\u7f29\u3002\u4f8b\u5982\u5bf9\u4e8e\u4e0b\u9762\u7684 bs\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n    struct bs {\n        unsigned m : 12;\n        unsigned ch;\n        unsigned p : 4;\n    };\n    printf("%d\\n", sizeof(struct bs));\n    return 0;\n}\n// 12\n')),(0,r.kt)("p",null,"\u5728\u5404\u4e2a\u7f16\u8bd1\u5668\u4e0b sizeof \u7684\u7ed3\u679c\u90fd\u662f 12\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u53d1\u73b0\u4f4d\u57df\u6210\u5458\u5f80\u5f80\u4e0d\u5360\u7528\u5b8c\u6574\u7684\u5b57\u8282\uff0c\u6709\u65f6\u5019\u4e5f\u4e0d\u5904\u4e8e\u5b57\u8282\u7684\u5f00\u5934\u4f4d\u7f6e\uff0c\u56e0\u6b64\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"strong"},"&"),"\u83b7\u53d6\u4f4d\u57df\u6210\u5458\u7684\u5730\u5740\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0cC\u8bed\u8a00\u4e5f\u7981\u6b62\u8fd9\u6837\u505a\u3002\u5730\u5740\u662f\u5b57\u8282\uff08Byte\uff09\u7684\u7f16\u53f7\uff0c\u800c\u4e0d\u662f\u4f4d\uff08Bit\uff09\u7684\u7f16\u53f7"),"\u3002"),(0,r.kt)("h3",{id:"\u65e0\u540d\u4f4d\u57df"},"\u65e0\u540d\u4f4d\u57df"),(0,r.kt)("p",null,"\u4f4d\u57df\u6210\u5458\u53ef\u4ee5\u6ca1\u6709\u540d\u79f0\uff0c\u53ea\u7ed9\u51fa\u6570\u636e\u7c7b\u578b\u548c\u4f4d\u5bbd\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"struct bs{\n    int m: 12;\n    int  : 20;  //\u8be5\u4f4d\u57df\u6210\u5458\u4e0d\u80fd\u4f7f\u7528\n    int n: 4;\n};\n")),(0,r.kt)("p",null,"\u65e0\u540d\u4f4d\u57df\u4e00\u822c\u7528\u6765\u4f5c\u586b\u5145\u6216\u8005\u8c03\u6574\u6210\u5458\u4f4d\u7f6e\u3002\u56e0\u4e3a\u6ca1\u6709\u540d\u79f0\uff0c\u65e0\u540d\u4f4d\u57df\u4e0d\u80fd\u4f7f\u7528\u3002"),(0,r.kt)("p",null,"\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u4f4d\u5bbd\u4e3a 20 \u7684\u65e0\u540d\u6210\u5458\uff0cm\u3001n \u5c06\u4f1a\u6328\u7740\u5b58\u50a8\uff0csizeof(struct bs) \u7684\u7ed3\u679c\u4e3a 4\uff1b\u6709\u4e86\u8fd9 20 \u4f4d\u4f5c\u4e3a\u586b\u5145\uff0cm\u3001n \u5c06\u5206\u5f00\u5b58\u50a8\uff0csizeof(struct bs) \u7684\u7ed3\u679c\u4e3a 8\u3002"))}o.isMDXComponent=!0}}]);
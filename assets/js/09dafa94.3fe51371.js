"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[42494],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>m});var r=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},s=Object.keys(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var a=r.createContext({}),p=function(n){var e=r.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},c=function(n){var e=p(n.components);return r.createElement(a.Provider,{value:e},n.children)},u="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,s=n.originalType,a=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),u=p(t),f=o,m=u["".concat(a,".").concat(f)]||u[f]||d[f]||s;return t?r.createElement(m,i(i({ref:e},c),{},{components:t})):r.createElement(m,i({ref:e},c))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var s=t.length,i=new Array(s);i[0]=f;var l={};for(var a in e)hasOwnProperty.call(e,a)&&(l[a]=e[a]);l.originalType=n,l[u]="string"==typeof n?n:o,i[1]=l;for(var p=2;p<s;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},21754:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const s={},i=void 0,l={unversionedId:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u6a21\u7248\u9898-\u63cf\u8ff0\u5b50\u95ee\u9898>-\u9752\u86d9\u8fc7\u6cb3",id:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u6a21\u7248\u9898-\u63cf\u8ff0\u5b50\u95ee\u9898>-\u9752\u86d9\u8fc7\u6cb3",title:"<\u6a21\u7248\u9898-\u63cf\u8ff0\u5b50\u95ee\u9898>-\u9752\u86d9\u8fc7\u6cb3",description:"403. \u9752\u86d9\u8fc7\u6cb3",source:"@site/docs/Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/403-<\u6a21\u7248\u9898-\u63cf\u8ff0\u5b50\u95ee\u9898>-\u9752\u86d9\u8fc7\u6cb3.md",sourceDirName:"Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22",slug:"/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u6a21\u7248\u9898-\u63cf\u8ff0\u5b50\u95ee\u9898>-\u9752\u86d9\u8fc7\u6cb3",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u6a21\u7248\u9898-\u63cf\u8ff0\u5b50\u95ee\u9898>-\u9752\u86d9\u8fc7\u6cb3",draft:!1,tags:[],version:"current",sidebarPosition:403,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u8bb0\u5fc6\u5316dfs-\u4f4d\u8fd0\u7b97+\u8d2a\u5fc3>-\u6574\u6570\u66ff\u6362",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u8bb0\u5fc6\u5316dfs-\u4f4d\u8fd0\u7b97+\u8d2a\u5fc3>-\u6574\u6570\u66ff\u6362"},next:{title:"<\u8bb0\u5fc6\u5316dfs-dp>-\u81ea\u7531\u4e4b\u8def",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u8bb0\u5fc6\u5316dfs-dp>-\u81ea\u7531\u4e4b\u8def"}},a={},p=[{value:"\u65b9\u6cd5\u4e00\uff1a\u666e\u901adfs\uff08\u8d85\u65f6\uff09",id:"\u65b9\u6cd5\u4e00\u666e\u901adfs\u8d85\u65f6",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8bb0\u5fc6\u5316dfs",id:"\u65b9\u6cd5\u4e8c\u8bb0\u5fc6\u5316dfs",level:2}],c={toc:p};function u(n){let{components:e,...s}=n;return(0,o.kt)("wrapper",(0,r.Z)({},c,s,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/frog-jump/"},"403. \u9752\u86d9\u8fc7\u6cb3")),(0,o.kt)("p",null,"\u4e00\u53ea\u9752\u86d9\u60f3\u8981\u8fc7\u6cb3\u3002 \u5047\u5b9a\u6cb3\u6d41\u88ab\u7b49\u5206\u4e3a\u82e5\u5e72\u4e2a\u5355\u5143\u683c\uff0c\u5e76\u4e14\u5728\u6bcf\u4e00\u4e2a\u5355\u5143\u683c\u5185\u90fd\u6709\u53ef\u80fd\u653e\u6709\u4e00\u5757\u77f3\u5b50\uff08\u4e5f\u6709\u53ef\u80fd\u6ca1\u6709\uff09\u3002 \u9752\u86d9\u53ef\u4ee5\u8df3\u4e0a\u77f3\u5b50\uff0c\u4f46\u662f\u4e0d\u53ef\u4ee5\u8df3\u5165\u6c34\u4e2d\u3002"),(0,o.kt)("p",null,"\u7ed9\u4f60\u77f3\u5b50\u7684\u4f4d\u7f6e\u5217\u8868 ",(0,o.kt)("inlineCode",{parentName:"p"},"stones"),"\uff08\u7528\u5355\u5143\u683c\u5e8f\u53f7 ",(0,o.kt)("strong",{parentName:"p"},"\u5347\u5e8f")," \u8868\u793a\uff09\uff0c \u8bf7\u5224\u5b9a\u9752\u86d9\u80fd\u5426\u6210\u529f\u8fc7\u6cb3\uff08\u5373\u80fd\u5426\u5728\u6700\u540e\u4e00\u6b65\u8df3\u81f3\u6700\u540e\u4e00\u5757\u77f3\u5b50\u4e0a\uff09\u3002\u5f00\u59cb\u65f6\uff0c\u9752\u86d9\u9ed8\u8ba4\u5df2\u7ad9\u5728\u7b2c\u4e00\u5757\u77f3\u5b50\u4e0a\uff0c\u5e76\u53ef\u4ee5\u5047\u5b9a\u5b83\u7b2c\u4e00\u6b65\u53ea\u80fd\u8df3\u8dc3 ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," \u4e2a\u5355\u4f4d\uff08\u5373\u53ea\u80fd\u4ece\u5355\u5143\u683c 1 \u8df3\u81f3\u5355\u5143\u683c 2 \uff09\u3002"),(0,o.kt)("p",null,"\u5982\u679c\u9752\u86d9\u4e0a\u4e00\u6b65\u8df3\u8dc3\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"k")," \u4e2a\u5355\u4f4d\uff0c\u90a3\u4e48\u5b83\u63a5\u4e0b\u6765\u7684\u8df3\u8dc3\u8ddd\u79bb\u53ea\u80fd\u9009\u62e9\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"k - 1"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"k")," \u6216 ",(0,o.kt)("inlineCode",{parentName:"p"},"k + 1")," \u4e2a\u5355\u4f4d\u3002\u53e6\u8bf7\u6ce8\u610f\uff0c\u9752\u86d9\u53ea\u80fd\u5411\u524d\u65b9\uff08\u7ec8\u70b9\u7684\u65b9\u5411\uff09\u8df3\u8dc3\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1astones = [0,1,3,5,6,8,12,17]\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a\u9752\u86d9\u53ef\u4ee5\u6210\u529f\u8fc7\u6cb3\uff0c\u6309\u7167\u5982\u4e0b\u65b9\u6848\u8df3\u8dc3\uff1a\u8df3 1 \u4e2a\u5355\u4f4d\u5230\u7b2c 2 \u5757\u77f3\u5b50, \u7136\u540e\u8df3 2 \u4e2a\u5355\u4f4d\u5230\u7b2c 3 \u5757\u77f3\u5b50, \u63a5\u7740 \u8df3 2 \u4e2a\u5355\u4f4d\u5230\u7b2c 4 \u5757\u77f3\u5b50, \u7136\u540e\u8df3 3 \u4e2a\u5355\u4f4d\u5230\u7b2c 6 \u5757\u77f3\u5b50, \u8df3 4 \u4e2a\u5355\u4f4d\u5230\u7b2c 7 \u5757\u77f3\u5b50, \u6700\u540e\uff0c\u8df3 5 \u4e2a\u5355\u4f4d\u5230\u7b2c 8 \u4e2a\u77f3\u5b50\uff08\u5373\u6700\u540e\u4e00\u5757\u77f3\u5b50\uff09\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1astones = [0,1,2,3,4,8,9,11]\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u8fd9\u662f\u56e0\u4e3a\u7b2c 5 \u548c\u7b2c 6 \u4e2a\u77f3\u5b50\u4e4b\u95f4\u7684\u95f4\u8ddd\u592a\u5927\uff0c\u6ca1\u6709\u53ef\u9009\u7684\u65b9\u6848\u4f9b\u9752\u86d9\u8df3\u8dc3\u8fc7\u53bb\u3002\n\n")),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("p",null,"2 <= stones.length <= 2000\n0 <= stones","[i]"," <= 231 - 1\nstones","[0]"," == 0\nstones \u6309\u4e25\u683c\u5347\u5e8f\u6392\u5217"),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u666e\u901adfs\u8d85\u65f6"},"\u65b9\u6cd5\u4e00\uff1a\u666e\u901adfs\uff08\u8d85\u65f6\uff09"),(0,o.kt)("p",null,"\u6ce8\u610f\uff1a\u521a\u5f00\u59cb\u65f6\uff0ck \u4e3a 0"),(0,o.kt)("p",null,"\u753b\u51fa\u9012\u5f52\u6811\uff0c\u53ef\u770b\u51fa\u6709\u91cd\u590d\u7684\u300c\u5b50\u95ee\u9898\u300d"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"403",src:t(48218).Z,width:"1925",height:"832"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int n;\n    unordered_map<int, int> position; // \u77f3\u5934\u7f16\u53f7:\u8be5\u77f3\u5934\u4f4d\u4e8estones\u7684\u4e0b\u6807\n\n    // cur\u4e3astones\u6570\u7ec4\u4e0b\u6807\n    bool dfs(int cur, int k, vector<int>& stones) {\n        if (cur == n - 1) return true;  // \u5230\u8fbe\u7ec8\u70b9\n\n        for (int d = -1; d <= 1; d++) {\n            // next_st_idx\u4e0b\u4e2a\u77f3\u5934\u7f16\u53f7\n            int next_st_idx = stones[cur] + k + d;\n            if (next_st_idx == stones[cur]) continue;  // \u539f\u5730\u8e0f\u6b65\n            if (position.count(next_st_idx)) {         // \u5982\u679c\u8fd9\u4e2a\u77f3\u5934\u5b58\u5728\uff08\u526a\u679d\uff09\n                bool res = dfs(position[next_st_idx], k + d, stones);\n                if (res) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    bool canCross(vector<int>& stones) {\n        n = stones.size();\n        for (int i = 0; i < n; i++) {\n            position[stones[i]] = i;\n        }\n        return dfs(0, 0, stones);\n    }\n};\n")),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u8bb0\u5fc6\u5316dfs"},"\u65b9\u6cd5\u4e8c\uff1a\u8bb0\u5fc6\u5316dfs"),(0,o.kt)("p",null,"\u8bb0\u5fc6\u5316dfs\u7684\u96be\u70b9\u5728\u4e8e\uff1a",(0,o.kt)("strong",{parentName:"p"},"\u8bb0\u5fc6\u662f\u4e3a\u4e86\u4ec0\u4e48\uff08\u76ee\u7684\uff09\uff0c\u4e3a\u4e86\u8be5\u76ee\u7684\u9700\u8981\u8bb0\u5fc6\u4ec0\u4e48")),(0,o.kt)("p",null,"\u8bb0\u5fc6\u662f\u4e3a\u4e86\u4e0b\u6b21\u9047\u89c1\u8be5\u300c\u5b50\u95ee\u9898\u300d\u80fd\u591f\u76f4\u63a5\u53d6\u5230\u7ed3\u679c\uff0c\u56e0\u6b64\u9700\u8981\u8bb0\u5fc6\u300c\u5b50\u95ee\u9898\u300d"),(0,o.kt)("p",null,"\u901a\u5e38\u53ef\u4ee5\u7528\u8be5\u70b9\u7684\u4e0b\u6807\u6765\u63cf\u8ff0\u4e00\u4e2a\u300c\u5b50\u95ee\u9898\u300d\uff0c\u4f46\u662f",(0,o.kt)("strong",{parentName:"p"},"\u8fd9\u9053\u9898\u7684\u300c\u5b50\u95ee\u9898\u300d\u9700\u8981\u7528\u8be5\u70b9\u7684\u4e0b\u6807\u548c\u8fd9\u4e2a\u70b9\u600e\u4e48\u6765\u7684\uff08k\u503c\uff09\u4e24\u4e2a\u7ef4\u5ea6\u5171\u540c\u63cf\u8ff0")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u4f8b\u5982 cur=5,k=3 \u548c cur=5,k=2 \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5b50\u95ee\u9898")),(0,o.kt)("p",null,"\u90a3\u4e48\u5c31\u9700\u8981\u7528\u300c\u54c8\u5e0c\u51fd\u6570\u300d\u53bb\u63cf\u8ff0\u8fd9\u4e2a\u5b50\u95ee\u9898\uff0c\u540c\u65f6\u786e\u4fdd\u4e0d\u53d1\u751f\u300c\u54c8\u5e0c\u78b0\u649e\u300d"),(0,o.kt)("p",null,"\u54c8\u5e0c\u51fd\u6570\u4e3a\uff1akey = cur * 1000 + k\uff0c\u4e581000\uff0c\u662f\u8003\u8651\u5230k\u7684\u6700\u5927\u957f\u5ea6\u800c\u5b9a\u7684"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int n;\n    unordered_map<int, int> position;  // \u77f3\u5934\u7f16\u53f7:\u8be5\u77f3\u5934\u4f4d\u4e8estones\u7684\u4e0b\u6807\n    unordered_set<int> memo;           // \u8bb0\u5f55\u5df2\u8d70\u8fc7\u7684\u70b9\n\n    // cur\u4e3astones\u6570\u7ec4\u4e0b\u6807\n    bool dfs(int cur, int k, vector<int>& stones) {\n        if (cur == n - 1) return true;  // \u5230\u8fbe\u7ec8\u70b9\n        int key = cur * 1000 + k;       // \u54c8\u5e0c\u51fd\u6570\n        if (memo.count(key) == 0) {\n            memo.insert(key);  // \u6ca1\u6765\u8fc7\uff0c\u8bb0\u5f55\u4e0b\n        } else {\n            // \u7b2c\u4e8c\u6b21\u9047\u89c1\uff0c\u8bf4\u660e\u7b2c\u4e00\u6b21\u5230\u8fd9\u4e2a\u70b9\u7684\u65f6\u5019\u6ca1\u5230\u8fbe\u7ed3\u5c3e\u800c\u6ca1\u4e2d\u65ad\n            // \u518d\u6b21\u9047\u89c1\u4e86\uff0c\u80af\u5b9a\u4e5f\u4e0d\u4f1a\u5230\u8fbe\u7ec8\u70b9\n            return false;\n        }\n\n        for (int d = -1; d <= 1; d++) {\n            // next_st_idx\u4e0b\u4e2a\u77f3\u5934\u7f16\u53f7\n            int next_st_idx = stones[cur] + k + d;\n            if (next_st_idx == stones[cur]) continue;  // \u539f\u5730\u8e0f\u6b65\n            if (position.count(next_st_idx)) {         // \u5982\u679c\u8fd9\u4e2a\u77f3\u5934\u5b58\u5728\n                bool res = dfs(position[next_st_idx], k + d, stones);\n                if (res) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    bool canCross(vector<int>& stones) {\n        n = stones.size();\n        for (int i = 0; i < n; i++) {\n            position[stones[i]] = i;\n        }\n        return dfs(0, 0, stones);\n    }\n};\n")))}u.isMDXComponent=!0},48218:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/403-4595f48f3cb6f1e924d6834a060a59f7.png"}}]);
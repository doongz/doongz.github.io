"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[85506],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>k});var a=t(67294);function l(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){l(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,a,l=function(n,e){if(null==n)return{};var t,a,l={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(l[t]=n[t]);return l}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(l[t]=n[t])}return l}var o=a.createContext({}),u=function(n){var e=a.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},c=function(n){var e=u(n.components);return a.createElement(o.Provider,{value:e},n.children)},m="mdxType",s={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(n,e){var t=n.components,l=n.mdxType,r=n.originalType,o=n.parentName,c=p(n,["components","mdxType","originalType","parentName"]),m=u(t),d=l,k=m["".concat(o,".").concat(d)]||m[d]||s[d]||r;return t?a.createElement(k,i(i({ref:e},c),{},{components:t})):a.createElement(k,i({ref:e},c))}));function k(n,e){var t=arguments,l=e&&e.mdxType;if("string"==typeof n||l){var r=t.length,i=new Array(r);i[0]=d;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=n,p[m]="string"==typeof n?n:l,i[1]=p;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},14466:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>u});var a=t(87462),l=(t(67294),t(3905));const r={},i="\u51fd\u6570",p={unversionedId:"Skill/C++/\u57fa\u7840\u77e5\u8bc6/\u51fd\u6570",id:"Skill/C++/\u57fa\u7840\u77e5\u8bc6/\u51fd\u6570",title:"\u51fd\u6570",description:"C++ \u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\uff1a",source:"@site/docs/Skill/C++/1-\u57fa\u7840\u77e5\u8bc6/05-\u51fd\u6570.md",sourceDirName:"Skill/C++/1-\u57fa\u7840\u77e5\u8bc6",slug:"/Skill/C++/\u57fa\u7840\u77e5\u8bc6/\u51fd\u6570",permalink:"/docs/Skill/C++/\u57fa\u7840\u77e5\u8bc6/\u51fd\u6570",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u8fd0\u7b97\u7b26",permalink:"/docs/Skill/C++/\u57fa\u7840\u77e5\u8bc6/\u8fd0\u7b97\u7b26"},next:{title:"\u5b57\u7b26\u4e32-char-string",permalink:"/docs/Skill/C++/\u57fa\u7840\u77e5\u8bc6/\u5b57\u7b26\u4e32-char-string"}},o={},u=[{value:"\u4e00\u3001\u51fd\u6570\u58f0\u660e",id:"\u4e00\u51fd\u6570\u58f0\u660e",level:2},{value:"\u4e8c\u3001\u51fd\u6570\u53c2\u6570",id:"\u4e8c\u51fd\u6570\u53c2\u6570",level:2},{value:"1\u3001\u6307\u9488\u8c03\u7528",id:"1\u6307\u9488\u8c03\u7528",level:3},{value:"2\u3001\u5f15\u7528\u8c03\u7528",id:"2\u5f15\u7528\u8c03\u7528",level:3},{value:"\u4e09\u3001Lambda \u51fd\u6570\u4e0e\u8868\u8fbe\u5f0f",id:"\u4e09lambda-\u51fd\u6570\u4e0e\u8868\u8fbe\u5f0f",level:2},{value:"\u56db\u3001inline \u5185\u8054\u51fd\u6570",id:"\u56dbinline-\u5185\u8054\u51fd\u6570",level:2},{value:"1\u3001\u51fd\u6570\u662f\u5982\u4f55\u88ab\u8c03\u7528\u7684",id:"1\u51fd\u6570\u662f\u5982\u4f55\u88ab\u8c03\u7528\u7684",level:3},{value:"2\u3001inline \u4f7f\u7528",id:"2inline-\u4f7f\u7528",level:3},{value:"\u4e94\u3001\u51fd\u6570\u91cd\u8f7d",id:"\u4e94\u51fd\u6570\u91cd\u8f7d",level:2},{value:"1\u3001\u7531\u6765",id:"1\u7531\u6765",level:3},{value:"2\u3001\u4f7f\u7528",id:"2\u4f7f\u7528",level:3},{value:"3\u3001\u5982\u4f55\u505a\u5230\u91cd\u8f7d\u7684",id:"3\u5982\u4f55\u505a\u5230\u91cd\u8f7d\u7684",level:3}],c={toc:u};function m(n){let{components:e,...t}=n;return(0,l.kt)("wrapper",(0,a.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u51fd\u6570"},"\u51fd\u6570"),(0,l.kt)("p",null,"C++ \u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},"return_type function_name( parameter list )\n{\n   body of the function\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u7c7b\u578b\uff1a")," \u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u503c\u3002",(0,l.kt)("strong",{parentName:"li"},"return_type")," \u662f\u51fd\u6570\u8fd4\u56de\u7684\u503c\u7684\u6570\u636e\u7c7b\u578b\u3002\u6709\u4e9b\u51fd\u6570\u6267\u884c\u6240\u9700\u7684\u64cd\u4f5c\u800c\u4e0d\u8fd4\u56de\u503c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0creturn_type \u662f\u5173\u952e\u5b57 ",(0,l.kt)("strong",{parentName:"li"},"void"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u51fd\u6570\u540d\u79f0\uff1a")," \u8fd9\u662f\u51fd\u6570\u7684\u5b9e\u9645\u540d\u79f0\u3002\u51fd\u6570\u540d\u548c\u53c2\u6570\u5217\u8868\u4e00\u8d77\u6784\u6210\u4e86\u51fd\u6570\u7b7e\u540d\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u53c2\u6570\uff1a")," \u53c2\u6570\u5c31\u50cf\u662f\u5360\u4f4d\u7b26\u3002\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u60a8\u5411\u53c2\u6570\u4f20\u9012\u4e00\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u88ab\u79f0\u4e3a\u5b9e\u9645\u53c2\u6570\u3002\u53c2\u6570\u5217\u8868\u5305\u62ec\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u3001\u987a\u5e8f\u3001\u6570\u91cf\u3002\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u53ef\u80fd\u4e0d\u5305\u542b\u53c2\u6570\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u51fd\u6570\u4e3b\u4f53\uff1a")," \u51fd\u6570\u4e3b\u4f53\u5305\u542b\u4e00\u7ec4\u5b9a\u4e49\u51fd\u6570\u6267\u884c\u4efb\u52a1\u7684\u8bed\u53e5\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},'#include <iostream>\nusing namespace std;\n\nint max(int a, int b = 100) {\n    if (a > b)\n        return a;\n    else\n        return b;\n}\n\nint main() {\n    cout << "\u5927\u7684\u6570: " << max(1, 2) << endl;  // 2\n    cout << "\u5927\u7684\u6570: " << max(1) << endl;     // 100\n    return 0;\n}\n')),(0,l.kt)("h2",{id:"\u4e00\u51fd\u6570\u58f0\u660e"},"\u4e00\u3001\u51fd\u6570\u58f0\u660e"),(0,l.kt)("p",null,"\u51fd\u6570",(0,l.kt)("strong",{parentName:"p"},"\u58f0\u660e"),"\u4f1a\u544a\u8bc9\u7f16\u8bd1\u5668\u51fd\u6570\u540d\u79f0\u53ca\u5982\u4f55\u8c03\u7528\u51fd\u6570\uff0c\u51fd\u6570\u7684\u5b9e\u9645\u4e3b\u4f53\u53ef\u4ee5\u5355\u72ec\u5b9a\u4e49"),(0,l.kt)("p",null,"\u5f53\u5728\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\u51fd\u6570\u4e14\u5728\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u58f0\u660e\u662f\u5fc5\u9700\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u5728\u8c03\u7528\u51fd\u6570\u7684\u6587\u4ef6\u9876\u90e8\u58f0\u660e\u51fd\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},"return_type function_name( parameter list );\n// \u4f8b\u5982\uff0c\u53c2\u6570\u7684\u540d\u79f0\u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u6709\u53c2\u6570\u7684\u7c7b\u578b\u662f\u5fc5\u9700\u7684\nint max(int num1, int num2);\nint max(int, int);\n")),(0,l.kt)("h2",{id:"\u4e8c\u51fd\u6570\u53c2\u6570"},"\u4e8c\u3001\u51fd\u6570\u53c2\u6570"),(0,l.kt)("p",null,"\u5982\u679c\u51fd\u6570\u8981\u4f7f\u7528\u53c2\u6570\uff0c\u5219\u5fc5\u987b\u58f0\u660e\u63a5\u53d7\u53c2\u6570\u503c\u7684\u53d8\u91cf\u3002\u8fd9\u4e9b\u53d8\u91cf\u79f0\u4e3a\u51fd\u6570\u7684",(0,l.kt)("strong",{parentName:"p"},"\u5f62\u5f0f\u53c2\u6570"),"\u3002"),(0,l.kt)("p",null,"\u5f62\u5f0f\u53c2\u6570\u5c31\u50cf\u51fd\u6570\u5185\u7684\u5176\u4ed6\u5c40\u90e8\u53d8\u91cf\uff0c\u5728\u8fdb\u5165\u51fd\u6570\u65f6\u88ab\u521b\u5efa\uff0c\u9000\u51fa\u51fd\u6570\u65f6\u88ab\u9500\u6bc1\u3002"),(0,l.kt)("p",null,"\u5f53\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u6709\u4e09\u79cd\u5411\u51fd\u6570\u4f20\u9012\u53c2\u6570\u7684\u65b9\u5f0f\uff1a"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"\u8c03\u7528\u7c7b\u578b"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u63cf\u8ff0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"https://www.runoob.com/cplusplus/cpp-function-call-by-value.html"},"\u4f20\u503c\u8c03\u7528")),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u8be5\u65b9\u6cd5\u628a\u53c2\u6570\u7684\u5b9e\u9645\u503c\u8d4b\u503c\u7ed9\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4fee\u6539\u51fd\u6570\u5185\u7684\u5f62\u5f0f\u53c2\u6570\u5bf9\u5b9e\u9645\u53c2\u6570\u6ca1\u6709\u5f71\u54cd\u3002")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"https://www.runoob.com/cplusplus/cpp-function-call-by-pointer.html"},"\u6307\u9488\u8c03\u7528")),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u8be5\u65b9\u6cd5\u628a\u53c2\u6570\u7684\u5730\u5740\u8d4b\u503c\u7ed9\u5f62\u5f0f\u53c2\u6570\u3002\u5728\u51fd\u6570\u5185\uff0c\u8be5\u5730\u5740\u7528\u4e8e\u8bbf\u95ee\u8c03\u7528\u4e2d\u8981\u7528\u5230\u7684\u5b9e\u9645\u53c2\u6570\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4fee\u6539\u5f62\u5f0f\u53c2\u6570\u4f1a\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"https://www.runoob.com/cplusplus/cpp-function-call-by-reference.html"},"\u5f15\u7528\u8c03\u7528")),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u8be5\u65b9\u6cd5\u628a\u53c2\u6570\u7684\u5f15\u7528\u8d4b\u503c\u7ed9\u5f62\u5f0f\u53c2\u6570\u3002\u5728\u51fd\u6570\u5185\uff0c\u8be5\u5f15\u7528\u7528\u4e8e\u8bbf\u95ee\u8c03\u7528\u4e2d\u8981\u7528\u5230\u7684\u5b9e\u9645\u53c2\u6570\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4fee\u6539\u5f62\u5f0f\u53c2\u6570\u4f1a\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002")))),(0,l.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cC++ \u4f7f\u7528",(0,l.kt)("strong",{parentName:"p"},"\u4f20\u503c\u8c03\u7528"),"\u6765\u4f20\u9012\u53c2\u6570\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u51fd\u6570\u5185\u7684\u4ee3\u7801\u4e0d\u80fd\u6539\u53d8\u7528\u4e8e\u8c03\u7528\u51fd\u6570\u7684\u53c2\u6570\u3002\u4e4b\u524d\u63d0\u5230\u7684\u5b9e\u4f8b\uff0c\u8c03\u7528 max() \u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u65b9\u6cd5\u3002"),(0,l.kt)("h3",{id:"1\u6307\u9488\u8c03\u7528"},"1\u3001\u6307\u9488\u8c03\u7528"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},'#include <iostream>\nusing namespace std;\n\nvoid swap(int *x, int *y);\n\nvoid swap(int *x, int *y) {\n    int temp;\n    temp = *x; /* \u4fdd\u5b58\u5730\u5740 x \u7684\u503c */\n    *x = *y;   /* \u628a y \u8d4b\u503c\u7ed9 x */\n    *y = temp; /* \u628a x \u8d4b\u503c\u7ed9 y */\n\n    return;\n}\n\nint main() {\n    // \u5c40\u90e8\u53d8\u91cf\u58f0\u660e\n    int a = 100;\n    int b = 200;\n    cout << "\u4ea4\u6362\u524d\uff0ca \u7684\u503c\uff1a" << a << endl;  // 100\n    cout << "\u4ea4\u6362\u524d\uff0cb \u7684\u503c\uff1a" << b << endl;  // 200\n\n    /* \u8c03\u7528\u51fd\u6570\u6765\u4ea4\u6362\u503c\n     * &a \u8868\u793a\u6307\u5411 a \u7684\u6307\u9488\uff0c\u5373\u53d8\u91cf a \u7684\u5730\u5740\n     * &b \u8868\u793a\u6307\u5411 b \u7684\u6307\u9488\uff0c\u5373\u53d8\u91cf b \u7684\u5730\u5740\n     */\n    swap(&a, &b);\n    cout << "\u4ea4\u6362\u540e\uff0ca \u7684\u503c\uff1a" << a << endl;  // 200\n    cout << "\u4ea4\u6362\u540e\uff0cb \u7684\u503c\uff1a" << b << endl;  // 100\n}\n')),(0,l.kt)("h3",{id:"2\u5f15\u7528\u8c03\u7528"},"2\u3001\u5f15\u7528\u8c03\u7528"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},'#include <iostream>\nusing namespace std;\n\nvoid swap(int &x, int &y);\n\nvoid swap(int &x, int &y) {\n    int temp;\n    temp = x; /* \u4fdd\u5b58\u5730\u5740 x \u7684\u503c */\n    x = y;    /* \u628a y \u8d4b\u503c\u7ed9 x */\n    y = temp; /* \u628a x \u8d4b\u503c\u7ed9 y  */\n\n    return;\n}\n\nint main() {\n    // \u5c40\u90e8\u53d8\u91cf\u58f0\u660e\n    int a = 100;\n    int b = 200;\n    cout << "\u4ea4\u6362\u524d\uff0ca \u7684\u503c\uff1a" << a << endl;\n    cout << "\u4ea4\u6362\u524d\uff0cb \u7684\u503c\uff1a" << b << endl;\n\n    /* \u8c03\u7528\u51fd\u6570\u6765\u4ea4\u6362\u503c */\n    swap(a, b);\n    cout << "\u4ea4\u6362\u540e\uff0ca \u7684\u503c\uff1a" << a << endl;\n    cout << "\u4ea4\u6362\u540e\uff0cb \u7684\u503c\uff1a" << b << endl;\n}\n')),(0,l.kt)("h2",{id:"\u4e09lambda-\u51fd\u6570\u4e0e\u8868\u8fbe\u5f0f"},"\u4e09\u3001Lambda \u51fd\u6570\u4e0e\u8868\u8fbe\u5f0f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},"C++11 also supports closures, here called captures. Captures are defined between square brackets [and ] in the declaration of lambda expression. The mechanism allows these variables to be captured by value or by reference. The following table demonstrates this:\n\n[]        // No captures, the lambda is implicitly convertible to a function pointer.\n[x, &y]   // x is captured by value and y is captured by reference.\n[&]       // Any external variable is implicitly captured by reference if used\n[=]       // Any external variable is implicitly captured by value if used.\n[&, x]    // x is captured by value. Other variables will be captured by reference.\n[=, &z]   // z is captured by reference. Other variables will be captured by value.\n")),(0,l.kt)("h2",{id:"\u56dbinline-\u5185\u8054\u51fd\u6570"},"\u56db\u3001inline \u5185\u8054\u51fd\u6570"),(0,l.kt)("h3",{id:"1\u51fd\u6570\u662f\u5982\u4f55\u88ab\u8c03\u7528\u7684"},"1\u3001\u51fd\u6570\u662f\u5982\u4f55\u88ab\u8c03\u7528\u7684"),(0,l.kt)("p",null,"\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u5757\uff0cCPU \u4f1a\u4e00\u6761\u4e00\u6761\u5730\u6328\u7740\u6267\u884c\u5176\u4e2d\u7684\u4ee3\u7801\u3002CPU \u5728\u6267\u884c\u4e3b\u8c03\u51fd\u6570\u4ee3\u7801\u65f6\u5982\u679c\u9047\u5230\u4e86\u88ab\u8c03\u51fd\u6570\uff0c\u4e3b\u8c03\u51fd\u6570\u5c31\u4f1a\u6682\u505c\uff0cCPU \u8f6c\u800c\u6267\u884c\u88ab\u8c03\u51fd\u6570\u7684\u4ee3\u7801\uff1b\u88ab\u8c03\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\u518d\u8fd4\u56de\u5230\u4e3b\u8c03\u51fd\u6570\uff0c\u4e3b\u8c03\u51fd\u6570\u6839\u636e\u521a\u624d\u7684\u72b6\u6001\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\u3002"),(0,l.kt)("p",null,"\u4e00\u4e2a C/C++ \u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\u53ef\u4ee5\u8ba4\u4e3a\u662f\u591a\u4e2a\u51fd\u6570\u4e4b\u95f4\u7684\u76f8\u4e92\u8c03\u7528\u8fc7\u7a0b\uff0c\u5b83\u4eec\u5f62\u6210\u4e86\u4e00\u4e2a\u6216\u7b80\u5355\u6216\u590d\u6742\u7684\u8c03\u7528\u94fe\u6761\uff0c\u8fd9\u4e2a\u94fe\u6761\u7684\u8d77\u70b9\u662f main()\uff0c\u7ec8\u70b9\u4e5f\u662f main()\u3002\u5f53 main() \u8c03\u7528\u5b8c\u4e86\u6240\u6709\u7684\u51fd\u6570\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u503c\uff08\u4f8b\u5982",(0,l.kt)("inlineCode",{parentName:"p"},"return 0;"),"\uff09\u6765\u7ed3\u675f\u81ea\u5df1\u7684\u751f\u547d\uff0c\u4ece\u800c\u7ed3\u675f\u6574\u4e2a\u7a0b\u5e8f\u3002"),(0,l.kt)("p",null,"\u51fd\u6570\u8c03\u7528\u662f\u6709\u65f6\u95f4\u548c\u7a7a\u95f4\u5f00\u9500\u7684\u3002\u7a0b\u5e8f\u5728\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u4e4b\u524d\u9700\u8981\u505a\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c\uff0c\u8981\u5c06\u5b9e\u53c2\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u8fd4\u56de\u5730\u5740\u4ee5\u53ca\u82e5\u5e72\u5bc4\u5b58\u5668\u90fd\u538b\u5165\u6808\u4e2d\uff0c\u7136\u540e\u624d\u80fd\u6267\u884c\u51fd\u6570\u4f53\u4e2d\u7684\u4ee3\u7801\uff1b\u51fd\u6570\u4f53\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u6bd5\u540e\u8fd8\u8981\u6e05\u7406\u73b0\u573a\uff0c\u5c06\u4e4b\u524d\u538b\u5165\u6808\u4e2d\u7684\u6570\u636e\u90fd\u51fa\u6808\uff0c\u624d\u80fd\u63a5\u7740\u6267\u884c\u51fd\u6570\u8c03\u7528\u4f4d\u7f6e\u4ee5\u540e\u7684\u4ee3\u7801\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u51fd\u6570\u4f53\u4ee3\u7801\u6bd4\u8f83\u591a\uff0c\u9700\u8981\u8f83\u957f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u90a3\u4e48\u51fd\u6570\u8c03\u7528\u673a\u5236\u5360\u7528\u7684\u65f6\u95f4\u53ef\u4ee5\u5ffd\u7565\uff1b"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u5982\u679c\u51fd\u6570\u53ea\u6709\u4e00\u4e24\u6761\u8bed\u53e5\uff0c\u90a3\u4e48\u5927\u90e8\u5206\u7684\u65f6\u95f4\u90fd\u4f1a\u82b1\u8d39\u5728\u51fd\u6570\u8c03\u7528\u673a\u5236\u4e0a"),"\uff0c\u8fd9\u79cd\u65f6\u95f4\u5f00\u9500\u5c31\u4e0d\u5bb9\u5ffd\u89c6\u3002")),(0,l.kt)("h3",{id:"2inline-\u4f7f\u7528"},"2\u3001inline \u4f7f\u7528"),(0,l.kt)("p",null,"\u4e3a\u4e86\u6d88\u9664\u51fd\u6570\u8c03\u7528\u7684\u65f6\u7a7a\u5f00\u9500\uff0cC++ \u63d0\u4f9b\u4e00\u79cd\u63d0\u9ad8\u6548\u7387\u7684\u65b9\u6cd5\uff0c\u5373\u5728",(0,l.kt)("strong",{parentName:"p"},"\u7f16\u8bd1\u65f6\u5c06\u51fd\u6570\u8c03\u7528\u5904\u7528\u51fd\u6570\u4f53\u66ff\u6362\uff0c\u7c7b\u4f3c\u4e8eC\u8bed\u8a00\u4e2d\u7684\u5b8f\u5c55\u5f00"),"\u3002\u8fd9\u79cd\u5728\u51fd\u6570\u8c03\u7528\u5904\u76f4\u63a5\u5d4c\u5165\u51fd\u6570\u4f53\u7684\u51fd\u6570\u79f0\u4e3a\u5185\u8054\u51fd\u6570\uff08Inline Function\uff09\uff0c\u53c8\u79f0\u5185\u5d4c\u51fd\u6570\u6216\u8005\u5185\u7f6e\u51fd\u6570\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u4e00\u822c\u53ea\u5c06\u90a3\u4e9b\u77ed\u5c0f\u7684\u3001\u9891\u7e41\u8c03\u7528\u7684\u51fd\u6570\u58f0\u660e\u4e3a\u5185\u8054\u51fd\u6570")),(0,l.kt)("p",null,"\u7f3a\u70b9\uff1a\u7f16\u8bd1\u540e\u7684\u7a0b\u5e8f\u4f1a\u5b58\u5728\u591a\u4efd\u76f8\u540c\u7684\u51fd\u6570\u62f7\u8d1d\uff0c\u5982\u679c\u88ab\u58f0\u660e\u4e3a\u5185",(0,l.kt)("strong",{parentName:"p"},"\u8054\u51fd\u6570\u7684\u51fd\u6570\u4f53\u975e\u5e38\u5927"),"\uff0c\u90a3\u4e48\u7f16\u8bd1\u540e\u7684",(0,l.kt)("strong",{parentName:"p"},"\u7a0b\u5e8f\u4f53\u79ef\u4e5f\u5c06\u4f1a\u53d8\u5f97\u5f88\u5927")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},'using namespace std;\n\ninline void swap(int *a, int *b) {\n    int temp;\n    temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint main() {\n    int m = 1, n = 2;\n    swap(&m, &n);\n    cout << m << " " << n << endl;  // 2 1\n\n    return 0;\n}\n')),(0,l.kt)("p",null,"\u6ce8\u610f\uff0c",(0,l.kt)("strong",{parentName:"p"},"\u8981\u5728\u51fd\u6570\u5b9a\u4e49\u5904\u6dfb\u52a0 inline \u5173\u952e\u5b57"),"\uff0c\u5728\u51fd\u6570\u58f0\u660e\u5904\u6dfb\u52a0 inline \u5173\u952e\u5b57\u867d\u7136\u6ca1\u6709\u9519\uff0c\u4f46\u8fd9\u79cd\u505a\u6cd5\u662f\u65e0\u6548\u7684\uff0c\u7f16\u8bd1\u5668\u4f1a\u5ffd\u7565\u51fd\u6570\u58f0\u660e\u5904\u7684 inline \u5173\u952e\u5b57\u3002"),(0,l.kt)("p",null,"\u7531\u4e8e\u5185\u8054\u51fd\u6570\u6bd4\u8f83\u77ed\u5c0f\uff0c\u6211\u4eec\u901a\u5e38\u7684\u505a\u6cd5\u662f\u7701\u7565\u51fd\u6570\u539f\u578b\uff0c\u5c06\u6574\u4e2a\u51fd\u6570\u5b9a\u4e49\uff08\u5305\u62ec\u51fd\u6570\u5934\u548c\u51fd\u6570\u4f53\uff09\u653e\u5728\u672c\u5e94\u8be5\u63d0\u4f9b\u51fd\u6570\u539f\u578b\u7684\u5730\u65b9"),(0,l.kt)("p",null,"\u6700\u540e\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5bf9\u51fd\u6570\u4f5c inline \u58f0\u660e\u53ea\u662f\u7a0b\u5e8f\u5458\u5bf9\u7f16\u8bd1\u5668\u63d0\u51fa\u7684\u4e00\u4e2a\u5efa\u8bae\uff0c\u800c\u4e0d\u662f\u5f3a\u5236\u6027\u7684\uff0c\u5e76\u975e\u4e00\u7ecf\u6307\u5b9a\u4e3a inline \u7f16\u8bd1\u5668\u5c31\u5fc5\u987b\u8fd9\u6837\u505a\u3002\u7f16\u8bd1\u5668\u6709\u81ea\u5df1\u7684\u5224\u65ad\u80fd\u529b\uff0c\u5b83\u4f1a\u6839\u636e\u5177\u4f53\u60c5\u51b5\u51b3\u5b9a\u662f\u5426\u8fd9\u6837\u505a\u3002"),(0,l.kt)("h2",{id:"\u4e94\u51fd\u6570\u91cd\u8f7d"},"\u4e94\u3001\u51fd\u6570\u91cd\u8f7d"),(0,l.kt)("h3",{id:"1\u7531\u6765"},"1\u3001\u7531\u6765"),(0,l.kt)("p",null,"\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981 ",(0,l.kt)("strong",{parentName:"p"},"\u5b9e\u73b0\u51e0\u4e2a\u529f\u80fd\u7c7b\u4f3c\u7684\u51fd\u6570\uff0c\u53ea\u662f\u6709\u4e9b\u7ec6\u8282\u4e0d\u540c\u3002")),(0,l.kt)("p",null,"\u4f8b\u5982\u4e0b\u9762\u8fd9\u6837\uff0c\u9700\u8981\u5206\u522b\u8bbe\u8ba1\u51fa\u56db\u4e2a\u4e0d\u540c\u540d\u7684\u51fd\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},"void swap1(int *a, int *b);      //\u4ea4\u6362 int \u53d8\u91cf\u7684\u503c\nvoid swap2(float *a, float *b);  //\u4ea4\u6362 float \u53d8\u91cf\u7684\u503c\nvoid swap3(char *a, char *b);    //\u4ea4\u6362 char \u53d8\u91cf\u7684\u503c\nvoid swap4(bool *a, bool *b);    //\u4ea4\u6362 bool \u53d8\u91cf\u7684\u503c\n")),(0,l.kt)("p",null,"\u4f46\u5728 C++ \u4e2d\uff0c\u8fd9\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u3002C++ \u5141\u8bb8\u591a\u4e2a\u51fd\u6570\u62e5\u6709\u76f8\u540c\u7684\u540d\u5b57\uff0c\u53ea\u8981\u5b83\u4eec\u7684\u53c2\u6570\u5217\u8868\u4e0d\u540c\u5c31\u53ef\u4ee5\uff0c\u8fd9\u5c31\u662f\u51fd\u6570\u7684\u91cd\u8f7d\uff08Function Overloading\uff09\u3002",(0,l.kt)("strong",{parentName:"p"},"\u501f\u52a9\u91cd\u8f7d\uff0c\u4e00\u4e2a\u51fd\u6570\u540d\u53ef\u4ee5\u6709\u591a\u79cd\u7528\u9014\u3002")),(0,l.kt)("h3",{id:"2\u4f7f\u7528"},"2\u3001\u4f7f\u7528"),(0,l.kt)("p",null,"\u91cd\u8f7d\u5c31\u662f\u5728\u4e00\u4e2a\u4f5c\u7528\u8303\u56f4\u5185\uff08\u540c\u4e00\u4e2a\u7c7b\u3001\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u7b49\uff09\u6709\u591a\u4e2a\u540d\u79f0\u76f8\u540c\u4f46\u53c2\u6570\u4e0d\u540c\u7684\u51fd\u6570\u3002"),(0,l.kt)("p",null,"\u91cd\u8f7d\u7684\u7ed3\u679c\u662f\u8ba9\u4e00\u4e2a\u51fd\u6570\u540d\u62e5\u6709\u4e86\u591a\u79cd\u7528\u9014\uff0c\u4f7f\u5f97\u547d\u540d\u66f4\u52a0\u65b9\u4fbf\uff08\u5728\u4e2d\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u7ed9\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u8d77\u540d\u5b57\u662f\u4e00\u4ef6\u8ba9\u4eba\u82e6\u607c\u7684\u95ee\u9898\uff09\uff0c\u8c03\u7528\u66f4\u52a0\u7075\u6d3b\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u51fd\u6570\u91cd\u8f7d\u7684\u89c4\u5219\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u51fd\u6570\u540d\u79f0\u5fc5\u987b\u76f8\u540c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53c2\u6570\u5217\u8868\u5fc5\u987b\u4e0d\u540c\uff08\u4e2a\u6570\u4e0d\u540c\u3001\u7c7b\u578b\u4e0d\u540c\u3001\u53c2\u6570\u6392\u5217\u987a\u5e8f\u4e0d\u540c\u7b49\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"\u53c2\u6570\u5217\u8868\u53c8\u53eb\u53c2\u6570\u7b7e\u540d\uff0c\u5305\u62ec\u53c2\u6570\u7684\u7c7b\u578b\u3001\u53c2\u6570\u7684\u4e2a\u6570\u548c\u53c2\u6570\u7684\u987a\u5e8f\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4e0d\u540c\u5c31\u53eb\u505a\u53c2\u6570\u5217\u8868\u4e0d\u540c"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4ec5\u4ec5 \u53c2\u6570\u540d\u79f0 \u4e0d\u540c\u662f\u4e0d\u53ef\u4ee5\u7684"),(0,l.kt)("li",{parentName:"ul"},"\u4ec5\u4ec5 \u8fd4\u56de\u7c7b\u578b \u4e0d\u540c\u4e0d\u8db3\u4ee5\u6210\u4e3a\u51fd\u6570\u7684\u91cd\u8f7d")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},'#include <iostream>\nusing namespace std;\n\nvoid Swap(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\nvoid Swap(float *a, float *b) {\n    float temp = *a;\n    *a = *b;\n    *b = temp;\n}\nvoid Swap(char *a, char *b) {\n    char temp = *a;\n    *a = *b;\n    *b = temp;\n}\nvoid Swap(bool *a, bool *b) {\n    char temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint main() {\n    int n1 = 100, n2 = 200;\n    Swap(&n1, &n2);\n    cout << n1 << ", " << n2 << endl;  // 200, 100\n\n    float f1 = 12.5, f2 = 56.93;\n    Swap(&f1, &f2);\n    cout << f1 << ", " << f2 << endl;  // 56.93, 12.5\n\n    char c1 = \'A\', c2 = \'B\';\n    Swap(&c1, &c2);\n    cout << c1 << ", " << c2 << endl;  // B, A\n\n    bool b1 = false, b2 = true;\n    Swap(&b1, &b2);\n    cout << b1 << ", " << b2 << endl;  // 1, 0\n    return 0;\n}\n')),(0,l.kt)("h3",{id:"3\u5982\u4f55\u505a\u5230\u91cd\u8f7d\u7684"},"3\u3001\u5982\u4f55\u505a\u5230\u91cd\u8f7d\u7684"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"C++ \u4ee3\u7801\u5728\u7f16\u8bd1\u65f6\u4f1a\u6839\u636e\u53c2\u6570\u5217\u8868\u5bf9\u51fd\u6570\u8fdb\u884c\u91cd\u547d\u540d")),(0,l.kt)("p",null,"\u4f8b\u5982",(0,l.kt)("inlineCode",{parentName:"p"},"void Swap(int a, int b)"),"\u4f1a\u88ab\u91cd\u547d\u540d\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"_Swap_int_int"),"\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"void Swap(float x, float y)"),"\u4f1a\u88ab\u91cd\u547d\u540d\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"_Swap_float_float"),"\u3002\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u4f20\u5165\u7684\u5b9e\u53c2\u53bb\u9010\u4e2a\u5339\u914d\uff0c\u4ee5\u9009\u62e9\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u5982\u679c\u5339\u914d\u5931\u8d25\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u62a5\u9519\uff0c\u8fd9\u53eb\u505a\u91cd\u8f7d\u51b3\u8bae\uff08Overload Resolution\uff09\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u6709\u4e0d\u540c\u7684\u91cd\u547d\u540d\u65b9\u5f0f\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u4e3e\u4f8b\u8bf4\u660e\uff0c\u5b9e\u9645\u60c5\u51b5\u53ef\u80fd\u5e76\u975e\u5982\u6b64\u3002")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u8bb2\uff0c\u51fd\u6570\u91cd\u8f7d\u4ec5\u4ec5\u662f\u8bed\u6cd5\u5c42\u9762\u7684\uff0c\u672c\u8d28\u4e0a\u5b83\u4eec\u8fd8\u662f\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u5360\u7528\u4e0d\u540c\u7684\u5185\u5b58\uff0c\u5165\u53e3\u5730\u5740\u4e5f\u4e0d\u4e00\u6837\u3002")))}m.isMDXComponent=!0}}]);
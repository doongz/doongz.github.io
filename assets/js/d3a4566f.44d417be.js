"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[32649],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),s=p(n),f=o,d=s["".concat(c,".").concat(f)]||s[f]||m[f]||i;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=f;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[s]="string"==typeof e?e:o,l[1]=a;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},24123:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={},l=void 0,a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u9762\u8bd5\u9898-04-02-<\u6784\u9020\u641c\u7d22\u6811>-\u6700\u5c0f\u9ad8\u5ea6\u6811",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u9762\u8bd5\u9898-04-02-<\u6784\u9020\u641c\u7d22\u6811>-\u6700\u5c0f\u9ad8\u5ea6\u6811",title:"\u9762\u8bd5\u9898-04-02-<\u6784\u9020\u641c\u7d22\u6811>-\u6700\u5c0f\u9ad8\u5ea6\u6811",description:"\u9898\u76ee\uff1a\u9762\u8bd5\u9898 04.02. \u6700\u5c0f\u9ad8\u5ea6\u6811",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u9762\u8bd5\u9898-04-02-<\u6784\u9020\u641c\u7d22\u6811>-\u6700\u5c0f\u9ad8\u5ea6\u6811.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u9762\u8bd5\u9898-04-02-<\u6784\u9020\u641c\u7d22\u6811>-\u6700\u5c0f\u9ad8\u5ea6\u6811",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u9762\u8bd5\u9898-04-02-<\u6784\u9020\u641c\u7d22\u6811>-\u6700\u5c0f\u9ad8\u5ea6\u6811",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u5251\u6307Offer-68-I-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u5251\u6307Offer-68-I-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"},next:{title:"\u9762\u8bd5\u9898-04-05-\u5408\u6cd5\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u9762\u8bd5\u9898-04-05-\u5408\u6cd5\u4e8c\u53c9\u641c\u7d22\u6811"}},c={},p=[],u={toc:p};function s(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/minimum-height-tree-lcci/"},"\u9762\u8bd5\u9898 04.02. \u6700\u5c0f\u9ad8\u5ea6\u6811")),(0,o.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4\uff0c\u5143\u7d20\u5404\u4e0d\u76f8\u540c\u4e14\u6309\u5347\u5e8f\u6392\u5217\uff0c\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\uff0c\u521b\u5efa\u4e00\u68f5\u9ad8\u5ea6\u6700\u5c0f\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u7ed9\u5b9a\u6709\u5e8f\u6570\u7ec4: [-10,-3,0,5,9],\n\n\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f\uff1a[0,-3,9,-10,null,5]\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e0b\u9762\u8fd9\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\n\n          0 \n         / \\ \n       -3   9 \n       /   / \n     -10  5 \n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"\u90a3\u5982\u4f55\u4fdd\u8bc1\u9ad8\u5ea6\u6700\u5c0f\u5462\uff1f\u5f53\u6811\u4e2d\u7684\u4efb\u610f\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u90fd\u4e0d\u8d85\u8fc7 1 \u65f6\uff0c\u6574\u68f5\u6811\u7684\u6df1\u5ea6\u6700\u5c0f\u3002"),(0,o.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u79cd\u6784\u9020\u6700\u5c0f\u9ad8\u5ea6\u6811\u7684\u601d\u8def\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u5e8f\u5217\u957f\u5ea6\u4e3a 0\uff0c\u90a3\u4e48\u662f\u4e00\u68f5\u7a7a\u6811\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u5e8f\u5217\u957f\u5ea6\u4e3a 1\uff0c\u90a3\u4e48\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u957f\u5ea6\u5927\u4e8e 1\uff0c\u90a3\u4e48\u9009\u53d6\u4e2d\u95f4\u4f4d\u7f6e\u7684\u6570\u8d4b\u7ed9\u6839\u8282\u70b9\uff0c\u7136\u540e\u524d\u4e00\u534a\u9012\u5f52\u6784\u5efa\u5de6\u5b50\u6811\uff0c\u540e\u4e00\u534a\u9012\u5f52\u6784\u5efa\u53f3\u5b50\u6811\u3002")),(0,o.kt)("p",null,"\u4ee5 ","[-5,-3,0,1,5,9]"," \u4e3a\u4f8b\uff0c\u6784\u9020\u8fc7\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"\u6784\u9020\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811.png",src:n(22018).Z,width:"646",height:"277"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* dfs(const vector<int> &nums, int L, int R) {\n        if(L > R) {\n            return nullptr;\n        }\n        int mid = (L+R)>>1;\n        auto ptr = new TreeNode(nums[mid]); //\u586b\u5145\u6839\u8282\u70b9\n        ptr->left = dfs(nums, L, mid-1); //\u6784\u9020\u5de6\u5b50\u6811\n        ptr->right = dfs(nums, mid+1, R); //\u6784\u9020\u53f3\u5b50\u6811\n        return ptr;\n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return dfs(nums, 0, nums.size()-1);\n    }\n};\n")))}s.isMDXComponent=!0},22018:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/\u6784\u9020\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811-87dccba980244388c82c83d834668822.png"}}]);
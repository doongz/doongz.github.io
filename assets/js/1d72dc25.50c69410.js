"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[97006],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>m});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),s=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},u=function(e){var r=s(e.components);return t.createElement(l.Provider,{value:r},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=s(n),d=o,m=p["".concat(l,".").concat(d)]||p[d]||f[d]||i;return n?t.createElement(m,c(c({ref:r},u),{},{components:n})):t.createElement(m,c({ref:r},u))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var a={};for(var l in r)hasOwnProperty.call(r,l)&&(a[l]=r[l]);a.originalType=e,a[p]="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=n[s];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81064:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var t=n(87462),o=(n(67294),n(3905));const i={},c=void 0,a={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u679a\u4e3e\u5c0f\u683c\u5b50\u5b9a\u70b9>-\u6709\u6548\u7684\u6570\u72ec",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u679a\u4e3e\u5c0f\u683c\u5b50\u5b9a\u70b9>-\u6709\u6548\u7684\u6570\u72ec",title:"<\u679a\u4e3e\u5c0f\u683c\u5b50\u5b9a\u70b9>-\u6709\u6548\u7684\u6570\u72ec",description:"\u9898\u76ee\uff1a36. \u6709\u6548\u7684\u6570\u72ec",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/36-<\u679a\u4e3e\u5c0f\u683c\u5b50\u5b9a\u70b9>-\u6709\u6548\u7684\u6570\u72ec.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u679a\u4e3e\u5c0f\u683c\u5b50\u5b9a\u70b9>-\u6709\u6548\u7684\u6570\u72ec",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u679a\u4e3e\u5c0f\u683c\u5b50\u5b9a\u70b9>-\u6709\u6548\u7684\u6570\u72ec",draft:!1,tags:[],version:"current",sidebarPosition:36,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"Z\u5b57\u5f62\u53d8\u6362",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/Z\u5b57\u5f62\u53d8\u6362"},next:{title:"<\u987a\u65f6\u9488\u904d\u5386>-\u87ba\u65cb\u77e9\u9635",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u904d\u5386>-\u87ba\u65cb\u77e9\u9635"}},l={},s=[],u={toc:s};function p(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/valid-sudoku/"},"36. \u6709\u6548\u7684\u6570\u72ec")),(0,o.kt)("p",null,"\u96be\u70b9\uff1acheck grid 3*3 \u679a\u4e3e\u6bcf\u4e2agrid\u7684\u5de6\u4e0a\u89d2\uff0c\u7136\u540e\u901a\u8fc7 dr dc \u627e\u5230\u5177\u4f53\u70b9"),(0,o.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)"),(0,o.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        int vis[10];\n\n        // check rows\n        for (int r = 0; r < 9; r++) {\n            memset(vis, 0, sizeof(vis));\n            for (int c = 0; c < 9; c++) {\n                if (board[r][c] == '.') continue;\n                int val = board[r][c] - '0';\n                if (vis[val] != 0) return false;\n                vis[val]++;\n            }\n        }\n\n        // check column\n        for (int c = 0; c < 9; c++) {\n            memset(vis, 0, sizeof(vis));\n            for (int r = 0; r < 9; r++) {\n                if (board[r][c] == '.') continue;\n                int val = board[r][c] - '0';\n                if (vis[val] != 0) return false;\n                vis[val]++;\n            }\n        }\n\n        // check grid 3*3 \u679a\u4e3e\u6bcf\u4e2agrid\u7684\u5de6\u4e0a\u89d2\n        for (int gr = 0; gr <= 6; gr += 3) {\n            for (int gc = 0; gc <= 6; gc += 3) {\n                memset(vis, 0, sizeof(vis));\n                for (int dr = 0; dr <= 2; dr++) {\n                    for (int dc = 0; dc <= 2; dc++) {\n                        if (board[gr + dr][gc + dc] == '.') continue;\n                        int val = board[gr + dr][gc + dc] - '0';\n                        if (vis[val] != 0) return false;\n                        vis[val]++;\n                    }\n                }\n            }\n        }\n\n        return true;\n    }\n};\n")))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[93769],{3905:(n,e,t)=>{t.d(e,{Zo:()=>f,kt:()=>m});var r=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var s=r.createContext({}),p=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},f=function(n){var e=p(n.components);return r.createElement(s.Provider,{value:e},n.children)},d="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,s=n.parentName,f=a(n,["components","mdxType","originalType","parentName"]),d=p(t),u=o,m=d["".concat(s,".").concat(u)]||d[u]||c[u]||i;return t?r.createElement(m,l(l({ref:e},f),{},{components:t})):r.createElement(m,l({ref:e},f))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,l=new Array(i);l[0]=u;var a={};for(var s in e)hasOwnProperty.call(e,s)&&(a[s]=e[s]);a.originalType=n,a[d]="string"==typeof n?n:o,l[1]=a;for(var p=2;p<i;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},20936:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const i={},l="\u5e76\u67e5\u96c6",a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/5-3-\u5e76\u67e5\u96c6",id:"Algorithm/\u6570\u636e\u7ed3\u6784/5-3-\u5e76\u67e5\u96c6",title:"\u5e76\u67e5\u96c6",description:"\u53c2\u80031\uff1ahttps://leetcode-cn.com/problems/number-of-provinces/solution/python-duo-tu-xiang-jie-bing-cha-ji-by-m-vjdr/",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/5-3-\u5e76\u67e5\u96c6.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/5-3-\u5e76\u67e5\u96c6",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/5-3-\u5e76\u67e5\u96c6",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u6811\u7684\u62d3\u5c55",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/5-2-\u6811\u7684\u62d3\u5c55"},next:{title:"\u6811\u72b6\u6570\u7ec4",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/5-4-\u6811\u72b6\u6570\u7ec4"}},s={},p=[{value:"\u4e00\u3001\u57fa\u672c\u6982\u5ff5",id:"\u4e00\u57fa\u672c\u6982\u5ff5",level:2},{value:"\u4e8c\u3001\u5e94\u7528",id:"\u4e8c\u5e94\u7528",level:2},{value:"1\u3001\u5904\u7406\u8fde\u901a\u5206\u91cf",id:"1\u5904\u7406\u8fde\u901a\u5206\u91cf",level:3},{value:"\u4e09\u3001\u5e76\u67e5\u96c6\u7684\u5b9e\u73b0",id:"\u4e09\u5e76\u67e5\u96c6\u7684\u5b9e\u73b0",level:2},{value:"1\u3001\u6570\u636e\u7ed3\u6784",id:"1\u6570\u636e\u7ed3\u6784",level:3},{value:"2\u3001\u521d\u59cb\u5316",id:"2\u521d\u59cb\u5316",level:3},{value:"3\u3001\u67e5\u627e\u7956\u5148",id:"3\u67e5\u627e\u7956\u5148",level:3},{value:"4\u3001\u5408\u5e76\u4e24\u4e2a\u8282\u70b9",id:"4\u5408\u5e76\u4e24\u4e2a\u8282\u70b9",level:3},{value:"5\u3001\u4e24\u8282\u70b9\u662f\u5426\u8fde\u901a",id:"5\u4e24\u8282\u70b9\u662f\u5426\u8fde\u901a",level:3},{value:"\u56db\u3001\u8def\u5f84\u538b\u7f29",id:"\u56db\u8def\u5f84\u538b\u7f29",level:2},{value:"1\u3001python\u6a21\u7248",id:"1python\u6a21\u7248",level:3},{value:"2\u3001c++\u6a21\u7248",id:"2c\u6a21\u7248",level:3},{value:"\u4e94\u3001\u542f\u53d1\u5f0f\u5408\u5e76\uff08\u6309\u79e9\u6392\u5e8f\uff09",id:"\u4e94\u542f\u53d1\u5f0f\u5408\u5e76\u6309\u79e9\u6392\u5e8f",level:2},{value:"1\u3001python\u6a21\u7248",id:"1python\u6a21\u7248-1",level:3},{value:"2\u3001c++\u6a21\u7248\uff08\u63a8\u8350\u4f7f\u7528\uff09",id:"2c\u6a21\u7248\u63a8\u8350\u4f7f\u7528",level:3}],f={toc:p};function d(n){let{components:e,...i}=n;return(0,o.kt)("wrapper",(0,r.Z)({},f,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u5e76\u67e5\u96c6"},"\u5e76\u67e5\u96c6"),(0,o.kt)("p",null,"\u53c2\u80031\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/number-of-provinces/solution/python-duo-tu-xiang-jie-bing-cha-ji-by-m-vjdr/"},"https://leetcode-cn.com/problems/number-of-provinces/solution/python-duo-tu-xiang-jie-bing-cha-ji-by-m-vjdr/")),(0,o.kt)("p",null,"\u53c2\u80032\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://oi-wiki.org/ds/dsu/"},"https://oi-wiki.org/ds/dsu/")),(0,o.kt)("h2",{id:"\u4e00\u57fa\u672c\u6982\u5ff5"},"\u4e00\u3001\u57fa\u672c\u6982\u5ff5"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"5-5",src:t(18265).Z,width:"1708",height:"280"})),(0,o.kt)("p",null,"\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u6811\u5f62\u7684\u6570\u636e\u7ed3\u6784\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u4e0d\u4ea4\u96c6\u7684 ",(0,o.kt)("strong",{parentName:"p"},"\u5408\u5e76")," \u53ca ",(0,o.kt)("strong",{parentName:"p"},"\u67e5\u8be2")," \u95ee\u9898\u3002 \u5b83\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u67e5\u627e\uff08Find\uff09\uff1a\u786e\u5b9a\u67d0\u4e2a\u5143\u7d20\u5904\u4e8e\u54ea\u4e2a\u5b50\u96c6\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u5408\u5e76\uff08Union\uff09\uff1a\u5c06\u4e24\u4e2a\u5b50\u96c6\u5408\u5e76\u6210\u4e00\u4e2a\u96c6\u5408\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u96c6\uff08Set\uff09\uff0c\u4ee3\u8868\u8fd9\u662f\u4e00\u4e2a\u4ee5\u5b57\u5178\u4e3a\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7684\u57fa\u672c\u529f\u80fd\u662f\u5408\u5e76\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u67e5\u627e\u96c6\u5408\u4e2d\u7684\u5143\u7d20")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5e76\u67e5\u96c6\u89e3\u51b3\u5355\u4e2a\u95ee\u9898\uff08\u6dfb\u52a0\uff0c\u5408\u5e76\uff0c\u67e5\u627e\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO(logn)"),"\uff0c\u82e5\u91c7\u7528\u8def\u5f84\u538b\u7f29\u53ef\u8fd1\u4f3c\u4e8eO(1)"),(0,o.kt)("p",null,"\u56e0\u6b64\uff0c\u5e76\u67e5\u96c6\u53ef\u4ee5\u5e94\u7528\u5230\u5728\u7ebf\u7b97\u6cd5\u4e2d"),(0,o.kt)("h2",{id:"\u4e8c\u5e94\u7528"},"\u4e8c\u3001\u5e94\u7528"),(0,o.kt)("h3",{id:"1\u5904\u7406\u8fde\u901a\u5206\u91cf"},"1\u3001\u5904\u7406\u8fde\u901a\u5206\u91cf"),(0,o.kt)("h2",{id:"\u4e09\u5e76\u67e5\u96c6\u7684\u5b9e\u73b0"},"\u4e09\u3001\u5e76\u67e5\u96c6\u7684\u5b9e\u73b0"),(0,o.kt)("h3",{id:"1\u6570\u636e\u7ed3\u6784"},"1\u3001\u6570\u636e\u7ed3\u6784"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(71469).Z,width:"1280",height:"720"})),(0,o.kt)("p",null,"\u5e76\u67e5\u96c6\u8ddf\u6811\u6709\u4e9b\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5979\u8ddf\u6811\u662f\u76f8\u53cd\u7684\u3002\u5728\u6811\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u91cc\u9762\uff0c\u6bcf\u4e2a\u8282\u70b9\u4f1a\u8bb0\u5f55\u5b83\u7684\u5b50\u8282\u70b9\u3002\u5728\u5e76\u67e5\u96c6\u91cc\uff0c",(0,o.kt)("strong",{parentName:"p"},"\u6bcf\u4e2a\u8282\u70b9\u4f1a\u8bb0\u5f55\u5b83\u7684\u7236\u8282\u70b9"),"\u3002"),(0,o.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u8282\u70b9\u662f\u76f8\u4e92\u8fde\u901a\u7684\uff08\u4ece\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u5230\u8fbe\u53e6\u4e00\u4e2a\u8282\u70b9\uff09\uff0c\u90a3\u4e48\u4ed6\u4eec\u5728\u540c\u4e00\u68f5\u6811\u91cc\uff0c\u6216\u8005\u8bf4\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u6216\u8005\u8bf4\u4ed6\u4eec\u7684",(0,o.kt)("strong",{parentName:"p"},"\u7956\u5148\u662f\u76f8\u540c\u7684"),"\u3002"),(0,o.kt)("h3",{id:"2\u521d\u59cb\u5316"},"2\u3001\u521d\u59cb\u5316"),(0,o.kt)("p",null,"\u5f53\u628a\u4e00\u4e2a\u65b0\u8282\u70b9\u6dfb\u52a0\u5230\u5e76\u67e5\u96c6\u4e2d\uff0c\u5b83\u7684\u7236\u8282\u70b9\u5e94\u8be5\u4e3a\u7a7a"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(92309).Z,width:"1280",height:"720"})),(0,o.kt)("h3",{id:"3\u67e5\u627e\u7956\u5148"},"3\u3001\u67e5\u627e\u7956\u5148"),(0,o.kt)("p",null,"\u67e5\u627e\u7956\u5148\u7684\u65b9\u6cd5\u662f\uff1a",(0,o.kt)("strong",{parentName:"p"},"\u5982\u679c\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u5c31\u4e0d\u65ad\u8fed\u4ee3"),"\u3002"),(0,o.kt)("p",null,"\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f18\u5316\u7684\u70b9\uff1a\u5982\u679c\u6211\u4eec\u6811\u5f88\u6df1\uff0c\u6bd4\u5982\u8bf4\u9000\u5316\u6210\u94fe\u8868\uff0c\u90a3\u4e48\u6bcf\u6b21\u67e5\u8be2\u7684\u6548\u7387\u90fd\u4f1a\u975e\u5e38\u4f4e\u3002\u6240\u4ee5\u6211\u4eec\u8981\u505a\u4e00\u4e0b",(0,o.kt)("strong",{parentName:"p"},"\u8def\u5f84\u538b\u7f29\u3002\u4e5f\u5c31\u662f\u628a\u6811\u7684\u6df1\u5ea6\u56fa\u5b9a\u4e3a\u4e8c"),"\u3002"),(0,o.kt)("p",null,"\u8fd9\u4e48\u505a\u53ef\u884c\u7684\u539f\u56e0\u662f\uff0c",(0,o.kt)("strong",{parentName:"p"},"\u5e76\u67e5\u96c6\u53ea\u662f\u8bb0\u5f55\u4e86\u8282\u70b9\u4e4b\u95f4\u7684\u8fde\u901a\u5173\u7cfb\uff0c\u800c\u8282\u70b9\u76f8\u4e92\u8fde\u901a\u53ea\u9700\u8981\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u7956\u5148\u5c31\u53ef\u4ee5\u4e86"),"\u3002\u8def\u5f84\u538b\u7f29\u53ef\u4ee5\u7528\u9012\u5f52\uff0c\u4e5f\u53ef\u4ee5\u8fed\u4ee3"),(0,o.kt)("p",null,"\u8def\u5f84\u538b\u7f29\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logn) = O(1)\uff0c\u5f53\u6210\u7ed3\u8bba\u8bb0\u4e0b"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(59046).Z,width:"1280",height:"720"})),(0,o.kt)("h3",{id:"4\u5408\u5e76\u4e24\u4e2a\u8282\u70b9"},"4\u3001\u5408\u5e76\u4e24\u4e2a\u8282\u70b9"),(0,o.kt)("p",null,"\u5982\u679c\u53d1\u73b0\u4e24\u4e2a\u8282\u70b9\u662f\u8fde\u901a\u7684\uff0c\u90a3\u4e48\u5c31\u8981\u628a\u4ed6\u4eec\u5408\u5e76\uff0c\u4e5f\u5c31\u662f\u4ed6\u4eec\u7684\u7956\u5148\u662f\u76f8\u540c\u7684\u3002\u8fd9\u91cc\u7a76\u7adf\u628a\u8c01\u5f53\u505a\u7236\u8282\u70b9\u4e00\u822c\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(59379).Z,width:"1280",height:"720"})),(0,o.kt)("h3",{id:"5\u4e24\u8282\u70b9\u662f\u5426\u8fde\u901a"},"5\u3001\u4e24\u8282\u70b9\u662f\u5426\u8fde\u901a"),(0,o.kt)("p",null,"\u6211\u4eec\u5224\u65ad\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u5904\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u5224\u65ad\u5b83\u4eec\u7684\u7956\u5148\u662f\u5426\u76f8\u540c"),(0,o.kt)("h2",{id:"\u56db\u8def\u5f84\u538b\u7f29"},"\u56db\u3001\u8def\u5f84\u538b\u7f29"),(0,o.kt)("h3",{id:"1python\u6a21\u7248"},"1\u3001python\u6a21\u7248"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'class UnionFind:\n    def __init__(self):\n        """\n        \u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\n        """\n        self.father = {}    \n    \n    def add(self, x):\n        """\n        \u6dfb\u52a0\u65b0\u8282\u70b9\uff0c\u5b83\u7684\u7236\u8282\u70b9\u5e94\u8be5\u4e3a\u7a7a\n        """\n        if x not in self.father:\n            self.father[x] = None\n\n    def find(self, x):\n        """\n        \u67e5\u627e\u6839\u8282\u70b9\uff0c\u5982\u679c\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u5c31\u4e0d\u65ad\u8fed\u4ee3\u3002\n        """\n        root = x\n        while self.father[root] != None:\n            root = self.father[root]\n\n        # \u8def\u5f84\u538b\u7f29\n        while x != root:\n            original_father = self.father[x]\n            self.father[x] = root\n            x = original_father\n        return root\n\n    def merge(self, x, y):\n        """\n        \u5408\u5e76\u4e24\u4e2a\u8282\u70b9\uff0cy\u7684\u6839\u7ed3\u70b9\u4f5c\u4e3ax\u6839\u8282\u70b9\u7684\u7236\u4eb2\n        """\n        root_x, root_y = self.find(x), self.find(y)\n\n        if root_x != root_y:\n            # root_x \u63a5\u5728 root_y \u540e\u9762\n            self.father[root_x] = root_y\n\n    def is_connected(self, x, y):\n        """\n        \u5224\u65ad\u4e24\u8282\u70b9\u662f\u5426\u76f8\u8fde\uff0c\u5224\u65ad\u5b83\u4eec\u7684\u7956\u5148\u662f\u5426\u76f8\u540c\n        """\n        return self.find(x) == self.find(y)\n      \n')),(0,o.kt)("h3",{id:"2c\u6a21\u7248"},"2\u3001c++\u6a21\u7248"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class UnionFind {\nprivate:\n    // \u8bb0\u5f55\u7236\u8282\u70b9\n    unordered_map<int, int> father;\n\npublic:\n    void add(int x) {\n        if (!father.count(x)) {\n            father[x] = -1;\n        }\n    }\n\n    int find(int x) {\n        int root = x;\n        while (father[root] != -1) {\n            root = father[root];\n        }\n\n        while (x != root) {\n            int original_father = father[x];\n            father[x] = root;\n            x = original_father;\n        }\n        return root;\n    }\n\n    void merge(int x, int y) {\n        int root_x = find(x);\n        int root_y = find(y);\n\n        if (root_x != root_y) {\n            father[root_x] = root_y;\n        }\n    }\n\n    bool is_connected(int x, int y) {\n        return find(x) == find(y);\n    }\n};\n")),(0,o.kt)("h2",{id:"\u4e94\u542f\u53d1\u5f0f\u5408\u5e76\u6309\u79e9\u6392\u5e8f"},"\u4e94\u3001\u542f\u53d1\u5f0f\u5408\u5e76\uff08\u6309\u79e9\u6392\u5e8f\uff09"),(0,o.kt)("p",null,"\u7531\u4e8e\u9700\u8981\u6211\u4eec\u652f\u6301\u7684\u53ea\u6709\u96c6\u5408\u7684\u5408\u5e76\u3001\u67e5\u8be2\u64cd\u4f5c\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u4e8c\u4e3a\u4e00\u65f6\uff0c\u65e0\u8bba\u5c06\u54ea\u4e00\u4e2a\u96c6\u5408\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u4e0b\u9762\uff0c\u90fd\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002\u4f46\u4e0d\u540c\u7684\u8fde\u63a5\u65b9\u6cd5\u5b58\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5dee\u5f02\u3002"),(0,o.kt)("p",null,"\u5177\u4f53\u6765\u8bf4\uff0c",(0,o.kt)("strong",{parentName:"p"},"\u5982\u679c\u6211\u4eec\u5c06\u4e00\u68f5\u70b9\u6570\u4e0e\u6df1\u5ea6\u90fd\u8f83\u5c0f\u7684\u96c6\u5408\u6811\u8fde\u63a5\u5230\u4e00\u68f5\u66f4\u5927\u7684\u96c6\u5408\u6811\u4e0b"),"\uff0c\u663e\u7136\u76f8\u6bd4\u4e8e\u53e6\u4e00\u79cd\u8fde\u63a5\u65b9\u6848\uff0c\u63a5\u4e0b\u6765\u6267\u884c\u67e5\u627e\u64cd\u4f5c\u7684\u7528\u65f6\u66f4\u5c0f\uff08\u4e5f\u4f1a\u5e26\u6765\u66f4\u4f18\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff09\u3002"),(0,o.kt)("p",null,"\u5f53\u7136\uff0c\u6211\u4eec\u4e0d\u603b\u80fd\u9047\u5230\u6070\u597d\u5982\u4e0a\u6240\u8ff0\u7684\u96c6\u5408\u2014\u2014\u2014\u2014\u70b9\u6570\u4e0e\u6df1\u5ea6\u90fd\u66f4\u5c0f\u3002\u9274\u4e8e\u70b9\u6570\u4e0e\u6df1\u5ea6\u8fd9\u4e24\u4e2a\u7279\u5f81\u90fd\u5f88\u5bb9\u6613\u7ef4\u62a4\uff0c\u6211\u4eec\u5e38\u5e38\u4ece\u4e2d\u62e9\u4e00\uff0c\u4f5c\u4e3a\u4f30\u4ef7\u51fd\u6570\u3002\u800c\u65e0\u8bba\u9009\u62e9\u54ea\u4e00\u4e2a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3a O(ma(m, n))"),(0,o.kt)("p",null,"\u5728\u7b97\u6cd5\u7ade\u8d5b\u7684\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u5373\u4fbf\u4e0d\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4ee3\u7801\u4e5f\u5f80\u5f80\u80fd\u591f\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u4efb\u52a1\u3002\u5728 Tarjan \u7684\u8bba\u6587","[1]","\u4e2d\uff0c\u8bc1\u660e\u4e86\u4e0d\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u3001\u53ea\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(mlogn)\u3002\u5728\u59da\u671f\u667a\u7684\u8bba\u6587","[2]","\u4e2d\uff0c\u8bc1\u660e\u4e86\u5728\u5e73\u5747\u60c5\u51b5\u4e0b"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u4e0d\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u3001\u53ea\u4f7f\u7528\u8def\u5f84\u538b\u7f29\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f O(ma(m, n))")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u5982\u679c\u53ea\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u800c\u4e0d\u4f7f\u7528\u8def\u5f84\u538b\u7f29\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(mlogn)"))),(0,o.kt)("p",null,"\u7531\u4e8e\u8def\u5f84\u538b\u7f29\u5355\u6b21\u5408\u5e76\u53ef\u80fd\u9020\u6210\u5927\u91cf\u4fee\u6539\uff0c\u6709\u65f6\u8def\u5f84\u538b\u7f29\u5e76\u4e0d\u9002\u5408\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u5728\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3001\u7ebf\u6bb5\u6811\u5206\u6cbb + \u5e76\u67e5\u96c6\u4e2d\uff0c\u4e00\u822c\u4f7f\u7528\u53ea\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u5e76\u67e5\u96c6\u3002"),(0,o.kt)("h3",{id:"1python\u6a21\u7248-1"},"1\u3001python\u6a21\u7248"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class UnionFind:\n    def __init__(self, n):\n        self.count = n\n        self.parent = [i for i in range(n)] # \u521d\u59cb\u5316\u8282\u70b9i\u7684\u7236\u8282\u70b9\u4e3ai\n        self.rank = [0] * n\n\n    def find(self, i):\n        # \u9012\u5f52\u67e5\u627e\u6839\u8282\u70b9\uff0c\u5982\u679c\u8282\u70b9i\u7684\u7236\u8282\u70b9\u4e3a\u672c\u8eab\u5c31\u627e\u5230\u4e86\u6839\uff0c\u7ed3\u675f\u9012\u5f52\n        if self.parent[i] != i:\n            self.parent[i] = self.find(self.parent[i])\n        return self.parent[i]\n\n    def union(self, x, y):\n        # \u5408\u5e76\u4e24\u4e2a\u8282\u70b9\n        rootx = self.find(x)\n        rooty = self.find(y)\n        if rootx != rooty:\n            if self.rank[rootx] < self.rank[rooty]:\n                rootx, rooty = rooty, rootx\n            self.parent[rooty] = rootx\n            if self.rank[rootx] == self.rank[rooty]:\n                self.rank[rootx] += 1\n            self.count -= 1\n            \n    def is_connected(self, x, y):\n        # \u5224\u65ad\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u8fde\u901a\n        return self.find(x) == self.find(y)\n\n    def disconnected(self, x):\n        # \u65ad\u5f00\u8282\u70b9\u4e0e\u4ed6\u7236\u4eb2\u7684\u8fde\u63a5\n        self.parent[x] = x\n        self.rank[x] = 0\n")),(0,o.kt)("h3",{id:"2c\u6a21\u7248\u63a8\u8350\u4f7f\u7528"},"2\u3001c++\u6a21\u7248\uff08\u63a8\u8350\u4f7f\u7528\uff09"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class UnionFind {\npublic:\n    vector<int> parent;  // \u4e0b\u6807idx\u4e3a\u8282\u70b9\uff0cparent[idx]\u4e3a\u8be5\u8282\u70b9\u7684\u7236\u4eb2\n    vector<int> size;    // \u82e5idx\u4e3a\u7236\u4eb2\u6839\u8282\u70b9\uff0csize[idx]\u4e3a\u8be5\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\n    int n;               // \u8282\u70b9\u6570\u91cf\n    int setCount;        // \u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\n\npublic:\n    UnionFind(int _n) : n(_n), setCount(_n), parent(_n), size(_n, 1) {\n        iota(parent.begin(), parent.end(), 0);\n    }\n\n    int find(int x) {\n        return parent[x] == x ? x : parent[x] = find(parent[x]);\n    }\n\n    bool unite(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x == y) return false;\n\n        if (size[x] < size[y]) {\n            swap(x, y);\n        }\n        parent[y] = x;       // x \u4f5c\u4e3a y \u7684\u7236\u4eb2\n        size[x] += size[y];  // \u7236\u4eb2\u8282\u70b9x\u7684\u8054\u901a\u5206\u91cf\u5927\u5c0f\u52a0\u4e0ay\u8282\u70b9\u7684\n        --setCount;\n        return true;\n    }\n\n    bool is_connected(int x, int y) {\n        x = find(x);\n        y = find(y);\n        return x == y;\n    }\n\n    void disconnected(int x) {\n        if (x != parent[x]) {\n            parent[x] = x;\n            size[x] = 1;\n            ++setCount;\n        }\n    }\n};\n")))}d.isMDXComponent=!0},18265:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/5-5-b2cb869e84b7920872982f1469c1dba4.png"},92309:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/add-382e0d0d30714863c1ae3e9ccebeba38.png"},59379:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/merge-ba3b9079ff89ec8cbb2cee1c6ea19648.png"},59046:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/\u538b\u7f29-7c86b1eb3b61e98e40e3fa399cf84471.JPG"},71469:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/\u5e76\u67e5\u96c6\u6570\u636e\u7ed3\u6784-ceffb11b185f7cbeb4d1acb99d6964df.png"}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[89818],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=c(n),f=i,d=s["".concat(p,".").concat(f)]||s[f]||m[f]||a;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8524:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const a={},l=void 0,o={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c>-\u5212\u5206\u5b57\u6bcd\u533a\u95f4",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c>-\u5212\u5206\u5b57\u6bcd\u533a\u95f4",title:"<\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c>-\u5212\u5206\u5b57\u6bcd\u533a\u95f4",description:"763. \u5212\u5206\u5b57\u6bcd\u533a\u95f4",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/763-<\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c>-\u5212\u5206\u5b57\u6bcd\u533a\u95f4.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c>-\u5212\u5206\u5b57\u6bcd\u533a\u95f4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c>-\u5212\u5206\u5b57\u6bcd\u533a\u95f4",draft:!1,tags:[],version:"current",sidebarPosition:763,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5de6\u53f3\u53cc\u6307\u9488>-\u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32 \u2161",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u5de6\u53f3\u53cc\u6307\u9488>-\u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32 \u2161"},next:{title:"<\u5bfb\u627e\u533a\u95f4+\u5de6\u53f3\u53cc\u6307\u9488>-\u63a8\u591a\u7c73\u8bfa",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u5bfb\u627e\u533a\u95f4+\u5de6\u53f3\u53cc\u6307\u9488>-\u63a8\u591a\u7c73\u8bfa"}},p={},c=[{value:"\u65b9\u6cd5\uff1a\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c",id:"\u65b9\u6cd5\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c",level:2}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/partition-labels/"},"763. \u5212\u5206\u5b57\u6bcd\u533a\u95f4")),(0,i.kt)("p",null,"\u5b57\u7b26\u4e32 ",(0,i.kt)("inlineCode",{parentName:"p"},"S")," \u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u7247\u6bb5\uff0c\u540c\u4e00\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d\u3002\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7247\u6bb5\u7684\u957f\u5ea6\u7684\u5217\u8868\u3002"),(0,i.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1aS = "ababcbacadefegdehijhklij"\n\u8f93\u51fa\uff1a[9,7,8]\n\u89e3\u91ca\uff1a\n\u5212\u5206\u7ed3\u679c\u4e3a "ababcbaca", "defegde", "hijhklij"\u3002\n\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d\u3002\n\u50cf "ababcbacadefegde", "hijhklij" \u7684\u5212\u5206\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5212\u5206\u7684\u7247\u6bb5\u6570\u8f83\u5c11\u3002\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"S"),"\u7684\u957f\u5ea6\u5728",(0,i.kt)("inlineCode",{parentName:"li"},"[1, 500]"),"\u4e4b\u95f4\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"S"),"\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd ",(0,i.kt)("inlineCode",{parentName:"li"},"'a'")," \u5230 ",(0,i.kt)("inlineCode",{parentName:"li"},"'z'")," \u3002")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c"},"\u65b9\u6cd5\uff1a\u68c0\u67e5\u66f4\u65b0\u53f3\u8fb9\u754c"),(0,i.kt)("p",null,"\u5148\u7528 map \u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u7684\u8d77\u59cb\u4f4d\u7f6e"),(0,i.kt)("p",null,"\u57fa\u4e8e\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u770b\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u8d77\u6b62\u4f4d\u7f6e ","[left, right]"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4e00\u5207\u987a\u5229\u7684\u60c5\u51b5\u4e0b\uff0c",(0,i.kt)("strong",{parentName:"li"},"\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u5b57\u6bcd\u7684\u8d77\u6b62\u4f4d\u7f6e\uff0c\u90fd\u5e94\u5728 ","[left, right]"," \u5185")),(0,i.kt)("li",{parentName:"ul"},"\u4f46\u662f\u80af\u5b9a\u6709\u5b57\u6bcd\u7684\u7ed3\u675f\u4f4d\u7f6e\u4f1a\u8d85\u8fc7 right\uff0c\u8fd9\u4e2a\u65f6\u5019\u66f4\u65b0 right \u8fb9\u754c"),(0,i.kt)("li",{parentName:"ul"},"\u5f53 i \u904d\u5386\u5230 right \u65f6\uff0c\u4ee3\u8868\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u5b57\u6bcd\u90fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u8bb0\u5f55\u957f\u5ea6")),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(1)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    vector<int> partitionLabels(string s) {\n        int n = s.size();\n        unordered_map<char, vector<int>> charMap;\n        for (int i = 0; i < n; i++) {\n            if (charMap.count(s[i]) == 0) {\n                charMap[s[i]] = {i, i};\n            } else {\n                charMap[s[i]][1] = i;\n            }\n        }\n        // for (auto &[k, v] : charMap) {\n        //     cout << k << " : " << v[0] << ", " << v[1] << endl;\n        // }\n        vector<int> ans;\n        int left = charMap[s[0]][0];\n        int right = charMap[s[0]][1];\n        int i = 0;\n        while (i < n) {\n            if (charMap[s[i]][1] > right) {\n                right = charMap[s[i]][1];\n            }\n            if (i == right) {\n                ans.push_back(right - left + 1);\n                if (i + 1 < n) {\n                    left = charMap[s[i + 1]][0];\n                    right = charMap[s[i + 1]][1];\n                }\n            }\n            i++;\n        }\n        return ans;\n    }\n};\n')))}s.isMDXComponent=!0}}]);
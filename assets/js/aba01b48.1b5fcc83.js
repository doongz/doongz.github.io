"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[91478],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>v});var r=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function m(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),c=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},p=function(n){var e=c(n.components);return r.createElement(l.Provider,{value:e},n.children)},s="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,l=n.parentName,p=m(n,["components","mdxType","originalType","parentName"]),s=c(t),d=o,v=s["".concat(l,".").concat(d)]||s[d]||u[d]||i;return t?r.createElement(v,a(a({ref:e},p),{},{components:t})):r.createElement(v,a({ref:e},p))}));function v(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,a=new Array(i);a[0]=d;var m={};for(var l in e)hasOwnProperty.call(e,l)&&(m[l]=e[l]);m.originalType=n,m[s]="string"==typeof n?n:o,a[1]=m;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},14126:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>m,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const i={},a=void 0,m={unversionedId:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u6a21\u7248\u9898-\u526a\u679d-\u8bb0\u5fc6\u5316-dp>-\u51fa\u754c\u7684\u8def\u5f84\u6570",id:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u6a21\u7248\u9898-\u526a\u679d-\u8bb0\u5fc6\u5316-dp>-\u51fa\u754c\u7684\u8def\u5f84\u6570",title:"<\u6a21\u7248\u9898-\u526a\u679d-\u8bb0\u5fc6\u5316-dp>-\u51fa\u754c\u7684\u8def\u5f84\u6570",description:"576. \u51fa\u754c\u7684\u8def\u5f84\u6570",source:"@site/docs/Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/576-<\u6a21\u7248\u9898-\u526a\u679d-\u8bb0\u5fc6\u5316-dp>-\u51fa\u754c\u7684\u8def\u5f84\u6570.md",sourceDirName:"Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22",slug:"/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u6a21\u7248\u9898-\u526a\u679d-\u8bb0\u5fc6\u5316-dp>-\u51fa\u754c\u7684\u8def\u5f84\u6570",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u6a21\u7248\u9898-\u526a\u679d-\u8bb0\u5fc6\u5316-dp>-\u51fa\u754c\u7684\u8def\u5f84\u6570",draft:!1,tags:[],version:"current",sidebarPosition:576,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u8bb0\u5fc6\u5316-\u52a8\u6001\u89c4\u5212>-\u5b66\u751f\u51fa\u52e4\u8bb0\u5f55II",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u8bb0\u5fc6\u5316-\u52a8\u6001\u89c4\u5212>-\u5b66\u751f\u51fa\u52e4\u8bb0\u5f55II"},next:{title:"<\u8bb0\u5fc6\u5316\u641c\u7d22>-\u9a91\u58eb\u5728\u68cb\u76d8\u4e0a\u7684\u6982\u7387",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u8bb0\u5fc6\u5316\u641c\u7d22/<\u8bb0\u5fc6\u5316\u641c\u7d22>-\u9a91\u58eb\u5728\u68cb\u76d8\u4e0a\u7684\u6982\u7387"}},l={},c=[{value:"\u65b9\u6cd5\u4e00\uff1adfs+\u526a\u679d\uff08\u8d85\u65f6)",id:"\u65b9\u6cd5\u4e00dfs\u526a\u679d\u8d85\u65f6",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22",id:"\u65b9\u6cd5\u4e8c\u8bb0\u5fc6\u5316\u641c\u7d22",level:2},{value:"\u65b9\u6cd5\u4e09\uff1a\u52a8\u6001\u89c4\u5212\uff08\u81ea\u5e95\u5411\u4e0a\uff09",id:"\u65b9\u6cd5\u4e09\u52a8\u6001\u89c4\u5212\u81ea\u5e95\u5411\u4e0a",level:2}],p={toc:c};function s(n){let{components:e,...i}=n;return(0,o.kt)("wrapper",(0,r.Z)({},p,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/out-of-boundary-paths/"},"576. \u51fa\u754c\u7684\u8def\u5f84\u6570")),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u5927\u5c0f\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"m x n")," \u7684\u7f51\u683c\u548c\u4e00\u4e2a\u7403\u3002\u7403\u7684\u8d77\u59cb\u5750\u6807\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"[startRow, startColumn]")," \u3002\u4f60\u53ef\u4ee5\u5c06\u7403\u79fb\u5230\u5728\u56db\u4e2a\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u5355\u5143\u683c\u5185\uff08\u53ef\u4ee5\u7a7f\u8fc7\u7f51\u683c\u8fb9\u754c\u5230\u8fbe\u7f51\u683c\u4e4b\u5916\uff09\u3002\u4f60 ",(0,o.kt)("strong",{parentName:"p"},"\u6700\u591a")," \u53ef\u4ee5\u79fb\u52a8 ",(0,o.kt)("inlineCode",{parentName:"p"},"maxMove")," \u6b21\u7403\u3002"),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e94\u4e2a\u6574\u6570 ",(0,o.kt)("inlineCode",{parentName:"p"},"m"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"n"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"maxMove"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"startRow")," \u4ee5\u53ca ",(0,o.kt)("inlineCode",{parentName:"p"},"startColumn")," \uff0c\u627e\u51fa\u5e76\u8fd4\u56de\u53ef\u4ee5\u5c06\u7403\u79fb\u51fa\u8fb9\u754c\u7684\u8def\u5f84\u6570\u91cf\u3002\u56e0\u4e3a\u7b54\u6848\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u8fd4\u56de\u5bf9 ",(0,o.kt)("inlineCode",{parentName:"p"},"109 + 7")," ",(0,o.kt)("strong",{parentName:"p"},"\u53d6\u4f59")," \u540e\u7684\u7ed3\u679c\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:t(82927).Z,width:"827",height:"489"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1am = 2, n = 2, maxMove = 2, startRow = 0, startColumn = 0\n\u8f93\u51fa\uff1a6\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:t(82952).Z,width:"756",height:"443"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1am = 1, n = 3, maxMove = 3, startRow = 0, startColumn = 1\n\u8f93\u51fa\uff1a12\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= m, n <= 50")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0 <= maxMove <= 50")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0 <= startRow < m")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0 <= startColumn < n"))),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e00dfs\u526a\u679d\u8d85\u65f6"},"\u65b9\u6cd5\u4e00\uff1adfs+\u526a\u679d\uff08\u8d85\u65f6)"),(0,o.kt)("p",null,"\u526a\u679d\u7684\u6280\u5de7\uff1a\u7528\u5f53\u524d\u4f4d\u7f6e\u548c move \u6b21\u6570\u8fdb\u884c\u8ba1\u7b97\uff0c\u56db\u4e2a\u65b9\u5411\u5224\u65ad\u662f\u5426\u53ef\u80fd\u8d70\u51fa\u8fb9\u754c"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5269\u4f59\u53ef\u8d70\u6b65\u6570\u300c\u5c0f\u4e8e\u300d\u51fa\u56db\u5468\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u5c31\u8d70\u4e0d\u51fa")),(0,o.kt)("p",null,"\u6ce8\u610f\uff1a\u672c\u9898\u9700\u8981\u8d70\u56de\u5934\u8def"),(0,o.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(4^n)")),(0,o.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(n)"),"\uff0c\u9012\u5f52\u6808\u6700\u6df1\u4e3a maxMove"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"76 / 94")," \u4e2a\u901a\u8fc7\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5361\u5728\u8fd9\u4e2a\u7528\u4f8b\u4e0a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"8\n7\n16\n1\n5\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    int mod = 1e9 + 7;\n    int rows;\n    int cols;\n    int _maxMove;\n    vector<pair<int, int>> direction;\n\n    // \u8fd4\u56de\u5f53\u524d\u5b50\u95ee\u9898 r c move \u540e\u7684\u7ed3\u679c\n    int dfs(int r, int c, int move) {\n        if (move == _maxMove + 1) return 0;                  // \u79fb\u52a8\u6b21\u6570\u8017\u5c3d\n        if (r == -1 || r == rows || c == -1 || c == cols) {  // \u51fa\u754c\n            // cout << r << " " << c << endl;\n            return 1;\n        }\n        // \u526a\u679d\uff0c\u56db\u4e2a\u65b9\u5411\u5224\u65ad\u662f\u5426\u53ef\u80fd\u8d70\u51fa\u8fb9\u754c\uff0c\u5269\u4f59\u53ef\u8d70\u6b65\u6570 \u5c0f\u4e8e \u51fa\u56db\u5468\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u5c31\u8d70\u4e0d\u51fa\n        // \u5269\u4f59\u53ef\u8d70 _maxMove - move \u6b65\n        // \u8d70 r-0+1 \u6b65\u53ef\u51fa\u4e0a\u8fb9\u754c\n        // \u8d70 rows-1-r+1 \u6b65\u53ef\u51fa\u4e0b\u8fb9\u754c\n        // \u8d70 c-0+1 \u6b65\u53ef\u51fa\u5de6\u8fb9\u754c\n        // \u8d70 cols-1-c+1 \u6b65\u53ef\u51fa\u53f3\u8fb9\u754c\n        int minMove = INT_MAX;\n        minMove = min(minMove, r+1);\n        minMove = min(minMove, rows-r);\n        minMove = min(minMove, c+1);\n        minMove = min(minMove, cols-c);\n        if (_maxMove - move < minMove) return 0;\n\n        int cnt = 0;\n        for (auto d : direction) {\n            int nr = r + d.first;\n            int nc = c + d.second;\n            cnt += dfs(nr, nc, move + 1);\n            cnt = cnt % mod;\n        }\n        return cnt;\n    }\n\n    int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {\n        rows = m;\n        cols = n;\n        _maxMove = maxMove;\n        direction = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\n        return dfs(startRow, startColumn, 0);\n    }\n};\n')),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u8bb0\u5fc6\u5316\u641c\u7d22"},"\u65b9\u6cd5\u4e8c\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22"),(0,o.kt)("p",null,"\u300c\u5b50\u95ee\u9898\u300d\u7531\u4e09\u4e2a\u7ef4\u5ea6\u6784\u6210\uff1a\u5f53\u524d\u4f4d\u7f6er\u3001\u5f53\u524d\u4f4d\u7f6ec\u3001\u5df2\u8d70\u7684\u957f\u5ea6move"),(0,o.kt)("p",null,"\u5f53\u4e0b\u6b21\u9047\u89c1\u8fd9\u4e2a\u300c\u5b50\u95ee\u9898\u300d\u65f6\uff0c\u4f1a\u91cd\u65b0\u53bb\u8ba1\u7b97\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528 memo \u8fdb\u884c\u8bb0\u5f55\u300c\u5b50\u95ee\u9898\u300d"),(0,o.kt)("p",null,"memo\u6784\u6210\uff1ar\u3001c\u3001move \u7684\u6700\u5927\u503c\u4e3a 50\uff0c\u56e0\u6b64\u53ef\u4f7f\u7528\u4e09\u7ef4\u6570\u7ec4\u8fdb\u884c\u8bb0\u5f55"),(0,o.kt)("p",null,"\u6ce8\u610f\uff1amove \u7684\u8fd9\u4e00\u7ef4\u5ea6\u8981\u7533\u8bf7\u591a\u4e00\u4f4d\uff0c\u56e0\u4e3a\u8981\u7528\u5230 1 \u5230 50"),(0,o.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(m*n*maxMove)")),(0,o.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(m*n*maxMove)")),(0,o.kt)("p",null,"\u4e0d\u526a\u679d\uff1a\u6267\u884c\u7528\u65f6\uff1a8 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8688.02%\u7684\u7528\u6237\uff0c\u5185\u5b58\u6d88\u8017\uff1a9 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8668.98%\u7684\u7528\u6237"),(0,o.kt)("p",null,"\u526a\u679d\uff1a\u6267\u884c\u7528\u65f6\uff1a12 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8671.75%\u7684\u7528\u6237\uff0c\u5185\u5b58\u6d88\u8017\uff1a9 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8667.59%\u7684\u7528\u6237"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int mod = 1e9 + 7;\n    int rows;\n    int cols;\n    int _maxMove;\n    vector<pair<int, int>> direction;\n    vector<vector<vector<int>>> memo;\n\n    // \u8fd4\u56de\u5f53\u524d\u5b50\u95ee\u9898 r c move \u540e\u7684\u7ed3\u679c\n    int dfs(int r, int c, int move) {\n        if (move == _maxMove + 1) return 0;                  // \u79fb\u52a8\u6b21\u6570\u8017\u5c3d\n        if (r == -1 || r == rows || c == -1 || c == cols) {  // \u51fa\u754c\n            return 1;\n        }\n        // \u526a\u679d\n        int minMove = INT_MAX;\n        minMove = min(minMove, r+1);\n        minMove = min(minMove, rows-r);\n        minMove = min(minMove, c+1);\n        minMove = min(minMove, cols-c);\n        if (_maxMove - move < minMove) return 0;\n        \n        if (memo[r][c][move] != -1) return memo[r][c][move];\n        int cnt = 0;\n        for (auto d : direction) {\n            int nr = r + d.first;\n            int nc = c + d.second;\n            cnt += dfs(nr, nc, move + 1);\n            cnt = cnt % mod;\n        }\n        memo[r][c][move] = cnt;\n        return cnt;\n    }\n\n    int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {\n        rows = m;\n        cols = n;\n        _maxMove = maxMove;\n        direction = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\n        memo.resize(m, vector<vector<int>>(n, vector<int>(maxMove+1, -1)));\n        return dfs(startRow, startColumn, 0);\n    }\n};\n")),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e09\u52a8\u6001\u89c4\u5212\u81ea\u5e95\u5411\u4e0a"},"\u65b9\u6cd5\u4e09\uff1a\u52a8\u6001\u89c4\u5212\uff08\u81ea\u5e95\u5411\u4e0a\uff09"),(0,o.kt)("p",null,"\u6700\u5e95\u5c42\u7684\u300c\u5b50\u95ee\u9898\u300d\u662f\u786e\u5b9a\u7684\uff0c\u5373\u300c\u8fb9\u754c\u5916\u4e00\u5c42\u300d\u7684\u7ed3\u679c\u662f 1\uff0c\u56e0\u6b64\u53ef\u7528\u52a8\u6001\u89c4\u5212\u300c\u81ea\u5e95\u5411\u4e0a\u300d"),(0,o.kt)("p",null,"\u300c\u5b50\u95ee\u9898\u300d\u7531\u4e09\u4e2a\u7ef4\u5ea6\u6784\u6210\uff1a\u5f53\u524d\u4f4d\u7f6e\u7684r\u3001c\u3001\u5df2\u8d70\u6b65\u6570 move\uff0c\u56e0\u6b64\u53ef\u7528\u4e09\u7ef4\u6570\u7ec4\u8bb0\u5f55"),(0,o.kt)("p",null,"\u521d\u59cb\u5316\uff1a\u300c\u8fb9\u754c\u5916\u4e00\u5c42\u300d\u7684\u4f4d\u7f6e\u4e0d\u65b9\u4fbf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u521d\u59cb\u5316\u300c\u8fb9\u754c\u4e00\u5c42\u300d"),(0,o.kt)("p",null,"\u8003\u8651\u4e0b\u9762\u4e09\u79cd\u60c5\u51b5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"21112\n10001\n21112\n\n32223\n\n3\n2\n2\n3\n")),(0,o.kt)("p",null,"\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u5c06\u300c\u6b65\u6570\u300d\u7684\u5faa\u73af\u653e\u5230\u6700\u5916\u5c42\uff0c\u56e0\u4e3a\u53ea\u6709\u5c06\u6240\u6709\u7684 0 \u6b65\u8ba1\u7b97\u5b8c\u4e86\uff0c\u624d\u80fd\u8ba1\u7b97 1 \u6b65\uff0c....\uff0c\u6700\u540e\u8ba1\u7b97 maxMove \u6b65"),(0,o.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(m*n*maxMove)")),(0,o.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"O(m*n*maxMove)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {\n        int mod = 1e9 + 7;\n        vector<vector<vector<int>>> dp(m, vector<vector<int>>(n, vector<int>(maxMove + 1, 0)));\n        vector<pair<int, int>> direction = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\n\n        // \u521d\u59cb\u5316\uff0c\u5b66\u4e60\u4e0b\u5199\u6cd5\n        for (int k = 1; k < maxMove + 1; k++) {  // \u6b65\u6570\n            for (int r = 0; r < m; r++) {        // \u884c\n                for (int c = 0; c < n; c++) {    // \u5217\n                    if (r == 0) dp[r][c][k]++;\n                    if (c == 0) dp[r][c][k]++;\n                    if (r == m - 1) dp[r][c][k]++;\n                    if (c == n - 1) dp[r][c][k]++;\n                }\n            }\n        }\n\n        for (int k = 1; k < maxMove + 1; k++) {  // \u6b65\u6570\n            for (int r = 0; r < m; r++) {        // \u884c\n                for (int c = 0; c < n; c++) {    // \u5217\n                    for (auto d : direction) {\n                        int before_r = r + d.first;\n                        int before_c = c + d.second;\n                        if (0 <= before_r && before_r < m && 0 <= before_c && before_c < n) {\n                            dp[r][c][k] += dp[before_r][before_c][k - 1];\n                            dp[r][c][k] %= mod;\n                        }\n                    }\n                }\n            }\n        }\n\n        return dp[startRow][startColumn][maxMove];\n    }\n};\n")))}s.isMDXComponent=!0},82927:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/out_of_boundary_paths_1-4d786ab8606cee4f6e7fed037057e4ac.png"},82952:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/out_of_boundary_paths_2-d18a52618418d9c9fa50c708693ec413.png"}}]);
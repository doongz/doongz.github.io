"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6365],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>m});var i=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,i,r=function(n,e){if(null==n)return{};var t,i,r={},o=Object.keys(n);for(i=0;i<o.length;i++)t=o[i],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(i=0;i<o.length;i++)t=o[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var a=i.createContext({}),s=function(n){var e=i.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},p=function(n){var e=s(n.components);return i.createElement(a.Provider,{value:e},n.children)},u="mdxType",k={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,a=n.parentName,p=c(n,["components","mdxType","originalType","parentName"]),u=s(t),d=r,m=u["".concat(a,".").concat(d)]||u[d]||k[d]||o;return t?i.createElement(m,l(l({ref:e},p),{},{components:t})):i.createElement(m,l({ref:e},p))}));function m(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,l=new Array(o);l[0]=d;var c={};for(var a in e)hasOwnProperty.call(e,a)&&(c[a]=e[a]);c.originalType=n,c[u]="string"==typeof n?n:r,l[1]=c;for(var s=2;s<o;s++)l[s]=t[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},68778:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var i=t(87462),r=(t(67294),t(3905));const o={},l=void 0,c={unversionedId:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u516c\u5e73\u5206\u53d1\u997c\u5e72",id:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u516c\u5e73\u5206\u53d1\u997c\u5e72",title:"\u516c\u5e73\u5206\u53d1\u997c\u5e72",description:"\u9898\u76ee\uff1a2305. \u516c\u5e73\u5206\u53d1\u997c\u5e72",source:"@site/docs/Algorithm/6-\u7cfb\u5217\u9898\u76ee/07-\u5b50\u96c6\u5212\u5206\u95ee\u9898/2305-\u516c\u5e73\u5206\u53d1\u997c\u5e72.md",sourceDirName:"Algorithm/6-\u7cfb\u5217\u9898\u76ee/07-\u5b50\u96c6\u5212\u5206\u95ee\u9898",slug:"/Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u516c\u5e73\u5206\u53d1\u997c\u5e72",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u516c\u5e73\u5206\u53d1\u997c\u5e72",draft:!1,tags:[],version:"current",sidebarPosition:2305,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"\u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6"},next:{title:"LRU \u7f13\u5b58\u5b9e\u73b0",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/LRU\u7f13\u5b58\u5b9e\u73b0"}},a={},s=[{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u56de\u6eaf+\u526a\u679d",id:"\u65b9\u6cd5\u4e8c\u56de\u6eaf\u526a\u679d",level:2}],p={toc:s};function u(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u9898\u76ee\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/fair-distribution-of-cookies/"},"2305. \u516c\u5e73\u5206\u53d1\u997c\u5e72")),(0,r.kt)("p",null,"\u9898\u89e3\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/fair-distribution-of-cookies/solution/jian-zhi-hui-su-by-baoya_uncle-7s48/"},"https://leetcode.cn/problems/fair-distribution-of-cookies/solution/jian-zhi-hui-su-by-baoya_uncle-7s48/")),(0,r.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,r.kt)("inlineCode",{parentName:"p"},"cookies")," \uff0c\u5176\u4e2d ",(0,r.kt)("inlineCode",{parentName:"p"},"cookies[i]")," \u8868\u793a\u5728\u7b2c ",(0,r.kt)("inlineCode",{parentName:"p"},"i")," \u4e2a\u96f6\u98df\u5305\u4e2d\u7684\u997c\u5e72\u6570\u91cf\u3002\u53e6\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 ",(0,r.kt)("inlineCode",{parentName:"p"},"k")," \u8868\u793a\u7b49\u5f85\u5206\u53d1\u96f6\u98df\u5305\u7684\u5b69\u5b50\u6570\u91cf\uff0c",(0,r.kt)("strong",{parentName:"p"},"\u6240\u6709")," \u96f6\u98df\u5305\u90fd\u9700\u8981\u5206\u53d1\u3002\u5728\u540c\u4e00\u4e2a\u96f6\u98df\u5305\u4e2d\u7684\u6240\u6709\u997c\u5e72\u90fd\u5fc5\u987b\u5206\u53d1\u7ed9\u540c\u4e00\u4e2a\u5b69\u5b50\uff0c\u4e0d\u80fd\u5206\u5f00\u3002"),(0,r.kt)("p",null,"\u5206\u53d1\u7684 ",(0,r.kt)("strong",{parentName:"p"},"\u4e0d\u516c\u5e73\u7a0b\u5ea6")," \u5b9a\u4e49\u4e3a\u5355\u4e2a\u5b69\u5b50\u5728\u5206\u53d1\u8fc7\u7a0b\u4e2d\u80fd\u591f\u83b7\u5f97\u997c\u5e72\u7684\u6700\u5927\u603b\u6570\u3002"),(0,r.kt)("p",null,"\u8fd4\u56de\u6240\u6709\u5206\u53d1\u7684\u6700\u5c0f\u4e0d\u516c\u5e73\u7a0b\u5ea6\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1acookies = [8,15,10,20,8], k = 2\n\u8f93\u51fa\uff1a31\n\u89e3\u91ca\uff1a\u4e00\u79cd\u6700\u4f18\u65b9\u6848\u662f [8,15,8] \u548c [10,20] \u3002\n- \u7b2c 1 \u4e2a\u5b69\u5b50\u5206\u5230 [8,15,8] \uff0c\u603b\u8ba1 8 + 15 + 8 = 31 \u5757\u997c\u5e72\u3002\n- \u7b2c 2 \u4e2a\u5b69\u5b50\u5206\u5230 [10,20] \uff0c\u603b\u8ba1 10 + 20 = 30 \u5757\u997c\u5e72\u3002\n\u5206\u53d1\u7684\u4e0d\u516c\u5e73\u7a0b\u5ea6\u4e3a max(31,30) = 31 \u3002\n\u53ef\u4ee5\u8bc1\u660e\u4e0d\u5b58\u5728\u4e0d\u516c\u5e73\u7a0b\u5ea6\u5c0f\u4e8e 31 \u7684\u5206\u53d1\u65b9\u6848\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1acookies = [6,1,3,2,2,4,1,2], k = 3\n\u8f93\u51fa\uff1a7\n\u89e3\u91ca\uff1a\u4e00\u79cd\u6700\u4f18\u65b9\u6848\u662f [6,1]\u3001[3,2,2] \u548c [4,1,2] \u3002\n- \u7b2c 1 \u4e2a\u5b69\u5b50\u5206\u5230 [6,1] \uff0c\u603b\u8ba1 6 + 1 = 7 \u5757\u997c\u5e72\u3002 \n- \u7b2c 2 \u4e2a\u5b69\u5b50\u5206\u5230 [3,2,2] \uff0c\u603b\u8ba1 3 + 2 + 2 = 7 \u5757\u997c\u5e72\u3002\n- \u7b2c 3 \u4e2a\u5b69\u5b50\u5206\u5230 [4,1,2] \uff0c\u603b\u8ba1 4 + 1 + 2 = 7 \u5757\u997c\u5e72\u3002\n\u5206\u53d1\u7684\u4e0d\u516c\u5e73\u7a0b\u5ea6\u4e3a max(7,7,7) = 7 \u3002\n\u53ef\u4ee5\u8bc1\u660e\u4e0d\u5b58\u5728\u4e0d\u516c\u5e73\u7a0b\u5ea6\u5c0f\u4e8e 7 \u7684\u5206\u53d1\u65b9\u6848\u3002\n\n")),(0,r.kt)("p",null,"\u63d0\u793a\uff1a"),(0,r.kt)("p",null,"2 <= cookies.length <= 8\n1 <= cookies","[i]"," <= 105\n2 <= k <= cookies.length"),(0,r.kt)("h2",{id:"\u65b9\u6cd5\u4e00dfs"},"\u65b9\u6cd5\u4e00\uff1adfs"),(0,r.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"k^n"),"\uff0c\u6bcf\u4e00\u4e2a\u997c\u5e72\u53ef\u80fd\u4f1a\u5206\u7ed9 k \u4e2a\u4eba\uff0c\u4e00\u5171 n \u4e2a\u997c\u5e72\uff0c\u6240\u4ee5\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"k^n")),(0,r.kt)("p",null,"\u8fd9\u4e00\u9898\u6ca1\u6709\u8d85\u65f6"),(0,r.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a712 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8628.40%\u7684\u7528\u6237"),(0,r.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a6.5 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8697.72%\u7684\u7528\u6237"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int ans = INT_MAX;\n    int n;\n    int k;\n    vector<int> cookies;\n    // bucket \u6570\u7ec4\u5b58\u653ek\u4e2a\u5c0f\u670b\u53cb\u6bcf\u4e2a\u4eba\u5f53\u524d\u7684\u997c\u5e72\u6570\u91cf\n    // idx \u4e3a\u4e0b\u4e00\u4e2a\u8981\u5206\u53d1\u7684\u997c\u5e72\u5305\u4e0b\u6807\n    void dfs (vector<int> &bucket, int idx) {\n        if (idx == n) {\n            ans = min(ans, *max_element(bucket.begin(), bucket.end()));\n            return;\n        }\n        for (int i = 0; i < k; i++) {\n            bucket[i] += cookies[idx];\n            dfs(bucket, idx+1);\n            bucket[i] -= cookies[idx];\n        }\n    }\n\n    int distributeCookies(vector<int>& cookies, int k) {\n        this->cookies = cookies;\n        this->n = cookies.size();\n        this->k = k;\n        vector<int> bucket(k, 0);\n\n        dfs(bucket, 0);\n\n        return ans;\n    }\n};\n")),(0,r.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u56de\u6eaf\u526a\u679d"},"\u65b9\u6cd5\u4e8c\uff1a\u56de\u6eaf+\u526a\u679d"),(0,r.kt)("p",null,"\u4e00\u4e2a\u6280\u5de7+\u4e09\u4e2a\u526a\u679d\u65b9\u6cd5\uff1a"),(0,r.kt)("p",null,"\u6280\u5de7\uff1a\u4e00\u5f00\u59cb\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u5148\u53d1\u653e\u997c\u5e72\u8f83\u591a\u7684\u5305\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5e73\u5747\u56de\u6eaf\u6df1\u5ea6\u3002"),(0,r.kt)("p",null,"\u526a\u679d1\uff1a\u5982\u679c\u5269\u4f59\u7684\u997c\u5e72\u5305\u4e0d\u591f\u8fd8\u6ca1\u6709\u62ff\u5230\u997c\u5e72\u7684\u5c0f\u670b\u53cb\u5206\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de\u3002"),(0,r.kt)("p",null,"\u526a\u679d2\uff1a\u5982\u679c\u5f53\u524d\u72b6\u6001\u4e0b\u67d0\u4f4d\u5c0f\u670b\u53cb\u7684\u997c\u5e72\u6570\u91cf\u6bd4\u5f53\u524d\u7684\u7b54\u6848\u8fd8\u591a\uff0c\u663e\u7136\u7ee7\u7eed\u56de\u6eaf\u4e0b\u53bb\u4e5f\u65e0\u6cd5\u6210\u4e3a\u6700\u4f18\u7b54\u6848\uff0c\u76f4\u63a5\u8fd4\u56de\u3002"),(0,r.kt)("p",null,"\u526a\u679d3\uff1a\u7b2c\u4e00\u4e2a\u96f6\u98df\u5305\u4e0d\u7ba1\u7ed9\u54ea\u4e2a\u5c0f\u670b\u53cb\uff0c\u6240\u5f00\u542f\u7684\u56de\u6eaf\u6811\u90fd\u4e00\u6837\uff0c\u6240\u4ee5\u9996\u4e2a\u997c\u5e72\u5305\u53ea\u8981\u7ed9\u7b2c\u4e00\u4e2a\u5c0f\u670b\u53cb\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u7684\u56de\u6eaf\u6811\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\uff08\u4e00\u4e2a\u56de\u6eaf\u6811\uff09\uff0c\u5426\u5219\u6709k\u4e2a\u56de\u6eaf\u6811\u3002"),(0,r.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a4 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8689.69%\u7684\u7528\u6237"),(0,r.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a6.7 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8625.17%\u7684\u7528\u6237"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int ans = INT_MAX;\n    int n;  // \u997c\u5e72\u6570\u91cf\n    int k;  // \u5c0f\u5b69\u6570\u91cf\n    vector<int> cookies;\n\n    // bucket \u6570\u7ec4\u5b58\u653ek\u4e2a\u5c0f\u670b\u53cb\u6bcf\u4e2a\u4eba\u5f53\u524d\u7684\u997c\u5e72\u6570\u91cf\n    // idx \u4e3a\u4e0b\u4e00\u4e2a\u8981\u5206\u53d1\u7684\u997c\u5e72\u5305\u4e0b\u6807\n    void dfs(vector<int>& bucket, int idx) {\n        if (idx == n) {\n            ans = min(ans, *max_element(bucket.begin(), bucket.end()));\n            return;\n        }\n\n        // \u526a\u679d1\uff1a\u5982\u679c\u5269\u4f59\u7684\u997c\u5e72\u5305\u4e0d\u591f\u7a7a\u624b\u7684\u5c0f\u670b\u53cb\u5206\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n        int zeroCnt = 0;  // \u7a7a\u624b\u5c0f\u5b69\u6570\u91cf\n        for (int val : bucket) {\n            if (val == 0) zeroCnt++;\n        }\n        if (zeroCnt > n - idx) return;  // n - idx \u4e3a\u5f53\u524d\u5269\u4f59\u997c\u5e72\u6570\u91cf\n\n        // \u526a\u679d2\uff1a\u5982\u679c\u67d0\u4f4d\u5c0f\u670b\u53cb\u7684\u997c\u5e72\u6570\u91cf\u6bd4\u5f53\u524d\u7684\u7b54\u6848\u8fd8\u591a\n        // \u663e\u7136\u7ee7\u7eed\u56de\u6eaf\u4e0b\u53bb\u4e5f\u65e0\u6cd5\u6210\u4e3a\u6700\u4f18\u7b54\u6848\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n        for (int i = 0; i < k; i++) {\n            if (bucket[i] > ans) return;\n        }\n\n        for (int i = 0; i < k; i++) {\n            // \u526a\u679d3\uff1a\u7b2c\u4e00\u4e2a\u96f6\u98df\u5305\u4e0d\u7ba1\u7ed9\u54ea\u4e2a\u5c0f\u670b\u53cb\uff0c\u6240\u5f00\u542f\u7684\u56de\u6eaf\u6811\u90fd\u4e00\u6837\n            if (idx == 0 && i != 0) return;\n\n            bucket[i] += cookies[idx];\n            dfs(bucket, idx + 1);\n            bucket[i] -= cookies[idx];\n        }\n    }\n\n    int distributeCookies(vector<int>& cookies, int k) {\n        //\u6280\u5de7\uff1a\u5148\u53d1\u997c\u5e72\u8f83\u591a\u7684\u5305\uff0c\u8fd9\u6837\u8ba9\u56de\u6eaf\u8fc7\u7a0b\u66f4\u5feb\u3002\n        sort(cookies.begin(), cookies.end(), greater<int>());\n\n        this->cookies = cookies;\n        this->n = cookies.size();\n        this->k = k;\n        vector<int> bucket(k, 0);\n\n        dfs(bucket, 0);\n\n        return ans;\n    }\n};\n")),(0,r.kt)("p",null,"\u7c7b\u4f3c\u9898"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/matchsticks-to-square/"},"473. \u706b\u67f4\u62fc\u6b63\u65b9\u5f62")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/"},"698. \u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6")))}u.isMDXComponent=!0}}]);
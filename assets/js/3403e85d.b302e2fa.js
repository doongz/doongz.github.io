"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5950],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},69139:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const l={},o=void 0,i={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806/<\u6a21\u7248\u9898>-\u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806/<\u6a21\u7248\u9898>-\u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20",title:"<\u6a21\u7248\u9898>-\u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20",description:"\u9898\u76ee\uff1a703. \u6570\u636e\u6d41\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806/703-<\u6a21\u7248\u9898>-\u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806/<\u6a21\u7248\u9898>-\u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806/<\u6a21\u7248\u9898>-\u6570\u636e\u6d41\u4e2d\u7684\u7b2cK\u5927\u5143\u7d20",draft:!1,tags:[],version:"current",sidebarPosition:703,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<TopK>-\u524dK\u4e2a\u9ad8\u9891\u5355\u8bcd",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806/<TopK>-\u524dK\u4e2a\u9ad8\u9891\u5355\u8bcd"},next:{title:"<\u81ea\u5b9a\u4e49\u5806\u548c\u6392\u5e8f>-\u627e\u5230\u548c\u6700\u5927\u7684\u957f\u5ea6\u4e3aK\u7684\u5b50\u5e8f\u5217",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806/<\u81ea\u5b9a\u4e49\u5806\u548c\u6392\u5e8f>-\u627e\u5230\u548c\u6700\u5927\u7684\u957f\u5ea6\u4e3aK\u7684\u5b50\u5e8f\u5217"}},s={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u9898\u76ee\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/kth-largest-element-in-a-stream/"},"703. \u6570\u636e\u6d41\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20")),(0,a.kt)("p",null,"\u8bbe\u8ba1\u4e00\u4e2a\u627e\u5230\u6570\u636e\u6d41\u4e2d\u7b2c ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," \u5927\u5143\u7d20\u7684\u7c7b\uff08class\uff09\u3002\u6ce8\u610f\u662f\u6392\u5e8f\u540e\u7684\u7b2c ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," \u5927\u5143\u7d20\uff0c\u4e0d\u662f\u7b2c ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002"),(0,a.kt)("p",null,"\u8bf7\u5b9e\u73b0 KthLargest \u7c7b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"KthLargest(int k, int[] nums) \u4f7f\u7528\u6574\u6570 k \u548c\u6574\u6570\u6d41 nums \u521d\u59cb\u5316\u5bf9\u8c61\u3002"),(0,a.kt)("li",{parentName:"ul"},"int add(int val) \u5c06 val \u63d2\u5165\u6570\u636e\u6d41 nums \u540e\uff0c\u8fd4\u56de\u5f53\u524d\u6570\u636e\u6d41\u4e2d\u7b2c k \u5927\u7684\u5143\u7d20\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1a\n["KthLargest", "add", "add", "add", "add", "add"]\n[[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]\n\u8f93\u51fa\uff1a\n[null, 4, 5, 5, 8, 8]\n\n\u89e3\u91ca\uff1a\nKthLargest kthLargest = new KthLargest(3, [4, 5, 8, 2]);\nkthLargest.add(3);   // return 4\nkthLargest.add(5);   // return 5\nkthLargest.add(10);  // return 5\nkthLargest.add(9);   // return 8\nkthLargest.add(4);   // return 8\n')),(0,a.kt)("p",null,"\u63d0\u793a\uff1a\n1 <= k <= 104\n0 <= nums.length <= 104\n-104 <= nums","[i]"," <= 104\n-104 <= val <= 104\n\u6700\u591a\u8c03\u7528 add \u65b9\u6cd5 104 \u6b21\n\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\uff0c\u5728\u67e5\u627e\u7b2c k \u5927\u5143\u7d20\u65f6\uff0c\u6570\u7ec4\u4e2d\u81f3\u5c11\u6709 k \u4e2a\u5143\u7d20"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"class KthLargest {\npublic:\n    priority_queue<int, vector<int>, greater<int>> smallQ;\n    int K;\n\n    KthLargest(int k, vector<int>& nums) {\n        K = k;\n        for (int num : nums) {\n            smallQ.push(num);\n            if (smallQ.size() > K) smallQ.pop();\n        }\n    }\n\n    int add(int val) {\n        smallQ.push(val);\n        if (smallQ.size() > K) smallQ.pop();\n        return smallQ.top();\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */\n")))}u.isMDXComponent=!0}}]);
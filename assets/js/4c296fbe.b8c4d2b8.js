"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[80188],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),s=u(t),f=o,m=s["".concat(p,".").concat(f)]||s[f]||c[f]||l;return t?r.createElement(m,i(i({ref:n},d),{},{components:t})):r.createElement(m,i({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=f;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[s]="string"==typeof e?e:o,i[1]=a;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},47541:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var r=t(87462),o=(t(67294),t(3905));const l={},i=void 0,a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<bfs-dfs>-\u7ffb\u8f6c\u4e8c\u53c9\u6811-brew\u4f5c\u8005\u90fd\u5199\u4e0d\u51fa",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<bfs-dfs>-\u7ffb\u8f6c\u4e8c\u53c9\u6811-brew\u4f5c\u8005\u90fd\u5199\u4e0d\u51fa",title:"<bfs-dfs>-\u7ffb\u8f6c\u4e8c\u53c9\u6811-brew\u4f5c\u8005\u90fd\u5199\u4e0d\u51fa",description:"226. \u7ffb\u8f6c\u4e8c\u53c9\u6811",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/226-<bfs-dfs>-\u7ffb\u8f6c\u4e8c\u53c9\u6811-brew\u4f5c\u8005\u90fd\u5199\u4e0d\u51fa.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<bfs-dfs>-\u7ffb\u8f6c\u4e8c\u53c9\u6811-brew\u4f5c\u8005\u90fd\u5199\u4e0d\u51fa",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<bfs-dfs>-\u7ffb\u8f6c\u4e8c\u53c9\u6811-brew\u4f5c\u8005\u90fd\u5199\u4e0d\u51fa",draft:!1,tags:[],version:"current",sidebarPosition:226,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u5c42\u5e8f\u904d\u5386>-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<\u5c42\u5e8f\u904d\u5386>-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"},next:{title:"\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"}},p={},u=[{value:"\u65b9\u6cd5\u4e00\uff1abfs",id:"\u65b9\u6cd5\u4e00bfs",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1adfs",id:"\u65b9\u6cd5\u4e8cdfs",level:2}],d={toc:u};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/invert-binary-tree/"},"226. \u7ffb\u8f6c\u4e8c\u53c9\u6811")),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," \uff0c\u7ffb\u8f6c\u8fd9\u68f5\u4e8c\u53c9\u6811\uff0c\u5e76\u8fd4\u56de\u5176\u6839\u8282\u70b9\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/03/14/invert1-tree.jpg",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = [4,2,7,1,3,6,9]\n\u8f93\u51fa\uff1a[4,7,2,9,6,3,1]\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6811\u4e2d\u8282\u70b9\u6570\u76ee\u8303\u56f4\u5728 ",(0,o.kt)("inlineCode",{parentName:"li"},"[0, 100]")," \u5185"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-100 <= Node.val <= 100"))),(0,o.kt)("p",null,"\u8fd9\u4e2a\u9898\u753b\u4e0b\u56fe\uff0c\u4e00\u76ee\u4e86\u7136"),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e00bfs"},"\u65b9\u6cd5\u4e00\uff1abfs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if (!root) return nullptr;\n        deque<TreeNode *> q{root};\n        while (!q.empty()) {\n            TreeNode *node = q.front();\n            q.pop_front();\n            TreeNode *tmp = node->left;\n            node->left = node->right;\n            node->right = tmp;\n            if (node->left) q.push_back(node->left);\n            if (node->right) q.push_back(node->right);\n        }\n        return root;\n    }\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def invertTree(self, root: TreeNode) -> TreeNode:\n\n        if not root:\n            return None\n        \n        queue = collections.deque()\n        queue.append(root)\n        while queue:\n            cur = queue.popleft()\n            cur.left, cur.right = cur.right, cur.left\n            \n            if cur.left:\n                queue.append(cur.left)\n            if cur.right:\n                queue.append(cur.right)\n        return root\n")),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e8cdfs"},"\u65b9\u6cd5\u4e8c\uff1adfs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    void dfs(TreeNode *node) {\n        if (!node) return;\n        TreeNode *tmp = node->left;\n        node->left = node->right;\n        node->right = tmp;\n        dfs(node->left);\n        dfs(node->right);\n    }\n    TreeNode* invertTree(TreeNode* root) {\n        if (!root) return nullptr;\n        dfs(root);\n        return root;\n    }\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def invertTree(self, root: TreeNode) -> TreeNode:\n\n        if not root:\n            return None\n        # \u5148\u5e8f\u904d\u5386 \u81ea\u9876\u5411\u4e0b\n        def dfs(node):\n            if not node:\n                return None\n            rightTree = node.right\n            node.right = dfs(node.left)\n            node.left = dfs(rightTree)\n            return node\n\n        return dfs(root)\n")))}s.isMDXComponent=!0}}]);
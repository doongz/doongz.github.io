"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[19454],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var r=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(t),f=l,h=p["".concat(i,".").concat(f)]||p[f]||s[f]||o;return t?r.createElement(h,d(d({ref:n},u),{},{components:t})):r.createElement(h,d({ref:n},u))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,d=new Array(o);d[0]=f;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a[p]="string"==typeof e?e:l,d[1]=a;for(var c=2;c<o;c++)d[c]=t[c];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},77652:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=t(87462),l=(t(67294),t(3905));const o={},d=void 0,a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-028-<\u7ed3\u5408\u9012\u5f52>-\u5c55\u5e73\u591a\u7ea7\u53cc\u5411\u94fe\u8868",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-028-<\u7ed3\u5408\u9012\u5f52>-\u5c55\u5e73\u591a\u7ea7\u53cc\u5411\u94fe\u8868",title:"\u5251\u6307Offer-II-028-<\u7ed3\u5408\u9012\u5f52>-\u5c55\u5e73\u591a\u7ea7\u53cc\u5411\u94fe\u8868",description:"\u9898\u76ee\uff1a\u5251\u6307 Offer II 028. \u5c55\u5e73\u591a\u7ea7\u53cc\u5411\u94fe\u8868",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-028-<\u7ed3\u5408\u9012\u5f52>-\u5c55\u5e73\u591a\u7ea7\u53cc\u5411\u94fe\u8868.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-028-<\u7ed3\u5408\u9012\u5f52>-\u5c55\u5e73\u591a\u7ea7\u53cc\u5411\u94fe\u8868",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-028-<\u7ed3\u5408\u9012\u5f52>-\u5c55\u5e73\u591a\u7ea7\u53cc\u5411\u94fe\u8868",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"\u5251\u6307Offer-II-026-\u91cd\u6392\u94fe\u8868",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-026-\u91cd\u6392\u94fe\u8868"},next:{title:"\u5251\u6307Offer-II-029-<\u94fe\u8868\u6a21\u62df>-\u6392\u5e8f\u7684\u5faa\u73af\u94fe\u8868",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-029-<\u94fe\u8868\u6a21\u62df>-\u6392\u5e8f\u7684\u5faa\u73af\u94fe\u8868"}},i={},c=[{value:"\u81ea\u5df1\u5199\u7684",id:"\u81ea\u5df1\u5199\u7684",level:2},{value:"\u7834\u91dc\u6c89\u821f\u505a\u6cd5",id:"\u7834\u91dc\u6c89\u821f\u505a\u6cd5",level:2},{value:"\u522b\u4eba\u7684\u5199\u6cd5",id:"\u522b\u4eba\u7684\u5199\u6cd5",level:2}],u={toc:c};function p(e){let{components:n,...o}=e;return(0,l.kt)("wrapper",(0,r.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u9898\u76ee\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/Qv1Da2/"},"\u5251\u6307 Offer II 028. \u5c55\u5e73\u591a\u7ea7\u53cc\u5411\u94fe\u8868")),(0,l.kt)("p",null,"\u591a\u7ea7\u53cc\u5411\u94fe\u8868\u4e2d\uff0c\u9664\u4e86\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u548c\u524d\u4e00\u4e2a\u8282\u70b9\u6307\u9488\u4e4b\u5916\uff0c\u5b83\u8fd8\u6709\u4e00\u4e2a\u5b50\u94fe\u8868\u6307\u9488\uff0c\u53ef\u80fd\u6307\u5411\u5355\u72ec\u7684\u53cc\u5411\u94fe\u8868\u3002\u8fd9\u4e9b\u5b50\u5217\u8868\u4e5f\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u81ea\u5df1\u7684\u5b50\u9879\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u751f\u6210\u591a\u7ea7\u6570\u636e\u7ed3\u6784\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u6240\u793a\u3002"),(0,l.kt)("p",null,"\u7ed9\u5b9a\u4f4d\u4e8e\u5217\u8868\u7b2c\u4e00\u7ea7\u7684\u5934\u8282\u70b9\uff0c\u8bf7\u6241\u5e73\u5316\u5217\u8868\uff0c\u5373\u5c06\u8fd9\u6837\u7684\u591a\u7ea7\u53cc\u5411\u94fe\u8868\u5c55\u5e73\u6210\u666e\u901a\u7684\u53cc\u5411\u94fe\u8868\uff0c\u4f7f\u6240\u6709\u7ed3\u70b9\u51fa\u73b0\u5728\u5355\u7ea7\u53cc\u94fe\u8868\u4e2d\u3002"),(0,l.kt)("p",null,"\u793a\u4f8b 1\uff1a"),(0,l.kt)("p",null,"\u8f93\u5165\uff1ahead = ","[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]","\n\u8f93\u51fa\uff1a","[1,2,3,7,8,11,12,9,10,4,5,6]","\n\u89e3\u91ca\uff1a"),(0,l.kt)("p",null,"\u8f93\u5165\u7684\u591a\u7ea7\u5217\u8868\u5982\u4e0b\u56fe\u6240\u793a\uff1a"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(7882).Z,width:"1341",height:"761"})),(0,l.kt)("p",null,"\u6241\u5e73\u5316\u540e\u7684\u94fe\u8868\u5982\u4e0b\u56fe\uff1a"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/multilevellinkedlistflattened.png",alt:null})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1ahead = [1,2,null,3]\n\u8f93\u51fa\uff1a[1,3,2]\n\u89e3\u91ca\uff1a\n\n\u8f93\u5165\u7684\u591a\u7ea7\u5217\u8868\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n  1---2---NULL\n  |\n  3---NULL\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1ahead = []\n\u8f93\u51fa\uff1a[]\n")),(0,l.kt)("p",null,"\u63d0\u793a\uff1a"),(0,l.kt)("p",null,"\u8282\u70b9\u6570\u76ee\u4e0d\u8d85\u8fc7 1000\n1 <= Node.val <= 10^5"),(0,l.kt)("p",null,"\u6ce8\u610f\uff1a\u672c\u9898\u4e0e\u4e3b\u7ad9 430 \u9898\u76f8\u540c\uff1a ",(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/flatten-a-multilevel-doubly-linked-list/"},"https://leetcode-cn.com/problems/flatten-a-multilevel-doubly-linked-list/")),(0,l.kt)("h2",{id:"\u81ea\u5df1\u5199\u7684"},"\u81ea\u5df1\u5199\u7684"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* prev;\n    Node* next;\n    Node* child;\n};\n*/\n\nclass Solution {\npublic:\n    Node* hair = new Node;\n    Node* cur = hair;\n\n    void dfs(Node* node) {\n        if (node == nullptr) return;\n        while (node != nullptr) {\n            // cout << node->val << endl;\n            // \u9700\u8981\u73b0\u5c06\u5f53\u524d node \u7684\u4e0b\u4e2a\u8282\u70b9\u5b58\u4e0b\u6765\uff0c\u56e0\u4e3adfs\u4f1a\u5bfc\u81f4node\u7684next\u53d8\u5316\n            Node* temp = node->next;\n            cur->next = node;\n            node->prev = cur;\n            cur = cur->next;\n            if (node->child != nullptr) {\n                dfs(node->child);\n                node->child = nullptr;  // \u6ce8\u610f\u8981\u628achild\u7f6e\u4e3anullptr\u56e0\u4e3a\u7b54\u6848\u8981\u7684\u662f\u53cc\u5411\u94fe\u8868\n            }\n            node = temp;\n        }\n    }\n\n    Node* flatten(Node* head) {\n        if (head == nullptr) return nullptr;\n        dfs(head);\n        Node* ans = hair->next;\n        ans->prev = nullptr;  // \u6ce8\u610f\u8981\u628a\u5934\u8282\u70b9\u7684prev\u7f6e\u4e3anullptr\u56e0\u4e3a\u7b54\u6848\u8981\u7684\u662f\u53cc\u5411\u94fe\u8868\n        return ans;\n    }\n};\n")),(0,l.kt)("h2",{id:"\u7834\u91dc\u6c89\u821f\u505a\u6cd5"},"\u7834\u91dc\u6c89\u821f\u505a\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* prev;\n    Node* next;\n    Node* child;\n};\n*/\n\nclass Solution {\npublic:\n    vector<Node*> node_list;\n    void dfs(Node* node) {\n        if (node == nullptr) return;\n        while (node) {\n            // cout << node->val << endl;\n            node_list.push_back(node);\n            if (node->child) {\n                dfs(node->child);\n                node->child = nullptr;\n            }\n            node = node->next;\n        }\n    }\n    Node* flatten(Node* head) {\n        if (head == nullptr) return nullptr;\n        dfs(head);\n        Node* hair = new Node();\n        Node* cur = hair;\n        for (Node *node : node_list) {\n            cur->next = node;\n            node->prev = cur;\n            cur = cur->next;\n        }\n        Node* ans = hair->next;\n        ans->prev = nullptr;\n        return ans;\n    }\n};\n")),(0,l.kt)("h2",{id:"\u522b\u4eba\u7684\u5199\u6cd5"},"\u522b\u4eba\u7684\u5199\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* prev;\n    Node* next;\n    Node* child;\n};\n*/\n\nclass Solution {\npublic:\n    // \u4ee5cur\u5f00\u5934\u7684\u540e\u7eed\u90e8\u5206\uff0c\u8fd4\u56de\u5c55\u5e73\u540e\u7684\u5c3e\u7ed3\u70b9last\n    Node* dfs(Node* cur) {\n        Node* last = cur;\n        while (cur != nullptr) {\n            Node* next = cur->next;\n            if (cur->child != nullptr) {            // \u6709child\u5219\u9012\u5f52\u5730\u5904\u7406child\n                Node* childLast = dfs(cur->child);  // \u5c55\u5e73\u5904\u7406\u7684\u5173\u952e\uff0c\u603b\u662f\u5148\u9012\u5f52\u5730\u5904\u7406child\uff0c\u5f97\u5230\u5f53\u524d\u94fe\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\n                cur->next = cur->child;             // \u9996\u6b21\u5230\u6b64\u6b65\u8bf4\u660e\u5df2\u5c55\u5e73\u4ee5cur.child\u4e3a\u9996\u7684\u540e\u7eed\u90e8\u5206\uff0c\u5219\u94fe\u63a5cur\u4e0echild\n                cur->child->prev = cur;\n                cur->child = nullptr;\n                if (next != nullptr) {  // \u82e5\u6709next\uff0c\u94fe\u63a5childLast\u4e0enext\n                    childLast->next = next;\n                    next->prev = childLast;\n                }\n                last = childLast;\n            } else {\n                last = cur;  // \u6b64\u884c\u4f7f\u5f97\u904d\u5386\u5230\u4e00\u5c42\u6700\u540e\u7684cur == null\u65f6\uff0c\u80fd\u591f\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\n            }\n            cur = next;  // \u8003\u5bdf\u4e0b\u4e00\u4e2a\u7ed3\u70b9\n        }\n        return last;\n    }\n    Node* flatten(Node* head) {\n        dfs(head);\n        return head;\n    }\n};\n")))}p.isMDXComponent=!0},7882:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/multilevellinkedlist-ea7fd37d8b759e9f238043c2f730fabd.png"}}]);
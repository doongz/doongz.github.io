"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[88330],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>h});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),p=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},c=function(e){var r=p(e.components);return t.createElement(s.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=p(n),f=o,h=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return n?t.createElement(h,l(l({ref:r},c),{},{components:n})):t.createElement(h,l({ref:r},c))}));function h(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=f;var a={};for(var s in r)hasOwnProperty.call(r,s)&&(a[s]=r[s]);a.originalType=e,a[u]="string"==typeof e?e:o,l[1]=a;for(var p=2;p<i;p++)l[p]=n[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},89817:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var t=n(87462),o=(n(67294),n(3905));const i={},l=void 0,a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/\u5b9e\u73b0Trie\u524d\u7f00\u6811",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/\u5b9e\u73b0Trie\u524d\u7f00\u6811",title:"\u5b9e\u73b0Trie\u524d\u7f00\u6811",description:"208. \u5b9e\u73b0 Trie (\u524d\u7f00\u6811)",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/208-\u5b9e\u73b0Trie\u524d\u7f00\u6811.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/\u5b9e\u73b0Trie\u524d\u7f00\u6811",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/\u5b9e\u73b0Trie\u524d\u7f00\u6811",draft:!1,tags:[],version:"current",sidebarPosition:208,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5c0f\u6839\u5806>-\u96c7\u4f63K\u4f4d\u5de5\u4eba\u7684\u603b\u4ee3\u4ef7",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5806/<\u5c0f\u6839\u5806>-\u96c7\u4f63K\u4f4d\u5de5\u4eba\u7684\u603b\u4ee3\u4ef7"},next:{title:"<\u542b\u6709\u901a\u914d\u7b26\u7684\u5bfb\u627e>-\u6dfb\u52a0\u4e0e\u641c\u7d22\u5355\u8bcd",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<\u542b\u6709\u901a\u914d\u7b26\u7684\u5bfb\u627e>-\u6dfb\u52a0\u4e0e\u641c\u7d22\u5355\u8bcd"}},s={},p=[{value:"c++",id:"c",level:2},{value:"python",id:"python",level:2}],c={toc:p};function u(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/implement-trie-prefix-tree/"},"208. \u5b9e\u73b0 Trie (\u524d\u7f00\u6811)")),(0,o.kt)("p",null,'Trie\uff08\u53d1\u97f3\u7c7b\u4f3c "try"\uff09\u6216\u8005\u8bf4 \u524d\u7f00\u6811 \u662f\u4e00\u79cd\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u9ad8\u6548\u5730\u5b58\u50a8\u548c\u68c0\u7d22\u5b57\u7b26\u4e32\u6570\u636e\u96c6\u4e2d\u7684\u952e\u3002\u8fd9\u4e00\u6570\u636e\u7ed3\u6784\u6709\u76f8\u5f53\u591a\u7684\u5e94\u7528\u60c5\u666f\uff0c\u4f8b\u5982\u81ea\u52a8\u8865\u5b8c\u548c\u62fc\u5199\u68c0\u67e5\u3002'),(0,o.kt)("p",null,"\u8bf7\u4f60\u5b9e\u73b0 Trie \u7c7b\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Trie() \u521d\u59cb\u5316\u524d\u7f00\u6811\u5bf9\u8c61\u3002"),(0,o.kt)("li",{parentName:"ul"},"void insert(String word) \u5411\u524d\u7f00\u6811\u4e2d\u63d2\u5165\u5b57\u7b26\u4e32 word \u3002"),(0,o.kt)("li",{parentName:"ul"},"boolean search(String word) \u5982\u679c\u5b57\u7b26\u4e32 word \u5728\u524d\u7f00\u6811\u4e2d\uff0c\u8fd4\u56de true\uff08\u5373\uff0c\u5728\u68c0\u7d22\u4e4b\u524d\u5df2\u7ecf\u63d2\u5165\uff09\uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002"),(0,o.kt)("li",{parentName:"ul"},"boolean startsWith(String prefix) \u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u63d2\u5165\u7684\u5b57\u7b26\u4e32 word \u7684\u524d\u7f00\u4e4b\u4e00\u4e3a prefix \uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\n["Trie", "insert", "search", "search", "startsWith", "insert", "search"]\n[[], ["apple"], ["apple"], ["app"], ["app"], ["app"], ["app"]]\n\u8f93\u51fa\n[null, null, true, false, true, null, true]\n\n\u89e3\u91ca\nTrie trie = new Trie();\ntrie.insert("apple");\ntrie.search("apple");   // \u8fd4\u56de True\ntrie.search("app");     // \u8fd4\u56de False\ntrie.startsWith("app"); // \u8fd4\u56de True\ntrie.insert("app");\ntrie.search("app");     // \u8fd4\u56de True\n')),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("p",null,"1 <= word.length, prefix.length <= 2000\nword \u548c prefix \u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\ninsert\u3001search \u548c startsWith \u8c03\u7528\u6b21\u6570 \u603b\u8ba1 \u4e0d\u8d85\u8fc7 3 * 104 \u6b21"),(0,o.kt)("h2",{id:"c"},"c++"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Trie {\nprivate:\n    Trie* son[26];  // \u5b58\u653e\u5f53\u524d\u5b57\u7b26\u4e4b\u540e\u7684\u5b57\u7b26\n    bool isWord;\n\npublic:\n    Trie() {\n        for (int i = 0; i < 26; i++) son[i] = nullptr;\n        isWord = false;\n    }\n    ~Trie() {\n        for (int i = 0; i < 26; i++) {\n            if (son[i] != nullptr) delete son[i];\n        }\n    }\n\n    void insert(string word) {\n        Trie* root = this;     // \u4ece\u5934\u8282\u70b9\u5f00\u59cb\u67e5\n        for (char c : word) {  // \u7c7b\u4f3c\u94fe\u8868\u7684\u904d\u5386\n            int cur = c - 'a';\n            if (root->son[cur] == nullptr) root->son[cur] = new Trie();\n            root = root->son[cur];\n        }\n        root->isWord = true;  // \u5728\u5355\u8bcd\u7684\u7ed3\u5c3e\u8282\u70b9\u6807\u8bb0\u4e00\u4e0b \u662f\u5355\u8bcd\n    }\n\n    bool search(string word) {\n        Trie* root = this;  // \u4ece\u5934\u8282\u70b9\u5f00\u59cb\u67e5\n        for (char c : word) {\n            int cur = c - 'a';\n            if (root->son[cur] == nullptr) return false;  // word\u8fd8\u6ca1\u904d\u5386\u5b8c\uff0c\u5c31\u627e\u4e0d\u5230\u4e86\n            root = root->son[cur];\n        }\n        return root->isWord;  // \u904d\u5386\u5230word\u7ed3\u5c3e\u7684\u8282\u70b9\uff0c\u662f\u5426\u662f\u4e4b\u524d\u5b58\u5728\u7684\u5355\u8bcd\n    }\n\n    bool startsWith(string prefix) {\n        Trie* root = this;\n        for (char c : prefix) {\n            int cur = c - 'a';\n            if (root->son[cur] == nullptr) return false;  // prefix\u8fd8\u6ca1\u904d\u5386\u5b8c\uff0c\u5c31\u627e\u4e0d\u5230\u4e86\n            root = root->son[cur];\n        }\n        return true;  // prefix\u6b63\u5e38\u904d\u5386\u5b8c\uff0c\u5c31\u8fd4\u56detrue\n    }\n};\n")),(0,o.kt)("h2",{id:"python"},"python"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'class TrieNode(object):\n    def __init__(self):\n        self.children = {}\n        self.is_word = False\n\nclass Trie(object):\n    def __init__(self):\n        """\n        Initialize your data structure here.\n        """\n        self.root = TrieNode()\n\n    def insert(self, word):\n        """\n        Inserts a word into the trie.\n        :type word: str\n        :rtype: None\n        """\n        node = self.root    # \u4ece\u5934\u8282\u70b9\u5f00\u59cb\u67e5\n        for c in word:\n            if c not in node.children:\n                node.children[c] = TrieNode()\n            node = node.children[c]\n        node.is_word = True # \u5728\u5355\u8bcd\u7684\u7ed3\u5c3e\u8282\u70b9\u6807\u8bb0\u4e00\u4e0b\n\n    def search_prefix(self, word):\n        node = self.root    # \u4ece\u5934\u8282\u70b9\u5f00\u59cb\u67e5\n        for c in word:\n            if c not in node.children:\n                return None # word\u4e2d\u7684\u5b57\u7b26\u6ca1\u627e\u5b8c\u5c31\u65ad\u4e86\n            node = node.children[c]\n        # \u8fd4\u56deword\u7ed3\u5c3e\u7684\u8282\u70b9\uff0c\n        # \u53ef\u80fd\u662f\u4e4b\u524d\u63d2\u5165\u5355\u8bcd\u7684\u7ed3\u5c3e\u8282\u70b9\uff0cnode.is_word \u4e3a True\n        # \u4e0d\u662f\u4e4b\u524d\u63d2\u5165\u5355\u8bcd\u7684\u7ed3\u5c3e\u8282\u70b9\uff0cnode.is_word \u4e3a False\n        return node         \n\n    def search(self, word):\n        """\n        Returns if the word is in the trie.\n        :type word: str\n        :rtype: bool\n        """\n        node = self.search_prefix(word)\n        return node != None and node.is_word\n\n    def startsWith(self, prefix):\n        """\n        Returns if there is any word in the trie that starts with the given prefix.\n        :type prefix: str\n        :rtype: bool\n        """\n        return self.search_prefix(prefix) != None\n')))}u.isMDXComponent=!0}}]);
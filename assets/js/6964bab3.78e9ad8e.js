"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[38837],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var p=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);n&&(p=p.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,p)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,p,i=function(e,n){if(null==e)return{};var t,p,i={},r=Object.keys(e);for(p=0;p<r.length;p++)t=r[p],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(p=0;p<r.length;p++)t=r[p],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=p.createContext({}),s=function(e){var n=p.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=s(e.components);return p.createElement(o.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return p.createElement(p.Fragment,{},n)}},m=p.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(t),m=i,k=c["".concat(o,".").concat(m)]||c[m]||u[m]||r;return t?p.createElement(k,a(a({ref:n},d),{},{components:t})):p.createElement(k,a({ref:n},d))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=m;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<r;s++)a[s]=t[s];return p.createElement.apply(null,a)}return p.createElement.apply(null,t)}m.displayName="MDXCreateElement"},99265:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var p=t(87462),i=(t(67294),t(3905));const r={},a=void 0,l={unversionedId:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u5339\u914d\u95ee\u9898>-\u901a\u914d\u7b26\u5339\u914d",id:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u5339\u914d\u95ee\u9898>-\u901a\u914d\u7b26\u5339\u914d",title:"<\u5339\u914d\u95ee\u9898>-\u901a\u914d\u7b26\u5339\u914d",description:"\u9898\u76ee\uff1a44. \u901a\u914d\u7b26\u5339\u914d",source:"@site/docs/Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/44-<\u5339\u914d\u95ee\u9898>-\u901a\u914d\u7b26\u5339\u914d.md",sourceDirName:"Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP",slug:"/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u5339\u914d\u95ee\u9898>-\u901a\u914d\u7b26\u5339\u914d",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u5339\u914d\u95ee\u9898>-\u901a\u914d\u7b26\u5339\u914d",draft:!1,tags:[],version:"current",sidebarPosition:44,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u5339\u914d\u95ee\u9898>-\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u5339\u914d\u95ee\u9898>-\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d"},next:{title:"<\u5b50\u6570\u7ec4\u95ee\u9898>-\u6700\u5927\u5b50\u6570\u7ec4\u548c",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u5b50\u6570\u7ec4\u95ee\u9898>-\u6700\u5927\u5b50\u6570\u7ec4\u548c"}},o={},s=[],d={toc:s};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,p.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/wildcard-matching/"},"44. \u901a\u914d\u7b26\u5339\u914d")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"1. \u5b9a\u4e49\u72b6\u6001")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"dp[si][pi]")," \u8868\u793a\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"s")," \u4e2d\u524d ",(0,i.kt)("inlineCode",{parentName:"p"},"si")," \u4e2a\u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"p")," \u4e2d\u524d ",(0,i.kt)("inlineCode",{parentName:"p"},"pi")," \u4e2a\u8fdb\u884c\u5339\u914d\u7684\u7ed3\u679c"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"2. \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b")),(0,i.kt)("p",null,"\u6839\u636e p \u7684\u5b57\u7b26\uff0c\u6709\u4e0b\u9762\u51e0\u79cd\u60c5\u51b5"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"p[pi]")," \u4e3a\u5b57\u6bcd\uff0c\u5373 ",(0,i.kt)("inlineCode",{parentName:"li"},"s[si] == p[pi]"),"\uff0c\u5f53\u524d\u72b6\u6001\u7531\u4e0a\u4e2a\u72b6\u6001\u5f97\u51fa ",(0,i.kt)("inlineCode",{parentName:"li"},"dp[si][pi] = dp[si-1]dp[pi-1] ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"p[pi]")," \u4e3a\u95ee\u53f7\uff0c\u5373 ",(0,i.kt)("inlineCode",{parentName:"li"},"p[pi] == \u2018\uff1f\u2019"),"\uff0c\u5f53\u524d\u72b6\u6001\u7531\u4e0a\u4e2a\u72b6\u6001\u5f97\u51fa ",(0,i.kt)("inlineCode",{parentName:"li"},"dp[si][pi] = dp[si-1]dp[pi-1] ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"p[pi]")," \u4e3a\u661f\u53f7\uff0c\u5373 ",(0,i.kt)("inlineCode",{parentName:"li"},"p[pi] == \u2018*\u2019"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u8fd9\u4e2a\u661f\u53f7\u4e0d\u8fdb\u884c\u5339\u914d\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"dp[si][pi] = dp[si][pi-1] ")),(0,i.kt)("li",{parentName:"ul"},"\u8fd9\u4e2a\u661f\u53f7\u53c2\u4e0e\u5339\u914d\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"dp[si][pi] = dp[si-1][pi] "),"\uff0c",(0,i.kt)("strong",{parentName:"li"},"\u6ce8\u610f\u661f\u53f7\u53c2\u4e0e\u5339\u914d\u65f6\uff0c\u4e0d\u80fd\u5c06 pi \u51cf\u4e00\uff0c\u4ee3\u8868 * \u6ca1\u6709\u88ab\u6d88\u8017\u6389\uff0c\u8fd8\u80fd\u7ee7\u7eed\u53c2\u4e0e\u5339\u914d"))))),(0,i.kt)("p",null,"\u5b9e\u9645\u904d\u5386\u7684\u65f6\u5019\uff0c\u6ce8\u610f s \u6216 p \u4e2d\u7684\u4e0b\u6807\u8981\u51cf\u4e00\uff0c\u6765\u4ee3\u8868\u5f53\u524d\u68c0\u67e5\u7684\u5b57\u6bcd"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"3. \u521d\u59cb\u5316")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"s")," \u4e2d\u524d ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," \u4e2a\u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"p")," \u4e2d\u524d ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," \u4e2a\u8fdb\u884c\u5339\u914d\u7684\u7ed3\u679c ",(0,i.kt)("inlineCode",{parentName:"p"},"dp[0][0]")," \u662ftrue"),(0,i.kt)("p",null,"\u5904\u7406\u4e00\u4e0b\u5339\u914d\u4e32 p \u4ee5\u82e5\u5e72\u4e2a\u661f\u53f7\u5f00\u5934\u7684\u60c5\u51b5\u3002\u56e0\u4e3a\u661f\u53f7\u662f\u53ef\u4ee5\u5339\u914d\u7a7a\u4e32\u7684"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"4. \u8f93\u51fa")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"dp[sn][pn]")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u590d\u6742\u5ea6\u5206\u6790")),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n^2)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n^2)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        int sn = s.size();\n        int pn = p.size();\n\n        vector<vector<bool>> dp(sn + 1, vector<bool>(pn + 1, false));\n        dp[0][0] = true;\n        for (int pi = 1; pi <= pn; pi++) {\n            if (p[pi - 1] == '*') {\n                dp[0][pi] = true;\n            } else {\n                break;\n            }\n        }\n\n        for (int si = 1; si <= sn; si++) {\n            for (int pi = 1; pi <= pn; pi++) {\n                if (s[si - 1] == p[pi - 1]) {\n                    dp[si][pi] = dp[si - 1][pi - 1];\n                } else if (p[pi - 1] == '?') {\n                    dp[si][pi] = dp[si - 1][pi - 1];\n                } else if (p[pi - 1] == '*') {\n                    dp[si][pi] = (dp[si][pi - 1] || dp[si - 1][pi]);\n                }\n            }\n        }\n        return dp[sn][pn];\n    }\n};\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        sn = len(s)\n        pn = len(p)\n\n        dp = [[False] * (pn + 1) for _ in range(sn + 1)]\n        dp[0][0] = True\n\n        for pi in range(1, pn + 1):\n            if p[pi - 1] == "*":\n                dp[0][pi] = dp[0][pi - 1]\n\n        for si in range(1, sn + 1):\n            for pi in range(1, pn + 1):\n                if (s[si - 1] == p[pi - 1] or p[pi - 1] == "?"):\n                    dp[si][pi] = dp[si - 1][pi - 1]\n                elif p[pi - 1] == "*":\n                    dp[si][pi] = dp[si - 1][pi] or dp[si][pi - 1]\n\n        return dp[-1][-1]\n')))}c.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[82282],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>N});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=o.createContext({}),p=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(d.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},k=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),k=a,N=u["".concat(d,".").concat(k)]||u[k]||m[k]||i;return t?o.createElement(N,r(r({ref:n},c),{},{components:t})):o.createElement(N,r({ref:n},c))}));function N(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=k;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[u]="string"==typeof e?e:a,r[1]=l;for(var p=2;p<i;p++)r[p]=t[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}k.displayName="MDXCreateElement"},28286:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=t(87462),a=(t(67294),t(3905));const i={},r="LFU \u7f13\u5b58\u5b9e\u73b0",l={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/LFU\u7f13\u5b58\u5b9e\u73b0",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/LFU\u7f13\u5b58\u5b9e\u73b0",title:"LFU \u7f13\u5b58\u5b9e\u73b0",description:"\u9898\u76ee\uff1a460. LFU \u7f13\u5b58",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/460-LFU\u7f13\u5b58\u5b9e\u73b0.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/LFU\u7f13\u5b58\u5b9e\u73b0",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/LFU\u7f13\u5b58\u5b9e\u73b0",draft:!1,tags:[],version:"current",sidebarPosition:460,frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u6700\u5c0f\u6808",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/\u6700\u5c0f\u6808"},next:{title:"\u8bbe\u8ba1\u5185\u5b58\u5206\u914d\u5668",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u5185\u5b58\u5206\u914d\u5668"}},d={},p=[{value:"\u4e00\u3001O(1) \u89e3\u6cd5",id:"\u4e00o1-\u89e3\u6cd5",level:2},{value:"\u81ea\u5b9a\u4e49\u591a\u4e2a\u53cc\u5411\u94fe\u8868",id:"\u81ea\u5b9a\u4e49\u591a\u4e2a\u53cc\u5411\u94fe\u8868",level:3},{value:"\u4e8c\u3001O(logN) \u89e3\u6cd5",id:"\u4e8cologn-\u89e3\u6cd5",level:2},{value:"\u4e09\u3001O(N) \u89e3\u6cd5",id:"\u4e09on-\u89e3\u6cd5",level:2},{value:"\u4e00\u6761\u53cc\u5411\u94fe\u8868 + \u4e00\u4e2a\u54c8\u5e0c\u8868",id:"\u4e00\u6761\u53cc\u5411\u94fe\u8868--\u4e00\u4e2a\u54c8\u5e0c\u8868",level:3}],c={toc:p};function u(e){let{components:n,...i}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lfu-\u7f13\u5b58\u5b9e\u73b0"},"LFU \u7f13\u5b58\u5b9e\u73b0"),(0,a.kt)("p",null,"\u9898\u76ee\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/lfu-cache/"},"460. LFU \u7f13\u5b58")),(0,a.kt)("p",null,"\u53c2\u8003\uff1a","[Java 13ms \u53cc100% \u53cc\u5411\u94fe\u8868 \u591a\u89e3\u6cd5\u8d85\u5168\ud83d\ude02]","(",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/lfu-cache/solution/java-13ms-shuang-100-shuang-xiang-lian-biao-duo-ji/"},"Java 13ms \u53cc100% \u53cc\u5411\u94fe\u8868 \u591a\u89e3\u6cd5\u8d85\u5168\ud83d\ude02 - LFU \u7f13\u5b58 - \u529b\u6263\uff08LeetCode\uff09"),")"),(0,a.kt)("p",null,"LFU \u7b80\u5355\u7406\u89e3\u5219\u662f\u6307\u300c\u79fb\u9664\u4f7f\u7528\u6b21\u6570\u6700\u5c11\u7684\u5143\u7d20\u300d\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u4f7f\u7528\u6b21\u6570\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u5219\u79fb\u9664\u300c\u6700\u8fd1\u4e0d\u88ab\u4f7f\u7528\u7684\u90a3\u4e2a\u300d\uff08LRU \u89c4\u5219\uff09\u3002\u540c\u6837\u7684 get \u548c put \u90fd\u7b97\u4f5c\u4e00\u6b21\u4f7f\u7528\u3002"),(0,a.kt)("p",null,"\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u5143\u7d20\u7684\u4f7f\u7528\u6b21\u6570\uff0c\u5e76\u4e14\u5728 O(1) \u7684\u590d\u6742\u5ea6\u5185\u300c\u4fee\u6539\u67d0\u4e2a\u5143\u7d20\u7684\u4f7f\u7528\u6b21\u6570\u300d\u548c\u300c\u627e\u5230\u4f7f\u7528\u6b21\u6570\u6700\u5c0f\u7684\u5143\u7d20\u300d\u3002"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\u8bf7\u4f60\u4e3a ",(0,a.kt)("a",{parentName:"p",href:"https://baike.baidu.com/item/%E7%BC%93%E5%AD%98%E7%AE%97%E6%B3%95"},"\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\uff08LFU\uff09"),"\u7f13\u5b58\u7b97\u6cd5\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u6570\u636e\u7ed3\u6784\u3002"),(0,a.kt)("p",null,"\u5b9e\u73b0 ",(0,a.kt)("inlineCode",{parentName:"p"},"LFUCache")," \u7c7b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LFUCache(int capacity)")," - \u7528\u6570\u636e\u7ed3\u6784\u7684\u5bb9\u91cf ",(0,a.kt)("inlineCode",{parentName:"li"},"capacity")," \u521d\u59cb\u5316\u5bf9\u8c61"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"int get(int key)")," - \u5982\u679c\u952e ",(0,a.kt)("inlineCode",{parentName:"li"},"key")," \u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u83b7\u53d6\u952e\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"li"},"-1")," \u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"void put(int key, int value)")," - \u5982\u679c\u952e ",(0,a.kt)("inlineCode",{parentName:"li"},"key")," \u5df2\u5b58\u5728\uff0c\u5219\u53d8\u66f4\u5176\u503c\uff1b\u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u8bf7\u63d2\u5165\u952e\u503c\u5bf9\u3002\u5f53\u7f13\u5b58\u8fbe\u5230\u5176\u5bb9\u91cf ",(0,a.kt)("inlineCode",{parentName:"li"},"capacity")," \u65f6\uff0c\u5219\u5e94\u8be5\u5728\u63d2\u5165\u65b0\u9879\u4e4b\u524d\uff0c\u79fb\u9664\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684\u9879\u3002\u5728\u6b64\u95ee\u9898\u4e2d\uff0c\u5f53\u5b58\u5728\u5e73\u5c40\uff08\u5373\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u952e\u5177\u6709\u76f8\u540c\u4f7f\u7528\u9891\u7387\uff09\u65f6\uff0c\u5e94\u8be5\u53bb\u9664 \u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528 \u7684\u952e\u3002")),(0,a.kt)("p",null,"\u4e3a\u4e86\u786e\u5b9a\u6700\u4e0d\u5e38\u4f7f\u7528\u7684\u952e\uff0c\u53ef\u4ee5\u4e3a\u7f13\u5b58\u4e2d\u7684\u6bcf\u4e2a\u952e\u7ef4\u62a4\u4e00\u4e2a ",(0,a.kt)("strong",{parentName:"p"},"\u4f7f\u7528\u8ba1\u6570\u5668")," \u3002\u4f7f\u7528\u8ba1\u6570\u6700\u5c0f\u7684\u952e\u662f\u6700\u4e45\u672a\u4f7f\u7528\u7684\u952e\u3002"),(0,a.kt)("p",null,"\u5f53\u4e00\u4e2a\u952e\u9996\u6b21\u63d2\u5165\u5230\u7f13\u5b58\u4e2d\u65f6\uff0c\u5b83\u7684\u4f7f\u7528\u8ba1\u6570\u5668\u88ab\u8bbe\u7f6e\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"1")," (\u7531\u4e8e put \u64cd\u4f5c)\u3002\u5bf9\u7f13\u5b58\u4e2d\u7684\u952e\u6267\u884c ",(0,a.kt)("inlineCode",{parentName:"p"},"get")," \u6216 ",(0,a.kt)("inlineCode",{parentName:"p"},"put")," \u64cd\u4f5c\uff0c\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u503c\u5c06\u4f1a\u9012\u589e\u3002"),(0,a.kt)("p",null,"\u51fd\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"get")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"put")," \u5fc5\u987b\u4ee5 ",(0,a.kt)("inlineCode",{parentName:"p"},"O(1)")," \u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u8fd0\u884c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1a\n["LFUCache", "put", "put", "get", "put", "get", "get", "put", "get", "get", "get"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [3], [4, 4], [1], [3], [4]]\n\u8f93\u51fa\uff1a\n[null, null, null, 1, null, -1, 3, null, -1, 3, 4]\n\n\u89e3\u91ca\uff1a\n// cnt(x) = \u952e x \u7684\u4f7f\u7528\u8ba1\u6570\n// cache=[] \u5c06\u663e\u793a\u6700\u540e\u4e00\u6b21\u4f7f\u7528\u7684\u987a\u5e8f\uff08\u6700\u5de6\u8fb9\u7684\u5143\u7d20\u662f\u6700\u8fd1\u7684\uff09\nLFUCache lfu = new LFUCache(2);\nlfu.put(1, 1);   // cache=[1,_], cnt(1)=1\nlfu.put(2, 2);   // cache=[2,1], cnt(2)=1, cnt(1)=1\nlfu.get(1);      // \u8fd4\u56de 1\n                // cache=[1,2], cnt(2)=1, cnt(1)=2\nlfu.put(3, 3);   // \u53bb\u9664\u952e 2 \uff0c\u56e0\u4e3a cnt(2)=1 \uff0c\u4f7f\u7528\u8ba1\u6570\u6700\u5c0f\n                // cache=[3,1], cnt(3)=1, cnt(1)=2\nlfu.get(2);      // \u8fd4\u56de -1\uff08\u672a\u627e\u5230\uff09\nlfu.get(3);      // \u8fd4\u56de 3\n                // cache=[3,1], cnt(3)=2, cnt(1)=2\nlfu.put(4, 4);   // \u53bb\u9664\u952e 1 \uff0c1 \u548c 3 \u7684 cnt \u76f8\u540c\uff0c\u4f46 1 \u6700\u4e45\u672a\u4f7f\u7528\n                // cache=[4,3], cnt(4)=1, cnt(3)=2\nlfu.get(1);      // \u8fd4\u56de -1\uff08\u672a\u627e\u5230\uff09\nlfu.get(3);      // \u8fd4\u56de 3\n                // cache=[3,4], cnt(4)=1, cnt(3)=3\nlfu.get(4);      // \u8fd4\u56de 4\n                // cache=[3,4], cnt(4)=2, cnt(3)=3\n')),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"0 <= capacity <= 10^4"),(0,a.kt)("li",{parentName:"ul"},"0 <= key <= 10^5"),(0,a.kt)("li",{parentName:"ul"},"0 <= value <= 10^9"),(0,a.kt)("li",{parentName:"ul"},"\u6700\u591a\u8c03\u7528 2 * 10^5 \u6b21 get \u548c put \u65b9\u6cd5")),(0,a.kt)("h2",{id:"\u4e00o1-\u89e3\u6cd5"},"\u4e00\u3001O(1) \u89e3\u6cd5"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(54459).Z,width:"2056",height:"1536"})),(0,a.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u591a\u4e2a\u53cc\u5411\u94fe\u8868"},"\u81ea\u5b9a\u4e49\u591a\u4e2a\u53cc\u5411\u94fe\u8868"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u9891\u7387\u4e00\u4e2a\u53cc\u5411\u94fe\u8868"),(0,a.kt)("li",{parentName:"ul"},"\u5728\u53cc\u5411\u94fe\u8868\u7684\u5934\u90e8\u6dfb\u52a0\u8282\u70b9\uff0c\u610f\u5473\u7740\u5c3e\u90e8\u662f\u6700\u8fd1\u6ca1\u6709\u4f7f\u7528\u7684\u8282\u70b9\uff08\u4e4b\u540e\u4f18\u5148\u5220\u9664\uff09"),(0,a.kt)("li",{parentName:"ul"},"\u5bf9\u4e8ecache\u91cc\u6709\u7684\u64cd\u4f5c\uff0c\u8bb0\u5f97\u66f4\u65b0 freqMap")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"#include <iostream>\n#include <unordered_map>\n\nusing namespace std;\n\nclass Node {\npublic:\n    int key;\n    int value;\n    int freq = 1;\n    Node *prev;\n    Node *next;\n\n    Node() {}\n    Node(int k, int v) : key(k), value(v) {}\n};\n\nclass DoublyLinkedList {\npublic:\n    Node *head;\n    Node *tail;\n\n    DoublyLinkedList() {\n        head = new Node();\n        tail = new Node();\n        head->next = tail;\n        tail->prev = head;\n    }\n\n    void removeNode(Node *node) {\n        node->prev->next = node->next;\n        node->next->prev = node->prev;\n    }\n\n    // \u5728\u53cc\u5411\u94fe\u8868\u7684\u5934\u90e8\u6dfb\u52a0\u8282\u70b9\n    // \u610f\u5473\u7740\u5c3e\u90e8\u662f\u6700\u8fd1\u6ca1\u6709\u4f7f\u7528\u7684\u8282\u70b9\uff08\u4e4b\u540e\u4f18\u5148\u5220\u9664\uff09\n    void addNode(Node *node) {\n        Node *one = head;\n        Node *two = head->next;\n        one->next = node;\n        node->prev = one;\n        node->next = two;\n        two->prev = node;\n    }\n};\n\nclass LFUCache {\nprivate:\n    unordered_map<int, Node *> cache;                // \u5b58\u50a8\u7f13\u5b58\u7684\u5185\u5bb9\n    unordered_map<int, DoublyLinkedList *> freqMap;  // \u5b58\u50a8\u6bcf\u4e2a\u9891\u6b21\u5bf9\u5e94\u7684\u53cc\u5411\u94fe\u8868\n    int cap;\n    int min;  // \u5b58\u50a8\u5f53\u524d\u6700\u5c0f\u9891\u6b21\npublic:\n    LFUCache(int capacity) {\n        cap = capacity;\n    }\n\n    int get(int key) {\n        if (cache.count(key)) {\n            Node *node = cache[key];\n            freqInc(node);\n            return node->value;\n        }\n        return -1;\n    }\n\n    void put(int key, int value) {\n        if (cap == 0) return;\n        if (cache.count(key)) {  // \u5df2\u6709\u5219\u66f4\u65b0\n            Node *node = cache[key];\n            node->value = value;\n            freqInc(node);\n        } else {                        // \u6ca1\u6709\u5219\u6dfb\u52a0\n            if (cache.size() == cap) {  // cache \u6ee1\u4e86\n                // \u79fb\u9664 freq \u6700\u5c0f\u7684\uff0c\u4e14\u6700\u8fd1\u6ca1\u6709\u4f7f\u7528\u8fc7\u7684\n                DoublyLinkedList *minFreqLinkedList = freqMap[min];\n                cache.erase(minFreqLinkedList->tail->prev->key);\n                minFreqLinkedList->removeNode(minFreqLinkedList->tail->prev);\n                // \u8fd9\u91cc\u4e0d\u9700\u8981\u7ef4\u62a4min, \u56e0\u4e3a\u4e0b\u9762add\u4e86newNode\u540emin\u80af\u5b9a\u662f1\n            }\n            Node *newNode = new Node(key, value);\n            cache[key] = newNode;\n            if (!freqMap.count(1)) {\n                freqMap[1] = new DoublyLinkedList();\n            }\n            freqMap[1]->addNode(newNode);\n            min = 1;\n        }\n    }\n\n    void freqInc(Node *node) {\n        // \u4ece\u539ffreq\u5bf9\u5e94\u7684\u94fe\u8868\u91cc\u79fb\u9664, \u5e76\u66f4\u65b0min\n        int freq = node->freq;\n        DoublyLinkedList *linkedList = freqMap[freq];\n        linkedList->removeNode(node);\n        if (freq == min && linkedList->head->next == linkedList->tail) {\n            // \u5982\u679c freq \u662f\u6700\u5c0f\u7684\uff0c\u7136\u540e\u94fe\u8868\u5220\u9664\u540e\uff0c\u7a7a\u4e86\uff0c\u624d\u66f4\u65b0 min\n            min = freq + 1;\n        }\n        // \u52a0\u5165\u65b0freq\u5bf9\u5e94\u7684\u94fe\u8868\n        freq++;\n        node->freq = freq;\n\n        if (!freqMap.count(freq)) {\n            linkedList = new DoublyLinkedList();\n            freqMap[freq] = linkedList;\n        }\n        freqMap[freq]->addNode(node);\n    }\n};\n")),(0,a.kt)("h2",{id:"\u4e8cologn-\u89e3\u6cd5"},"\u4e8c\u3001O(logN) \u89e3\u6cd5"),(0,a.kt)("p",null,"\u4f7f\u7528\u5c0f\u6839\u5806\u627e\u5230 ",(0,a.kt)("inlineCode",{parentName:"p"},"freq")," \u6700\u5c0f"),(0,a.kt)("p",null,"\u6bcf\u6b21\u5c06\u8bbf\u95ee\u9891\u6b21 ",(0,a.kt)("inlineCode",{parentName:"p"},"freq")," \u6700\u5c0f\u7684\u4e14\u6700\u5148\u8bbf\u95ee\u7684\u4e0a\u6d6e\u5230\u5806\u9876\uff0c\u4e0b\u9762\u7528\u5168\u5c40\u81ea\u589e ",(0,a.kt)("inlineCode",{parentName:"p"},"idx")," \u8868\u793a\u8bbf\u95ee\u7684\u5148\u540e"),(0,a.kt)("p",null,"c++ \u7684 priority_queue \u4f3c\u4e4e\u4e0d\u662f\u5f88\u597d\u5b9e\u73b0\uff0c\u539f\u56e0\u662f\u65e0\u6cd5\u76f4\u63a5\u5220\u9664\u6389\u5c0f\u6839\u5806\u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20"),(0,a.kt)("h2",{id:"\u4e09on-\u89e3\u6cd5"},"\u4e09\u3001O(N) \u89e3\u6cd5"),(0,a.kt)("h3",{id:"\u4e00\u6761\u53cc\u5411\u94fe\u8868--\u4e00\u4e2a\u54c8\u5e0c\u8868"},"\u4e00\u6761\u53cc\u5411\u94fe\u8868 + \u4e00\u4e2a\u54c8\u5e0c\u8868"),(0,a.kt)("p",null,"\u4f7f ",(0,a.kt)("inlineCode",{parentName:"p"},"freq")," \u5c0f\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"Node")," \u5728\u94fe\u8868\u7684\u5de6\u8fb9\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"freq")," \u5927\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"Node")," \u5728\u94fe\u8868\u7684\u53f3\u8fb9\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"freq")," \u76f8\u7b49\u7684\u8bdd\u6700\u4e45\u4f7f\u7528\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"Node")," \u5728\u5de6\u8fb9\u3001\u6700\u8fd1\u4f7f\u7528\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"Node")," \u5728\u53f3\u8fb9\uff0c\u56e0\u6b64\u6ee1\u4e86\u4e4b\u540e\u5220\u9664 ",(0,a.kt)("inlineCode",{parentName:"p"},"head.post"),"\uff0c\u8be5 ",(0,a.kt)("inlineCode",{parentName:"p"},"Node")," \u5373 ",(0,a.kt)("inlineCode",{parentName:"p"},"freq")," \u6700\u5c0f\u4e14\u6700\u4e45\u8bbf\u95ee\u7684\u3002"),(0,a.kt)("p",null,"\u6bcf\u6b21 ",(0,a.kt)("inlineCode",{parentName:"p"},"node")," \u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"freq++")," \u540e\uff0c\u4ece\u5f53\u524d\u4f4d\u7f6e\u5411\u540e\u904d\u5386\u94fe\u8868\uff0c\u76f4\u5230 ",(0,a.kt)("inlineCode",{parentName:"p"},"nextNode.freq > node.freq || nextNode== tail"),"\uff0c\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"nextNode")," \u4e4b\u524d\u63d2\u5165\u8be5 ",(0,a.kt)("inlineCode",{parentName:"p"},"node"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"class Node {\npublic:\n    int key;\n    int value;\n    int freq = 1;\n    Node *prev;\n    Node *next;\n    Node(int k, int v) : key(k), value(v) {}\n};\n\nclass LFUCache {\nprivate:\n    Node *head;\n    Node *tail;\n    int cap;\n    unordered_map<int, Node *> map;\n\n    void moveToNewPosition(Node *node) {\n        Node *nextNode = node->next;\n        deleteNode(node);\n        while (node->freq >= nextNode->freq && nextNode != tail) {\n            // \u8282\u70b9\u7684\u9891\u7387\u9ad8\u4e8e\u4e0b\u4e2a\u8282\u70b9\u7684\u8bdd\u5c31\u79fb\u52a8\n            // \u7b49\u4e8e\u4e5f\u8981\u79fb\u52a8\uff0c\u56e0\u4e3a\u5f53\u524d\u7684node\u662f\u6700\u65b0\u4f7f\u7528\u7684\uff0c\u5c3d\u91cf\u5f80\u540e\u6392\n            nextNode = nextNode->next;\n        }\n        // \u8df3\u51fa\u5faa\u73af\u65f6\uff0cnextNode \u7684\u9891\u7387\u4e00\u5b9a\u5927\u4e8enode\u7684\uff0c\u6216\u662f\u5c3e\u8282\u70b9\n        // \u56e0\u6b64\u5728 nextNode \u7684\u524d\u9762\u6dfb\u52a0\u4e0anode\n        Node *one = nextNode->prev;\n        Node *two = nextNode;\n        one->next = node;\n        node->prev = one;\n        node->next = two;\n        two->prev = node;\n    }\n\n    // \u5148\u5728\u5934\u90e8\u6dfb\u52a0\u8282\u70b9\uff0c\u518d\u8c03\u6574\u5230\u6b63\u786e\u4f4d\u7f6e\n    void addNode(Node *node) {\n        Node *one = head;\n        Node *two = head->next;\n        one->next = node;\n        node->prev = one;\n        node->next = two;\n        two->prev = node;\n        moveToNewPosition(node);\n    }\n\n    // \u5220\u9664\u6307\u5b9a\u8282\u70b9\n    void deleteNode(Node *node) {\n        node->prev->next = node->next;\n        node->next->prev = node->prev;\n    }\n\npublic:\n    LFUCache(int capacity) {\n        cap = capacity;\n        head = new Node(-1, -1);\n        tail = new Node(-1, -1);\n        head->next = tail;\n        tail->prev = head;\n    }\n\n    int get(int key) {\n        if (map.count(key)) {\n            Node *node = map[key];\n            node->freq = node->freq + 1;\n            moveToNewPosition(node);\n            return node->value;\n        }\n        return -1;\n    }\n\n    void put(int key, int value) {\n        if (cap == 0) return;\n        if (map.count(key)) {\n            // \u4e4b\u524d\u6709\n            Node *node = map[key];\n            node->value = value;\n            node->freq++;\n            moveToNewPosition(node);\n        } else {\n            // \u4e4b\u524d\u6ca1\u6709\n            if (map.size() == cap) {  // cache \u5bb9\u91cf\u6ee1\u4e86\n                map.erase(head->next->key);\n                deleteNode(head->next);\n            }\n            Node *node = new Node(key, value);\n            addNode(node);\n            map[key] = node;\n        }\n    }\n};\n")))}u.isMDXComponent=!0},54459:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/460-4e1b1e64c08b925fdf9934ab382445be.png"}}]);
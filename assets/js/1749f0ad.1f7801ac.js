"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[43280],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>g});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var p=r.createContext({}),s=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},c=function(n){var e=s(n.components);return r.createElement(p.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,p=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),d=s(t),f=i,g=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(g,a(a({ref:e},c),{},{components:t})):r.createElement(g,a({ref:e},c))}));function g(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=n,l[d]="string"==typeof n?n:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},22457:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const o={},a=void 0,l={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f-dfs-\u5e76\u67e5\u96c6>-\u7edf\u8ba1\u65e0\u5411\u56fe\u4e2d\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6570",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f-dfs-\u5e76\u67e5\u96c6>-\u7edf\u8ba1\u65e0\u5411\u56fe\u4e2d\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6570",title:"<\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f-dfs-\u5e76\u67e5\u96c6>-\u7edf\u8ba1\u65e0\u5411\u56fe\u4e2d\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6570",description:"\u9898\u76ee\uff1a2316. \u7edf\u8ba1\u65e0\u5411\u56fe\u4e2d\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6570",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS/2316-<\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f-dfs-\u5e76\u67e5\u96c6>-\u7edf\u8ba1\u65e0\u5411\u56fe\u4e2d\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6570.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f-dfs-\u5e76\u67e5\u96c6>-\u7edf\u8ba1\u65e0\u5411\u56fe\u4e2d\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6570",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f-dfs-\u5e76\u67e5\u96c6>-\u7edf\u8ba1\u65e0\u5411\u56fe\u4e2d\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6570",draft:!1,tags:[],version:"current",sidebarPosition:2316,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u56de\u6eaf>-\u5c04\u7bad\u6bd4\u8d5b\u4e2d\u7684\u6700\u5927\u5f97\u5206",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u56de\u6eaf>-\u5c04\u7bad\u6bd4\u8d5b\u4e2d\u7684\u6700\u5927\u5f97\u5206"},next:{title:"<\u5206\u7c7b>-\u6dfb\u52a0\u8fb9\u4f7f\u6240\u6709\u8282\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u56fe\u76f8\u5173\u7684\u9898/<\u5206\u7c7b>-\u6dfb\u52a0\u8fb9\u4f7f\u6240\u6709\u8282\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570"}},p={},s=[{value:"\u65b9\u6cd5\u4e00\uff1adfs",id:"\u65b9\u6cd5\u4e00dfs",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u5e76\u67e5\u96c6",id:"\u65b9\u6cd5\u4e8c\u5e76\u67e5\u96c6",level:2}],c={toc:s};function d(n){let{components:e,...o}=n;return(0,i.kt)("wrapper",(0,r.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph/"},"2316. \u7edf\u8ba1\u65e0\u5411\u56fe\u4e2d\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\u70b9\u5bf9\u6570")),(0,i.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," \uff0c\u8868\u793a\u4e00\u5f20 ",(0,i.kt)("strong",{parentName:"p"},"\u65e0\u5411\u56fe")," \u4e2d\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," \u4e2a\u8282\u70b9\uff0c\u7f16\u53f7\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," \u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"n - 1")," \u3002\u540c\u65f6\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"edges")," \uff0c\u5176\u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"edges[i] = [ai, bi]")," \u8868\u793a\u8282\u70b9 ",(0,i.kt)("inlineCode",{parentName:"p"},"ai")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"bi")," \u4e4b\u95f4\u6709\u4e00\u6761 ",(0,i.kt)("strong",{parentName:"p"},"\u65e0\u5411")," \u8fb9\u3002"),(0,i.kt)("p",null,"\u8bf7\u4f60\u8fd4\u56de ",(0,i.kt)("strong",{parentName:"p"},"\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe")," \u7684\u4e0d\u540c ",(0,i.kt)("strong",{parentName:"p"},"\u70b9\u5bf9\u6570\u76ee")," \u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:t(17278).Z,width:"382",height:"242"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1an = 3, edges = [[0,1],[0,2],[1,2]]\n\u8f93\u51fa\uff1a0\n\u89e3\u91ca\uff1a\u6240\u6709\u70b9\u90fd\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u610f\u5473\u7740\u6ca1\u6709\u70b9\u5bf9\u65e0\u6cd5\u4e92\u76f8\u5230\u8fbe\uff0c\u6240\u4ee5\u6211\u4eec\u8fd4\u56de 0 \u3002\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:t(87771).Z,width:"422",height:"384"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1an = 7, edges = [[0,2],[0,5],[2,4],[1,6],[5,4]]\n\u8f93\u51fa\uff1a14\n\u89e3\u91ca\uff1a\u603b\u5171\u6709 14 \u4e2a\u70b9\u5bf9\u4e92\u76f8\u65e0\u6cd5\u5230\u8fbe\uff1a\n[[0,1],[0,3],[0,6],[1,2],[1,3],[1,4],[1,5],[2,3],[2,6],[3,4],[3,5],[3,6],[4,6],[5,6]]\n\u6240\u4ee5\u6211\u4eec\u8fd4\u56de 14 \u3002\n")),(0,i.kt)("p",null,"\u63d0\u793a\uff1a"),(0,i.kt)("p",null,"1 <= n <= 105\n0 <= edges.length <= 2 * 105\nedges","[i]",".length == 2\n0 <= ai, bi < n\nai != bi\n\u4e0d\u4f1a\u6709\u91cd\u590d\u8fb9\u3002"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"\u8ba1\u7b97\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f"),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e00dfs"},"\u65b9\u6cd5\u4e00\uff1adfs"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<bool> visited;\n    vector<vector<int>> adj;\n    int cnt;  // \u6bcf\u4e2a\u8fde\u901a\u901a\u91cf\u7684\u5927\u5c0f\n\n    // \u904d\u5386\u8fd9\u4e2a\u8fde\u901a\u901a\u91cf\n    void dfs(int cur) {\n        if (visited[cur]) return;\n        cnt++;\n        visited[cur] = true;\n        for (int next : adj[cur]) {\n            dfs(next);\n        }\n    }\n\n    long long countPairs(int n, vector<vector<int>>& edges) {\n        visited.resize(n, false);\n        adj.resize(n);\n        for (auto& e : edges) {\n            adj[e[0]].push_back(e[1]);\n            adj[e[1]].push_back(e[0]);\n        }\n\n        int total = 0;\n        long long ans = 0L;\n        for (int cur = 0; cur < n; cur++) {\n            cnt = 0;\n            dfs(cur);\n            if (cnt) {\n                ans += (long long)cnt * total;\n                total += cnt;\n            }\n        }\n        return ans;\n    }\n};\n")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u5e76\u67e5\u96c6"},"\u65b9\u6cd5\u4e8c\uff1a\u5e76\u67e5\u96c6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class UnionFind {\npublic:\n    vector<int> parent;  // \u4e0b\u6807idx\u4e3a\u8282\u70b9\uff0cparent[idx]\u4e3a\u8be5\u8282\u70b9\u7684\u7236\u4eb2\n    vector<int> size;    // \u82e5idx\u4e3a\u7236\u4eb2\u6839\u8282\u70b9\uff0csize[idx]\u4e3a\u8be5\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\n    int n;               // \u8282\u70b9\u6570\u91cf\n    int setCount;        // \u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\n\npublic:\n    UnionFind(int _n) : n(_n), setCount(_n), parent(_n), size(_n, 1) {\n        iota(parent.begin(), parent.end(), 0);\n    }\n\n    int find(int x) {\n        return parent[x] == x ? x : parent[x] = find(parent[x]);\n    }\n\n    bool unite(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x == y) return false;\n\n        if (size[x] < size[y]) {\n            swap(x, y);\n        }\n        parent[y] = x;       // x \u4f5c\u4e3a y \u7684\u7236\u4eb2\n        size[x] += size[y];  // \u7236\u4eb2\u8282\u70b9x\u7684\u8054\u901a\u5206\u91cf\u5927\u5c0f\u52a0\u4e0ay\u8282\u70b9\u7684\n        --setCount;\n        return true;\n    }\n\n    bool is_connected(int x, int y) {\n        x = find(x);\n        y = find(y);\n        return x == y;\n    }\n\n    void disconnected(int x) {\n        if (x != parent[x]) {\n            parent[x] = x;\n            size[x] = 1;\n            ++setCount;\n        }\n    }\n};\n\nclass Solution {\npublic:\n    long long countPairs(int n, vector<vector<int>>& edges) {\n        // \u6c42\u51fa\u6bcf\u4e2a \u8054\u901a\u91cf\u7684 \u5927\u5c0f\n        UnionFind uf(n);\n        for (auto& edge : edges) {\n            uf.unite(edge[0], edge[1]);\n        }\n\n        // \u8fd9\u9898\u4e3b\u8981\u662f\u5b66\u4e60\u4e0b\u5efa\u7acb\u5e76\u67e5\u96c6\u540e\u600e\u4e48\u4f7f\u7528\n        vector<int> cnts;\n        unordered_set<int> p_visited;  // \u8bb0\u5f55\u4f7f\u7528\u8fc7\u7684\u8fde\u901a\u5206\u91cf\n        int total = 0;\n        long long ans = 0L;\n        for (int node = 0; node < n; node++) {\n            int p = uf.find(node);\n            if (p_visited.count(p)) continue;\n            int cnt = uf.size[p];\n            p_visited.insert(p);\n\n            ans += (long long)total * cnt;\n            total += cnt;\n        }\n\n        return ans;\n    }\n};\n")))}d.isMDXComponent=!0},87771:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/tc-2-9dcb9d36510a9c3f9b1d37911574d5dd.png"},17278:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/tc-3-ebdc1056d522d218e3270d03b4db4598.png"}}]);
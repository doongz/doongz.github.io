"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[21792],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(p,".").concat(f)]||m[f]||u[f]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},32079:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={},o=void 0,l={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u904d\u5386>-\u87ba\u65cb\u77e9\u9635",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u904d\u5386>-\u87ba\u65cb\u77e9\u9635",title:"<\u987a\u65f6\u9488\u904d\u5386>-\u87ba\u65cb\u77e9\u9635",description:"\u9898\u76ee\uff1a54. \u87ba\u65cb\u77e9\u9635",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/54-<\u987a\u65f6\u9488\u904d\u5386>-\u87ba\u65cb\u77e9\u9635.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u904d\u5386>-\u87ba\u65cb\u77e9\u9635",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u904d\u5386>-\u87ba\u65cb\u77e9\u9635",draft:!1,tags:[],version:"current",sidebarPosition:54,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u679a\u4e3e\u5c0f\u683c\u5b50\u5b9a\u70b9>-\u6709\u6548\u7684\u6570\u72ec",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u679a\u4e3e\u5c0f\u683c\u5b50\u5b9a\u70b9>-\u6709\u6548\u7684\u6570\u72ec"},next:{title:"<\u4e09\u4e2awhile>-\u63d2\u5165\u533a\u95f4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u4e09\u4e2awhile>-\u63d2\u5165\u533a\u95f4"}},p={},s=[],c={toc:s};function m(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u9898\u76ee\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/spiral-matrix/"},"54. \u87ba\u65cb\u77e9\u9635")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"m")," \u884c ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," \u5217\u7684\u77e9\u9635 ",(0,a.kt)("inlineCode",{parentName:"p"},"matrix")," \uff0c\u8bf7\u6309\u7167 ",(0,a.kt)("strong",{parentName:"p"},"\u987a\u65f6\u9488\u87ba\u65cb\u987a\u5e8f")," \uff0c\u8fd4\u56de\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:n(79225).Z,width:"242",height:"242"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1amatrix = [[1,2,3],[4,5,6],[7,8,9]]\n\u8f93\u51fa\uff1a[1,2,3,6,9,8,7,4,5]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:n(99736).Z,width:"322",height:"242"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1amatrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n\u8f93\u51fa\uff1a[1,2,3,4,8,12,11,10,9,5,6,7]\n")),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("p",null,"m == matrix.length\nn == matrix","[i]",".length\n1 <= m, n <= 10\n",(0,a.kt)("inlineCode",{parentName:"p"},"-100 <= matrix[i][j] <= 100")),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        if (len(matrix) == 0): return []\n        rows = len(matrix)\n        cols = len(matrix[0])\n        l = 0\n        r = cols - 1\n        t = 0\n        b = rows - 1\n        ans = []\n        \n        while True:\n            # left to right\n            for i in range(l, r+1): ans.append(matrix[t][i])\n            t += 1\n            if t > b: break\n            # top to bottom\n            for i in range(t, b+1): ans.append(matrix[i][r])\n            r -= 1\n            if l > r: break\n            # right to left\n            for i in range(r, l-1, -1): ans.append(matrix[b][i])\n            b -= 1\n            if t > b: break\n            # bottom to top\n            for i in range(b, t-1, -1): ans.append(matrix[i][l])\n            l += 1\n            if l > r: break\n        return ans\n")))}m.isMDXComponent=!0},99736:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/spiral-15f87130180592d04aea70dbf29053c0.jpg"},79225:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/spiral1-19654b0505b4f5ff66edf44ae1b70cd1.jpg"}}]);
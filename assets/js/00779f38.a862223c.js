"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[34570],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=c(t),d=a,f=s["".concat(p,".").concat(d)]||s[d]||m[d]||i;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[s]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},56519:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const i={},l=void 0,o={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3+\u4e00\u6b21\u904d\u5386>-\u5b57\u7b26\u4e32\u4e2d\u6700\u591a\u6570\u76ee\u7684\u5b50\u5b57\u7b26\u4e32",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3+\u4e00\u6b21\u904d\u5386>-\u5b57\u7b26\u4e32\u4e2d\u6700\u591a\u6570\u76ee\u7684\u5b50\u5b57\u7b26\u4e32",title:"<\u8d2a\u5fc3+\u4e00\u6b21\u904d\u5386>-\u5b57\u7b26\u4e32\u4e2d\u6700\u591a\u6570\u76ee\u7684\u5b50\u5b57\u7b26\u4e32",description:"2207. \u5b57\u7b26\u4e32\u4e2d\u6700\u591a\u6570\u76ee\u7684\u5b50\u5b57\u7b26\u4e32",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/2207-<\u8d2a\u5fc3+\u4e00\u6b21\u904d\u5386>-\u5b57\u7b26\u4e32\u4e2d\u6700\u591a\u6570\u76ee\u7684\u5b50\u5b57\u7b26\u4e32.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3+\u4e00\u6b21\u904d\u5386>-\u5b57\u7b26\u4e32\u4e2d\u6700\u591a\u6570\u76ee\u7684\u5b50\u5b57\u7b26\u4e32",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3+\u4e00\u6b21\u904d\u5386>-\u5b57\u7b26\u4e32\u4e2d\u6700\u591a\u6570\u76ee\u7684\u5b50\u5b57\u7b26\u4e32",draft:!1,tags:[],version:"current",sidebarPosition:2207,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5faa\u73af\u4e2d\u52a8\u6001\u53d8\u5316\u4e0a\u9650\u503c>-\u62c6\u5206\u6210\u6700\u591a\u6570\u76ee\u7684\u5076\u6574\u6570\u4e4b\u548c",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u5faa\u73af\u4e2d\u52a8\u6001\u53d8\u5316\u4e0a\u9650\u503c>-\u62c6\u5206\u6210\u6700\u591a\u6570\u76ee\u7684\u5076\u6574\u6570\u4e4b\u548c"},next:{title:"\u52a8\u6001\u89c4\u5212\u57fa\u7840",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u57fa\u7840"}},p={},c=[{value:"\u65b9\u6cd5\uff1a\u8d2a\u5fc3+\u4e00\u6b21\u904d\u5386",id:"\u65b9\u6cd5\u8d2a\u5fc3\u4e00\u6b21\u904d\u5386",level:2}],u={toc:c};function s(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/maximize-number-of-subsequences-in-a-string/"},"2207. \u5b57\u7b26\u4e32\u4e2d\u6700\u591a\u6570\u76ee\u7684\u5b50\u5b57\u7b26\u4e32")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u4e0b\u6807\u4ece ",(0,a.kt)("strong",{parentName:"p"},"0")," \u5f00\u59cb\u7684\u5b57\u7b26\u4e32 ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," \u548c\u53e6\u4e00\u4e2a\u4e0b\u6807\u4ece ",(0,a.kt)("strong",{parentName:"p"},"0")," \u5f00\u59cb\u4e14\u957f\u5ea6\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"2")," \u7684\u5b57\u7b26\u4e32 ",(0,a.kt)("inlineCode",{parentName:"p"},"pattern")," \uff0c\u4e24\u8005\u90fd\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002"),(0,a.kt)("p",null,"\u4f60\u53ef\u4ee5\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," \u4e2d\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165 ",(0,a.kt)("strong",{parentName:"p"},"\u4e00\u4e2a")," \u5b57\u7b26\uff0c\u8fd9\u4e2a\u63d2\u5165\u7684\u5b57\u7b26\u5fc5\u987b\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"pattern[0]")," ",(0,a.kt)("strong",{parentName:"p"},"\u6216\u8005")," ",(0,a.kt)("inlineCode",{parentName:"p"},"pattern[1]")," \u3002"),(0,a.kt)("p",null,"\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5b57\u7b26\u53ef\u4ee5\u63d2\u5165\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," \u5f00\u5934\u6216\u8005\u7ed3\u5c3e\u7684\u4f4d\u7f6e\u3002"),(0,a.kt)("p",null,"\u8bf7\u4f60\u8fd4\u56de\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u540e\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"text")," \u4e2d\u6700\u591a\u5305\u542b\u591a\u5c11\u4e2a\u7b49\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"pattern")," \u7684 ",(0,a.kt)("strong",{parentName:"p"},"\u5b50\u5e8f\u5217")," \u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u5b50\u5e8f\u5217")," \u6307\u7684\u662f\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u5220\u9664\u82e5\u5e72\u4e2a\u5b57\u7b26\u540e\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\uff09\uff0c\u5269\u4f59\u5b57\u7b26\u4fdd\u6301\u539f\u672c\u987a\u5e8f\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1atext = "abdcdbc", pattern = "ac"\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1a\n\u5982\u679c\u6211\u4eec\u5728 text[1] \u548c text[2] \u4e4b\u95f4\u6dfb\u52a0 pattern[0] = \'a\' \uff0c\u90a3\u4e48\u6211\u4eec\u5f97\u5230 "abadcdbc" \u3002\u90a3\u4e48 "ac" \u4f5c\u4e3a\u5b50\u5e8f\u5217\u51fa\u73b0 4 \u6b21\u3002\n\u5176\u4ed6\u5f97\u5230 4 \u4e2a "ac" \u5b50\u5e8f\u5217\u7684\u65b9\u6848\u8fd8\u6709 "aabdcdbc" \u548c "abdacdbc" \u3002\n\u4f46\u662f\uff0c"abdcadbc" \uff0c"abdccdbc" \u548c "abdcdbcc" \u8fd9\u4e9b\u5b57\u7b26\u4e32\u867d\u7136\u662f\u53ef\u884c\u7684\u63d2\u5165\u65b9\u6848\uff0c\u4f46\u662f\u53ea\u51fa\u73b0\u4e86 3 \u6b21 "ac" \u5b50\u5e8f\u5217\uff0c\u6240\u4ee5\u4e0d\u662f\u6700\u4f18\u89e3\u3002\n\u53ef\u4ee5\u8bc1\u660e\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u540e\uff0c\u65e0\u6cd5\u5f97\u5230\u8d85\u8fc7 4 \u4e2a "ac" \u5b50\u5e8f\u5217\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1atext = "aabb", pattern = "ab"\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\n\u53ef\u4ee5\u5f97\u5230 6 \u4e2a "ab" \u5b50\u5e8f\u5217\u7684\u90e8\u5206\u65b9\u6848\u4e3a "aaabb" \uff0c"aaabb" \u548c "aabbb" \u3002\n\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= text.length <= 105")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pattern.length == 2")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"text")," \u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"pattern")," \u90fd\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002")),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u8d2a\u5fc3\u4e00\u6b21\u904d\u5386"},"\u65b9\u6cd5\uff1a\u8d2a\u5fc3+\u4e00\u6b21\u904d\u5386"),(0,a.kt)("p",null,"\u82e5pattern=\"ac\"\uff0c\u90a3\u4e48\u8ba4\u4e3a\u5728text\u7684\u5f00\u59cb\u6dfb\u52a0'a'\u6216\u8005\u5728text\u7684\u7ed3\u5c3e\u6dfb\u52a0'c'\u8fd9\u4e24\u79cd\u60c5\u51b5\u80fd\u5f97\u5230\u6700\u5927\u503c\u3002"),(0,a.kt)("p",null,"\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5e76\u8bb0\u5f55\u521d\u59cb\u5b50\u5e8f\u5217\u6570\u91cfsum\uff0c\u4ee5\u53ca'a'\u548c'c'\u7684\u6570\u91cf\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5728\u5f00\u59cb\u5904\u6dfb\u52a0'a'\uff0c\u5219\u5b50\u5e8f\u5217\u6570\u91cf=\u521d\u59cb\u5b50\u5e8f\u5217\u6570\u91cf+'c'\u7684\u6570\u91cf"),(0,a.kt)("li",{parentName:"ul"},"\u5728\u7ed3\u5c3e\u5904\u6dfb\u52a0'c'\uff0c\u5219\u5b50\u5e8f\u5217\u6570\u91cf=\u521d\u59cb\u5b50\u5e8f\u5217\u6570\u91cf+'a'\u7684\u6570\u91cf")),(0,a.kt)("p",null,"\u4e00\u6b21\u904d\u5386\u7684\u5199\u6cd5\uff0c\u6709\u5f88\u591a\u7ec6\u8282"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u9700\u8981\u4ece\u540e\u5f80\u524d\u904d\u5386"),(0,a.kt)("li",{parentName:"ul"},"for \u5faa\u73af\u91cc\u9762\uff0c\u4e0d\u53ef\u4ee5\u5199\u6210 if ... else if ...\uff0c\u56e0\u4e3a pattern \u4e2d\u4e24\u4e2a\u5b57\u7b26\u53ef\u80fd\u662f\u4e00\u6837\u7684"),(0,a.kt)("li",{parentName:"ul"},"\u9700\u8981\u5148\u5224\u65ad pattern","[0]","\uff0c\u518d\u5224\u65ad pattern","[1]","\uff0c\u4e5f\u662f\u56e0\u4e3a pattern \u4e2d\u4e24\u4e2a\u5b57\u7b26\u4e00\u81f4")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    long long maximumSubsequenceCount(string text, string pattern) {\n        long long first_cnt = 0;\n        long long second_cnt = 0;\n        long long sum = 0;\n        for (int i = text.size() - 1; i >= 0; i--) {\n            char c = text[i];\n            if (c == pattern[0]) {\n                first_cnt++;\n                sum += second_cnt;\n            }\n            if (c == pattern[1]) {\n                second_cnt++;\n            }\n        }\n        return sum + max(first_cnt, second_cnt);\n    }\n};\n")),(0,a.kt)("p",null,"\u6bd4\u8d5b\u65f6\u5019\u7684\u5199\u6cd5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    long long maximumSubsequenceCount(string text, string pattern) {\n        // \u524d\u7f00\u548c\n        // \u5148\u7b97\u51fa\u672c\u8eab\u6709\u591a\u5c11\u4e2a\uff0c\u5728\u7b97\u4e0b\u7531\u4e8e\u4ed6\u7684\u63d2\u5165\u589e\u52a0\u4e86\u591a\u5c11\uff08\u627e\u6700\u5927\u7684\uff09\n        int n = text.size();\n        long long org = 0;\n        vector<long long> presum1(n + 1);\n        vector<long long> sufsum2(n + 1);\n        for (int i = 0; i < n; i++) {\n            presum1[i+1] = presum1[i];\n            if (text[i] == pattern[0]) {\n                presum1[i+1]++;\n            }\n        }\n        for (int i = n-1; i >= 0; i--) {\n            sufsum2[i] = sufsum2[i+1];\n            if (text[i] == pattern[1]) {\n                sufsum2[i]++;\n            }\n        }\n        // for ( auto n : presum1) {\n        //     cout << n << " ";\n        // }\n        // cout << endl;\n        for (int i = 0; i< n ;i++) {\n            if (text[i] == pattern[0]) {\n                org += sufsum2[i+1];\n            }\n        }\n        // cout << org << endl;\n        // cout << max(presum1[n], sufsum2[0]) << endl;\n        \n        return org + max(presum1[n], sufsum2[0]);\n    }\n};\n')))}s.isMDXComponent=!0}}]);
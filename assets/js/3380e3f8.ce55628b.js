"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3994],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>g});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var a=r.createContext({}),p=function(n){var e=r.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},s=function(n){var e=p(n.components);return r.createElement(a.Provider,{value:e},n.children)},m="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,l=n.originalType,a=n.parentName,s=u(n,["components","mdxType","originalType","parentName"]),m=p(t),f=i,g=m["".concat(a,".").concat(f)]||m[f]||c[f]||l;return t?r.createElement(g,o(o({ref:e},s),{},{components:t})):r.createElement(g,o({ref:e},s))}));function g(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var l=t.length,o=new Array(l);o[0]=f;var u={};for(var a in e)hasOwnProperty.call(e,a)&&(u[a]=e[a]);u.originalType=n,u[m]="string"==typeof n?n:i,o[1]=u;for(var p=2;p<l;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},62583:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var r=t(87462),i=(t(67294),t(3905));const l={},o=void 0,u={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u53cc\u6307\u9488+\u6392\u5e8f>-\u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u53cc\u6307\u9488+\u6392\u5e8f>-\u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4",title:"<\u53cc\u6307\u9488+\u6392\u5e8f>-\u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4",description:"581. \u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/581-<\u53cc\u6307\u9488+\u6392\u5e8f>-\u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u53cc\u6307\u9488+\u6392\u5e8f>-\u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u53cc\u6307\u9488+\u6392\u5e8f>-\u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4",draft:!1,tags:[],version:"current",sidebarPosition:581,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u6307\u5411\u5404\u81ea\u96c6\u5408\u53cc\u6307\u9488>-\u901a\u8fc7\u5220\u9664\u5b57\u6bcd\u5339\u914d\u5230\u5b57\u5178\u91cc\u6700\u957f\u5355\u8bcd",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u6307\u5411\u5404\u81ea\u96c6\u5408\u53cc\u6307\u9488>-\u901a\u8fc7\u5220\u9664\u5b57\u6bcd\u5339\u914d\u5230\u5b57\u5178\u91cc\u6700\u957f\u5355\u8bcd"},next:{title:"<\u5de6\u53f3\u53cc\u6307\u9488>-\u5e73\u65b9\u6570\u4e4b\u548c",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u53cc\u6307\u9488/<\u5de6\u53f3\u53cc\u6307\u9488>-\u5e73\u65b9\u6570\u4e4b\u548c"}},a={},p=[{value:"\u65b9\u6cd5\u4e00\uff1a\u53cc\u6307\u9488 + \u6392\u5e8f",id:"\u65b9\u6cd5\u4e00\u53cc\u6307\u9488--\u6392\u5e8f",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u53cc\u6307\u9488 + \u7ebf\u6027\u626b\u63cf\uff08\u770b\u61c2\u4e86\uff0c\u4e0b\u6b21\u4e5f\u5199\u4e0d\u51fa\uff09",id:"\u65b9\u6cd5\u4e8c\u53cc\u6307\u9488--\u7ebf\u6027\u626b\u63cf\u770b\u61c2\u4e86\u4e0b\u6b21\u4e5f\u5199\u4e0d\u51fa",level:2}],s={toc:p};function m(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/shortest-unsorted-continuous-subarray/"},"581. \u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4")),(0,i.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," \uff0c\u4f60\u9700\u8981\u627e\u51fa\u4e00\u4e2a ",(0,i.kt)("strong",{parentName:"p"},"\u8fde\u7eed\u5b50\u6570\u7ec4")," \uff0c\u5982\u679c\u5bf9\u8fd9\u4e2a\u5b50\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u6574\u4e2a\u6570\u7ec4\u90fd\u4f1a\u53d8\u4e3a\u5347\u5e8f\u6392\u5e8f\u3002"),(0,i.kt)("p",null,"\u8bf7\u4f60\u627e\u51fa\u7b26\u5408\u9898\u610f\u7684 ",(0,i.kt)("strong",{parentName:"p"},"\u6700\u77ed")," \u5b50\u6570\u7ec4\uff0c\u5e76\u8f93\u51fa\u5b83\u7684\u957f\u5ea6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anums = [2,6,4,8,10,9,15]\n\u8f93\u51fa\uff1a5\n\u89e3\u91ca\uff1a\u4f60\u53ea\u9700\u8981\u5bf9 [6, 4, 8, 10, 9] \u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u6574\u4e2a\u8868\u90fd\u4f1a\u53d8\u4e3a\u5347\u5e8f\u6392\u5e8f\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1anums = [1,2,3,4]\n\u8f93\u51fa\uff1a0\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1anums = [1]\n\u8f93\u51fa\uff1a0\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 104")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-105 <= nums[i] <= 105"))),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u53cc\u6307\u9488--\u6392\u5e8f"},"\u65b9\u6cd5\u4e00\uff1a\u53cc\u6307\u9488 + \u6392\u5e8f"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(nlogn)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)"),"\uff0c\u56e0\u4e3a\u505a\u4e86\u4e00\u6b21\u62f7\u8d1d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    int findUnsortedSubarray(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> nums_copy = nums;\n        sort(nums_copy.begin(), nums_copy.end());\n        int left = 0;\n        int right = n - 1;\n        // \u8fd9\u79cd\u904d\u5386\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\uff0cleft \u8d70\u5230 right \u53f3\u8fb9\n        // \u5982\u679c left \u8d85\u8fc7\u53f3\u8fb9\u754c\u8df3\u51fa\n        while (left <= right && nums_copy[left] == nums[left]) {\n            left++;\n        }\n        // \u5982\u679c right \u8d85\u8fc7\u5de6\u8fb9\u754c\u8df3\u51fa\n        while (left <= right && nums_copy[right] == nums[right]) {\n            right--;\n        }\n        // cout << left << " " << right << endl;\n        // [left, right] length\n        // [2, 3]  2 \n        // [2, 2]  1 \n        // [2, 1]  0\n        return right - left + 1;\n    }\n};\n')),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u53cc\u6307\u9488--\u7ebf\u6027\u626b\u63cf\u770b\u61c2\u4e86\u4e0b\u6b21\u4e5f\u5199\u4e0d\u51fa"},"\u65b9\u6cd5\u4e8c\uff1a\u53cc\u6307\u9488 + \u7ebf\u6027\u626b\u63cf\uff08\u770b\u61c2\u4e86\uff0c\u4e0b\u6b21\u4e5f\u5199\u4e0d\u51fa\uff09"),(0,i.kt)("p",null,"\u53e6\u5916\u4e00\u4e2a\u505a\u6cd5\u662f\uff0c\u6211\u4eec\u628a\u6574\u4e2a\u6570\u7ec4\u5206\u6210\u4e09\u6bb5\u5904\u7406\u3002"),(0,i.kt)("p",null,"\u8d77\u59cb\u65f6\uff0c\u5148\u901a\u8fc7\u53cc\u6307\u9488 i \u548c j \u627e\u5230\u5de6\u53f3\u4e24\u6b21\u4fa7\u6ee1\u8db3 ",(0,i.kt)("strong",{parentName:"p"},"\u5355\u8c03\u9012\u589e")," \u7684\u5206\u5272\u70b9\u3002"),(0,i.kt)("p",null,"\u5373\u6b64\u65f6 ","[0, i]"," \u548c [j, n) \u6ee1\u8db3\u5347\u5e8f\u8981\u6c42\uff0c\u800c\u4e2d\u95f4\u90e8\u5206 (i, j) \u4e0d\u786e\u4fdd\u6709\u5e8f\u3002"),(0,i.kt)("p",null,"\u7136\u540e\u6211\u4eec\u5bf9\u4e2d\u95f4\u90e8\u5206 ","[left, right]"," \u8fdb\u884c\u904d\u5386\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u53d1\u73b0 nums","[x]"," < nums","[left - 1]","\uff1a\u7531\u4e8e\u5bf9 ","[left, right]"," \u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u540e nums","[x]"," \u4f1a\u51fa\u73b0\u5728 nums","[left - 1]"," \u540e\uff0c\u5c06\u4e0d\u6ee1\u8db3\u6574\u4f53\u5347\u5e8f\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u8c03\u6574\u5206\u5272\u70b9 i \u7684\u4f4d\u7f6e\uff1b"),(0,i.kt)("li",{parentName:"ul"},"\u53d1\u73b0 nums","[x]"," > nums","[j + 1]","\uff1a\u7531\u4e8e\u5bf9 ","[i, j]"," \u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u540e nums","[x]"," \u4f1a\u51fa\u73b0\u5728 nums","[j + 1]"," \u524d\uff0c\u5c06\u4e0d\u6ee1\u8db3\u6574\u4f53\u5347\u5e8f\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u8c03\u6574\u5206\u5272\u70b9 j \u7684\u4f4d\u7f6e\u3002")),(0,i.kt)("p",null,"\u4e00\u4e9b\u7ec6\u8282\uff1a\u5728\u8c03\u6574 i \u548c j \u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5230\u8fbe\u6570\u7ec4\u8fb9\u7f18\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u5efa\u7acb\u4e24\u4e2a\u54e8\u5175\uff1a\u6570\u7ec4\u5de6\u8fb9\u5b58\u5728\u4e00\u4e2a\u8db3\u591f\u5c0f\u7684\u6570\uff0c\u6570\u7ec4\u53f3\u8fb9\u5b58\u5728\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u6570\u3002"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(1)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    int findUnsortedSubarray(vector<int>& nums) {\n        int n = nums.size();\n\n        // \u901a\u8fc7\u53cc\u6307\u9488 i \u548c j \u627e\u5230\u5de6\u53f3\u4e24\u4fa7\u6ee1\u8db3 \u5355\u8c03\u9012\u589e \u7684\u5206\u5272\u70b9\u3002\n        // [0,i] \u548c [j,n) \u90fd\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u4e2d\u95f4\u90e8\u5206 (i,j) \u4e0d\u786e\u4fdd\u6709\u5e8f\n        int i = 0, j = n - 1;\n        while (i < n - 1 && nums[i] <= nums[i + 1]) {\n            i++;\n        }\n\n        // \u6570\u7ec4\u6709\u5e8f\n        if (i == n - 1) {\n            return 0;\n        }\n\n        while (j > 0 && nums[j] >= nums[j - 1]) {\n            j--;\n        }\n        cout << i << " " << j << endl;\n\n        // left = i, right = j , \u5bf9\u4e2d\u95f4\u90e8\u5206 [left, right] \u8fdb\u884c\u904d\u5386;left <= k <= right\n        // \u5bf9 nums[k](left <= k <= right) ,\u82e5 nums[k] < nums[i], i \u5411\u5de6\u8c03\u6574\u4e00\u4f4d\n        //  \u82e5 nums[k] > nums[j], j \u5411\u53f3\u8c03\u6574\u4e00\u4f4d\n        // \u6b64\u5904\uff0c\u4e0d\u80fd\u76f4\u63a5\u4ee4 left = i + 1, right = j - 1; \u56e0\u4e3a\u4f1a\u4e22\u6389\u7684[2,1]\u8fd9\u6837\u7684\u6d4b\u8bd5\u7528\u4f8b\u5904\u7406\u903b\u8f91\n        int left = i, right = j;\n        for (int k = left; k <= right; k++) {\n            while (i >= 0 && nums[k] < nums[i]) {  // \u8c03\u6574\u5206\u5272\u70b9 i\n                i--;\n            }\n\n            while (j <= n - 1 && nums[k] > nums[j]) {  // \u8c03\u6574\u5206\u5272\u70b9 j\n                j++;\n            }\n\n            if (i < 0 && j > n - 1) {\n                return n;\n            }\n        }\n        cout << i << " " << j << endl;\n\n        // [i + 1, j - 1] \u5c31\u662f\u6700\u77ed\u65e0\u5e8f\u8fde\u7eed\u5b50\u6570\u7ec4: len = (j - 1) - (i + 1) - 1;\n        return j - i - 1;\n    }\n};\n\n')))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9717],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>b});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function m(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var l=r.createContext({}),o=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):m(m({},e),n)),t},p=function(n){var e=o(n.components);return r.createElement(l.Provider,{value:e},n.children)},s="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,l=n.parentName,p=u(n,["components","mdxType","originalType","parentName"]),s=o(t),d=i,b=s["".concat(l,".").concat(d)]||s[d]||c[d]||a;return t?r.createElement(b,m(m({ref:e},p),{},{components:t})):r.createElement(b,m({ref:e},p))}));function b(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,m=new Array(a);m[0]=d;var u={};for(var l in e)hasOwnProperty.call(e,l)&&(u[l]=e[l]);u.originalType=n,u[s]="string"==typeof n?n:i,m[1]=u;for(var o=2;o<a;o++)m[o]=t[o];return r.createElement.apply(null,m)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},30898:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>m,default:()=>s,frontMatter:()=>a,metadata:()=>u,toc:()=>o});var r=t(87462),i=(t(67294),t(3905));const a={},m=void 0,u={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf",title:"<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf",description:"\u9898\u76ee\uff1a2349. \u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/2349-<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf",draft:!1,tags:[],version:"current",sidebarPosition:2349,frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u9762\u8bd5\u9898-01-09-<kmp>-\u5b57\u7b26\u4e32\u8f6e\u8f6c",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u7b26\u4e32/\u9762\u8bd5\u9898-01-09-<kmp>-\u5b57\u7b26\u4e32\u8f6e\u8f6c"},next:{title:"<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf"}},l={},o=[{value:"\u65b9\u6cd5\u4e00\uff1a\u5e73\u8861\u6811\uff08\u6709\u5e8f\u96c6\u5408\uff09",id:"\u65b9\u6cd5\u4e00\u5e73\u8861\u6811\u6709\u5e8f\u96c6\u5408",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u61d2\u5220\u9664\u5806",id:"\u65b9\u6cd5\u4e8c\u61d2\u5220\u9664\u5806",level:2}],p={toc:o};function s(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/design-a-number-container-system/"},"2349. \u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf")),(0,i.kt)("p",null,"\u8bbe\u8ba1\u4e00\u4e2a\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5728\u7cfb\u7edf\u4e2d\u7ed9\u5b9a\u4e0b\u6807\u5904 ",(0,i.kt)("strong",{parentName:"li"},"\u63d2\u5165")," \u6216\u8005 ",(0,i.kt)("strong",{parentName:"li"},"\u66ff\u6362")," \u4e00\u4e2a\u6570\u5b57\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"\u8fd4\u56de")," \u7cfb\u7edf\u4e2d\u7ed9\u5b9a\u6570\u5b57\u7684\u6700\u5c0f\u4e0b\u6807\u3002")),(0,i.kt)("p",null,"\u8bf7\u4f60\u5b9e\u73b0\u4e00\u4e2a NumberContainers \u7c7b\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"NumberContainers() \u521d\u59cb\u5316\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf\u3002"),(0,i.kt)("li",{parentName:"ul"},"void change(int index, int number) \u5728\u4e0b\u6807 index \u5904\u586b\u5165 number \u3002\u5982\u679c\u8be5\u4e0b\u6807 index \u5904\u5df2\u7ecf\u6709\u6570\u5b57\u4e86\uff0c\u90a3\u4e48\u7528 number \u66ff\u6362\u8be5\u6570\u5b57\u3002"),(0,i.kt)("li",{parentName:"ul"},"int find(int number) \u8fd4\u56de\u7ed9\u5b9a\u6570\u5b57 number \u5728\u7cfb\u7edf\u4e2d\u7684\u6700\u5c0f\u4e0b\u6807\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6ca1\u6709 number \uff0c\u90a3\u4e48\u8fd4\u56de -1 \u3002")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1a\n["NumberContainers", "find", "change", "change", "change", "change", "find", "change", "find"]\n[[], [10], [2, 10], [1, 10], [3, 10], [5, 10], [10], [1, 20], [10]]\n\u8f93\u51fa\uff1a\n[null, -1, null, null, null, null, 1, null, 2]\n\n\u89e3\u91ca\uff1a\nNumberContainers nc = new NumberContainers();\nnc.find(10); // \u6ca1\u6709\u6570\u5b57 10 \uff0c\u6240\u4ee5\u8fd4\u56de -1 \u3002\nnc.change(2, 10); // \u5bb9\u5668\u4e2d\u4e0b\u6807\u4e3a 2 \u5904\u586b\u5165\u6570\u5b57 10 \u3002\nnc.change(1, 10); // \u5bb9\u5668\u4e2d\u4e0b\u6807\u4e3a 1 \u5904\u586b\u5165\u6570\u5b57 10 \u3002\nnc.change(3, 10); // \u5bb9\u5668\u4e2d\u4e0b\u6807\u4e3a 3 \u5904\u586b\u5165\u6570\u5b57 10 \u3002\nnc.change(5, 10); // \u5bb9\u5668\u4e2d\u4e0b\u6807\u4e3a 5 \u5904\u586b\u5165\u6570\u5b57 10 \u3002\nnc.find(10); // \u6570\u5b57 10 \u6240\u5728\u7684\u4e0b\u6807\u4e3a 1 \uff0c2 \uff0c3 \u548c 5 \u3002\u56e0\u4e3a\u6700\u5c0f\u4e0b\u6807\u4e3a 1 \uff0c\u6240\u4ee5\u8fd4\u56de 1 \u3002\nnc.change(1, 20); // \u5bb9\u5668\u4e2d\u4e0b\u6807\u4e3a 1 \u5904\u586b\u5165\u6570\u5b57 20 \u3002\u6ce8\u610f\uff0c\u4e0b\u6807 1 \u5904\u4e4b\u524d\u4e3a 10 \uff0c\u73b0\u5728\u88ab\u66ff\u6362\u4e3a 20 \u3002\nnc.find(10); // \u6570\u5b57 10 \u6240\u5728\u4e0b\u6807\u4e3a 2 \uff0c3 \u548c 5 \u3002\u6700\u5c0f\u4e0b\u6807\u4e3a 2 \uff0c\u6240\u4ee5\u8fd4\u56de 2 \u3002\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= index, number <= 109")),(0,i.kt)("li",{parentName:"ul"},"\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"li"},"change")," \u548c ",(0,i.kt)("inlineCode",{parentName:"li"},"find")," \u7684 ",(0,i.kt)("strong",{parentName:"li"},"\u603b\u6b21\u6570")," \u4e0d\u8d85\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"li"},"105")," \u6b21\u3002")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u5e73\u8861\u6811\u6709\u5e8f\u96c6\u5408"},"\u65b9\u6cd5\u4e00\uff1a\u5e73\u8861\u6811\uff08\u6709\u5e8f\u96c6\u5408\uff09"),(0,i.kt)("p",null,"\u7531\u4e8e\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a",(0,i.kt)("strong",{parentName:"p"},"\u54c8\u5e0c\u8868")," m \u8bb0\u5f55\u6bcf\u4e2a\u4e0b\u6807\u5bf9\u5e94\u7684\u5143\u7d20\uff0c\u53e6\u4e00\u4e2a",(0,i.kt)("strong",{parentName:"p"},"\u54c8\u5e0c\u8868\u5957\u5e73\u8861\u6811")," ms \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u4e0b\u6807\u96c6\u5408\u3002"),(0,i.kt)("p",null,"\u5bf9\u4e8e change \u64cd\u4f5c\uff0c\u5982\u679c index \u5904\u5df2\u6709\u6570\u5b57\uff0c\u5219\u5148\u4ece ms[m","[index]","] \u4e2d\u5220\u6389 index\u3002\u7136\u540e\u5c06 index \u548c number \u8bb0\u5f55\u5230 m \u548c ms \u4e2d\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class NumberContainers {\npublic:\n    unordered_map<int, int> m;\n    unordered_map<int, set<int>> ms;\n\n    void change(int index, int number) {\n        auto it = m.find(index);  // \u901a\u8fc7\u67e5\u627e\u8fed\u4ee3\u5668\n        if (it == m.end()) {        // \u6ca1\u627e\u5230\n            m[index] = number;\n        } else {                          // \u627e\u5230\u4e86\uff0c\u66ff\u6362\n            ms[it->second].erase(index);  // \u79fb\u9664\u65e7\u6570\u636e\n            it->second = number;\n        }\n        ms[number].insert(index);\n    }\n\n    int find(int number) {\n        auto it = ms.find(number);\n        return it == ms.end() || it->second.empty() ? -1 : *it->second.begin();\n    }\n};\n\n/**\n * Your NumberContainers object will be instantiated and called as such:\n * NumberContainers* obj = new NumberContainers();\n * obj->change(index,number);\n * int param_2 = obj->find(number);\n */\n")),(0,i.kt)("p",null,"\u6bd4\u8d5b\u65f6\u5019\u7684\u5199\u6cd5\uff0c\u6548\u7387\u4f3c\u4e4e\u6bd4\u4e0a\u8ff0\u5199\u6cd5\u9ad8"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class NumberContainers {\npublic:\n    unordered_map<int, int> idx_num_map;\n    unordered_map<int, set<int>> num_idxs_map;\n    \n    NumberContainers() {\n    }\n    \n    void change(int index, int number) {\n        if (idx_num_map.count(index) == 0) { // \u65b0\u6dfb\u52a0num\n            idx_num_map[index] = number;\n            num_idxs_map[number].insert(index);\n        } else { // \u66f4\u65b0 num \u7684 idx\n            // 1. \u5220\u6389\u539f\u6765 idx \u4f4d\u7f6e\u4e0a\u7684 num\n            int pre = idx_num_map[index];\n            num_idxs_map[pre].erase(index);\n            if (num_idxs_map[pre].size() == 0) num_idxs_map.erase(pre);\n            // 2. idx \u4f4d\u7f6e\u4e0a\u586b\u4e0a\u65b0\u7684 num\n            idx_num_map[index] = number;\n            num_idxs_map[number].insert(index);\n        }\n    }\n    \n    int find(int number) {\n        if (num_idxs_map.count(number) == 0) return -1;\n        return *num_idxs_map[number].begin();\n    }\n};\n\n/**\n * Your NumberContainers object will be instantiated and called as such:\n * NumberContainers* obj = new NumberContainers();\n * obj->change(index,number);\n * int param_2 = obj->find(number);\n */\n")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u61d2\u5220\u9664\u5806"},"\u65b9\u6cd5\u4e8c\uff1a\u61d2\u5220\u9664\u5806"),(0,i.kt)("p",null,"\u53e6\u4e00\u79cd\u505a\u6cd5\u662f\u7528\u5806\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5bf9\u4e8e change \u64cd\u4f5c\uff0c\u76f4\u63a5\u5f80 ms \u4e2d\u8bb0\u5f55\uff0c\u4e0d\u505a\u4efb\u4f55\u5220\u9664\u64cd\u4f5c\uff1b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5bf9\u4e8e find \u64cd\u4f5c\uff0c\u67e5\u770b\u5806\u9876\u4e0b\u6807\u5bf9\u5e94\u7684\u5143\u7d20\u662f\u5426\u548c number \u76f8\u540c\uff0c\u82e5\u4e0d\u76f8\u540c\u5219\u610f\u5473\u7740\u5bf9\u5e94\u7684\u5143\u7d20\u5df2\u88ab\u66ff\u6362\u6210\u4e86\u5176\u4ed6\u503c\uff0c\u5806\u9876\u5b58\u7684\u662f\u4e2a\u5783\u573e\u6570\u636e\uff0c\u76f4\u63a5\u5f39\u51fa\u5806\u9876\uff1b\u5426\u5219\u5806\u9876\u5c31\u662f\u7b54\u6848\u3002"))),(0,i.kt)("p",null,"\u540c\u7b49\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u6548\u7387\u6700\u9ad8"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class NumberContainers {\npublic:\n    unordered_map<int, int> m;\n    unordered_map<int, priority_queue<int, vector<int>, greater<int>>> ms;\n\n    void change(int index, int number) {\n        m[index] = number;\n        ms[number].push(index);  // \u76f4\u63a5\u6dfb\u52a0\u65b0\u6570\u636e\uff0c\u540e\u9762 find \u518d\u5220\u9664\u65e7\u7684\n    }\n\n    int find(int number) {\n        if (ms.count(number) == 0) return -1;\n        priority_queue<int, vector<int>, greater<int>> &q = ms[number];\n        while (!q.empty() && m[q.top()] != number) {\n            q.pop();\n        }\n        return q.empty() ? -1 : q.top();\n    }\n};\n\n/**\n * Your NumberContainers object will be instantiated and called as such:\n * NumberContainers* obj = new NumberContainers();\n * obj->change(index,number);\n * int param_2 = obj->find(number);\n */\n")))}s.isMDXComponent=!0}}]);
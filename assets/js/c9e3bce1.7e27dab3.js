"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[80234],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,p(p({ref:t},c),{},{components:n})):r.createElement(f,p({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:a,p[1]=l;for(var s=2;s<o;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},94858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={},p=void 0,l={unversionedId:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u6240\u6709\u8def\u5f84>-\u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32",id:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u6240\u6709\u8def\u5f84>-\u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32",title:"<\u6240\u6709\u8def\u5f84>-\u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32",description:"\u9898\u76ee\uff1a988. \u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32",source:"@site/docs/Algorithm/6-\u7cfb\u5217\u9898\u76ee/06-\u6811\u7684\u8def\u5f84\u95ee\u9898/988-<\u6240\u6709\u8def\u5f84>-\u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32.md",sourceDirName:"Algorithm/6-\u7cfb\u5217\u9898\u76ee/06-\u6811\u7684\u8def\u5f84\u95ee\u9898",slug:"/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u6240\u6709\u8def\u5f84>-\u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u6240\u6709\u8def\u5f84>-\u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32",draft:!1,tags:[],version:"current",sidebarPosition:988,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u4efb\u610f\u8282\u70b9\u5230\u4efb\u610f\u8282\u70b9>-\u6700\u957f\u540c\u503c\u8def\u5f84",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u4efb\u610f\u8282\u70b9\u5230\u4efb\u610f\u8282\u70b9>-\u6700\u957f\u540c\u503c\u8def\u5f84"},next:{title:"\u9762\u8bd5\u9898-04-12-\u6c42\u548c\u8def\u5f84",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/\u9762\u8bd5\u9898-04-12-\u6c42\u548c\u8def\u5f84"}},i={},s=[{value:"\u65b9\u6cd5\uff1a\u56de\u6eaf",id:"\u65b9\u6cd5\u56de\u6eaf",level:2},{value:"\u65b9\u6cd5\uff1a\u9012\u5f52",id:"\u65b9\u6cd5\u9012\u5f52",level:2}],c={toc:s};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u9898\u76ee\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/smallest-string-starting-from-leaf/"},"988. \u4ece\u53f6\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u5c0f\u5b57\u7b26\u4e32")),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e00\u9897\u6839\u7ed3\u70b9\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," \u7684\u4e8c\u53c9\u6811\uff0c\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"[0, 25]")," \u8303\u56f4\u5185\u7684\u503c\uff0c\u5206\u522b\u4ee3\u8868\u5b57\u6bcd ",(0,a.kt)("inlineCode",{parentName:"p"},"'a'")," \u5230 ",(0,a.kt)("inlineCode",{parentName:"p"},"'z'"),"\u3002"),(0,a.kt)("p",null,"\u8fd4\u56de ",(0,a.kt)("strong",{parentName:"p"},"*\u6309\u5b57\u5178\u5e8f\u6700\u5c0f")," \u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u4ece\u8fd9\u68f5\u6811\u7684\u4e00\u4e2a\u53f6\u7ed3\u70b9\u5f00\u59cb\uff0c\u5230\u6839\u7ed3\u70b9\u7ed3\u675f*\u3002"),(0,a.kt)("p",null,"\u6ce8",(0,a.kt)("strong",{parentName:"p"},"\uff1a"),"\u5b57\u7b26\u4e32\u4e2d\u4efb\u4f55\u8f83\u77ed\u7684\u524d\u7f00\u5728 ",(0,a.kt)("strong",{parentName:"p"},"\u5b57\u5178\u5e8f\u4e0a")," \u90fd\u662f ",(0,a.kt)("strong",{parentName:"p"},"\u8f83\u5c0f")," \u7684\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4f8b\u5982\uff0c\u5728\u5b57\u5178\u5e8f\u4e0a ",(0,a.kt)("inlineCode",{parentName:"li"},'"ab"')," \u6bd4 ",(0,a.kt)("inlineCode",{parentName:"li"},'"aba"')," \u8981\u5c0f\u3002\u53f6\u7ed3\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u7ed3\u70b9\u7684\u7ed3\u70b9\u3002 ")),(0,a.kt)("p",null,"\u8282\u70b9\u7684\u53f6\u8282\u70b9\u662f\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:n(82657).Z,width:"534",height:"358"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1aroot = [0,1,2,3,4,3,4]\n\u8f93\u51fa\uff1a"dba"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:n(12139).Z,width:"534",height:"358"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1aroot = [25,1,3,1,3,0,2]\n\u8f93\u51fa\uff1a"adz"\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u56de\u6eaf"},"\u65b9\u6cd5\uff1a\u56de\u6eaf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<string> path_list;\n\n    void dfs(TreeNode* cur, string& path) {\n        if (!cur->left && !cur->right) {\n            string p = path; // \u91cd\u70b9\uff1a\u4e00\u5b9a\u8981\u91cd\u65b0\u590d\u5236\uff0c\u518d reverse\n            reverse(p.begin(), p.end()); // \u5426\u5219\u4e4b\u540e pop_back \u7684\u5c31\u4e0d\u662f\u961f\u5c3e\u4e86\n            path_list.push_back(p);\n            return;\n        }\n        if (cur->left) {\n            path += 'a' + cur->left->val;\n            dfs(cur->left, path);\n            path.pop_back();\n        }\n        if (cur->right) {\n            path += 'a' + cur->right->val;\n            dfs(cur->right, path);\n            path.pop_back();\n        }\n    }\n    string smallestFromLeaf(TreeNode* root) {\n        string path;\n        path += 'a' + root->val;\n        dfs(root, path);\n        // for (auto p : path_list) {\n        //     cout << p << endl;\n        // }\n        sort(path_list.begin(), path_list.end());\n        return path_list[0];\n    }\n};\n")),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u9012\u5f52"},"\u65b9\u6cd5\uff1a\u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<string> path_list;\n\n    void dfs(TreeNode* cur, string path) {\n        if (!cur) return;\n        path += 'a' + cur->val;\n        if (!cur->left && !cur->right) {\n            reverse(path.begin(), path.end());\n            path_list.push_back(path);\n            return;\n        }\n        dfs(cur->left, path);\n        dfs(cur->right, path);\n    }\n    string smallestFromLeaf(TreeNode* root) {\n        string path = \"\";\n        dfs(root, path);\n        sort(path_list.begin(), path_list.end());\n        return path_list[0];\n    }\n};\n")))}u.isMDXComponent=!0},82657:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/tree1-ce7d01da30b0ec27552c428bc4785934.png"},12139:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/tree2-8a87a029c2f87d32eefed702447ebe6e.png"}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[31146],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[u]="string"==typeof e?e:o,l[1]=p;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},17814:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={},l=void 0,p={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<dfs>-\u6c42\u6839\u5230\u53f6\u5b50\u8282\u70b9\u6570\u5b57\u4e4b\u548c",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<dfs>-\u6c42\u6839\u5230\u53f6\u5b50\u8282\u70b9\u6570\u5b57\u4e4b\u548c",title:"<dfs>-\u6c42\u6839\u5230\u53f6\u5b50\u8282\u70b9\u6570\u5b57\u4e4b\u548c",description:"129. \u6c42\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u6570\u5b57\u4e4b\u548c",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/129-<dfs>-\u6c42\u6839\u5230\u53f6\u5b50\u8282\u70b9\u6570\u5b57\u4e4b\u548c.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<dfs>-\u6c42\u6839\u5230\u53f6\u5b50\u8282\u70b9\u6570\u5b57\u4e4b\u548c",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<dfs>-\u6c42\u6839\u5230\u53f6\u5b50\u8282\u70b9\u6570\u5b57\u4e4b\u548c",draft:!1,tags:[],version:"current",sidebarPosition:129,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<bfs>-\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<bfs>-\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6"},next:{title:"<\u5c42\u5e8f\u904d\u5386>-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<\u5c42\u5e8f\u904d\u5386>-\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"}},i={},s=[],c={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/"},"129. \u6c42\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u6570\u5b57\u4e4b\u548c")),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root \uff0c\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u5b58\u653e\u6709\u4e00\u4e2a 0 \u5230 9 \u4e4b\u95f4\u7684\u6570\u5b57\u3002\n\u6bcf\u6761\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84\u90fd\u4ee3\u8868\u4e00\u4e2a\u6570\u5b57\uff1a"),(0,o.kt)("p",null,"\u4f8b\u5982\uff0c\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84 1 -> 2 -> 3 \u8868\u793a\u6570\u5b57 123 \u3002"),(0,o.kt)("p",null,"\u8ba1\u7b97\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u751f\u6210\u7684 ",(0,o.kt)("strong",{parentName:"p"},"\u6240\u6709\u6570\u5b57\u4e4b\u548c")," \u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u53f6\u8282\u70b9")," \u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/02/19/num1tree.jpg",alt:"img"})),(0,o.kt)("p",null,"\u8f93\u5165\uff1aroot = ","[1,2,3]","\n\u8f93\u51fa\uff1a25\n\u89e3\u91ca\uff1a\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 1->2 \u4ee3\u8868\u6570\u5b57 12\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 1->3 \u4ee3\u8868\u6570\u5b57 13\n\u56e0\u6b64\uff0c\u6570\u5b57\u603b\u548c = 12 + 13 = 25"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/02/19/num2tree.jpg",alt:"img"})),(0,o.kt)("p",null,"\u8f93\u5165\uff1aroot = ","[4,9,0,5,1]","\n\u8f93\u51fa\uff1a1026\n\u89e3\u91ca\uff1a\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 4->9->5 \u4ee3\u8868\u6570\u5b57 495\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 4->9->1 \u4ee3\u8868\u6570\u5b57 491\n\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 4->0 \u4ee3\u8868\u6570\u5b57 40\n\u56e0\u6b64\uff0c\u6570\u5b57\u603b\u548c = 495 + 491 + 40 = 1026"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6811\u4e2d\u8282\u70b9\u7684\u6570\u76ee\u5728\u8303\u56f4 ",(0,o.kt)("inlineCode",{parentName:"li"},"[1, 1000]")," \u5185"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0 <= Node.val <= 9")),(0,o.kt)("li",{parentName:"ul"},"\u6811\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"li"},"10"))),(0,o.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a0 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e86100.00%\u7684\u7528\u6237"),(0,o.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a8.9 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8689.88%\u7684\u7528\u6237"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int ans = 0;\n    void dfs(TreeNode* node, int path) {\n        // if (!node) return;\n        path = 10 * path + node->val;\n        if (!node->left && !node->right) {\n            cout << path << endl;\n            ans += path;\n            return;\n        }\n        if (node->left) dfs(node->left, path);\n        if (node->right) dfs(node->right, path);\n    }\n    int sumNumbers(TreeNode* root) {\n        if (!root) return 0;\n        dfs(root, 0);\n        return ans;\n    }\n};\n")))}u.isMDXComponent=!0}}]);
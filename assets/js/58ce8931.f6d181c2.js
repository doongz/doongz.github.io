"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[22171],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},u="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),u=p(n),f=a,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||o;return n?r.createElement(d,i(i({ref:e},c),{},{components:n})):r.createElement(d,i({ref:e},c))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[u]="string"==typeof t?t:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},57946:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={},i=void 0,s={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u56de\u6eaf>-\u5206\u5272\u56de\u6587\u4e32",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u56de\u6eaf>-\u5206\u5272\u56de\u6587\u4e32",title:"<\u56de\u6eaf>-\u5206\u5272\u56de\u6587\u4e32",description:"\u9898\u76ee\uff1a131. \u5206\u5272\u56de\u6587\u4e32",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS/131-<\u56de\u6eaf>-\u5206\u5272\u56de\u6587\u4e32.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u56de\u6eaf>-\u5206\u5272\u56de\u6587\u4e32",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u56de\u6eaf>-\u5206\u5272\u56de\u6587\u4e32",draft:!1,tags:[],version:"current",sidebarPosition:131,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740"},next:{title:"<\u91cd\u5efa\u56fe-dfs-bfs>-\u514b\u9686\u56fe",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u91cd\u5efa\u56fe-dfs-bfs>-\u514b\u9686\u56fe"}},l={},p=[],c={toc:p};function u(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u9898\u76ee\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/palindrome-partitioning/"},"131. \u5206\u5272\u56de\u6587\u4e32")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 ",(0,a.kt)("inlineCode",{parentName:"p"},"s"),"\uff0c\u8bf7\u4f60\u5c06 ",(0,a.kt)("inlineCode",{parentName:"p"},"s")," \u5206\u5272\u6210\u4e00\u4e9b\u5b50\u4e32\uff0c\u4f7f\u6bcf\u4e2a\u5b50\u4e32\u90fd\u662f ",(0,a.kt)("strong",{parentName:"p"},"\u56de\u6587\u4e32")," \u3002\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"s")," \u6240\u6709\u53ef\u80fd\u7684\u5206\u5272\u65b9\u6848\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u56de\u6587\u4e32")," \u662f\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u7684\u5b57\u7b26\u4e32\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1as = "aab"\n\u8f93\u51fa\uff1a[["a","a","b"],["aa","b"]]\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1as = "a"\n\u8f93\u51fa\uff1a[["a"]]\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= s.length <= 16")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s")," \u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210")),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int n;\n    string s;\n    vector<vector<string>> ans;\n\n    // \u4ece start \u5f00\u59cb\u622a\u53d6\n    void dfs(int start, vector<string> path) {\n        if (start == n) {\n            ans.push_back(path);\n            return;\n        }\n        for (int cnt = 1; start + cnt <= n; cnt++) {\n            string sub = s.substr(start, cnt);\n            if (isVaild(sub)) {\n                path.push_back(sub);\n                dfs(start + cnt, path);\n                path.pop_back();\n            }\n        }\n    }\n\n    // \u5224\u65ad\u662f\u5426\u56de\u6587\n    bool isVaild(string &sub) {\n        int start = 0;\n        int end = sub.size() - 1;\n        while (start < end) {\n            if (sub[start] != sub[end]) return false;\n            start++;\n            end--;\n        }\n        return true;\n    }\n\n    vector<vector<string>> partition(string _s) {\n        s = _s;\n        n = s.size();\n        dfs(0, {});\n\n        return ans;\n    }\n};\n")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[98812],{3905:(n,e,t)=>{t.d(e,{Zo:()=>m,kt:()=>k});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var u=r.createContext({}),p=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},m=function(n){var e=p(n.components);return r.createElement(u.Provider,{value:e},n.children)},s="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,l=n.originalType,u=n.parentName,m=o(n,["components","mdxType","originalType","parentName"]),s=p(t),f=i,k=s["".concat(u,".").concat(f)]||s[f]||c[f]||l;return t?r.createElement(k,a(a({ref:e},m),{},{components:t})):r.createElement(k,a({ref:e},m))}));function k(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var l=t.length,a=new Array(l);a[0]=f;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=n,o[s]="string"==typeof n?n:i,a[1]=o;for(var p=2;p<l;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},73437:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>a,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=t(87462),i=(t(67294),t(3905));const l={},a=void 0,o={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u91cd\u70b9\u9898-\u7ea2\u9ed1\u6811-\u5355\u8c03\u961f\u5217>-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u91cd\u70b9\u9898-\u7ea2\u9ed1\u6811-\u5355\u8c03\u961f\u5217>-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4",title:"<\u91cd\u70b9\u9898-\u7ea2\u9ed1\u6811-\u5355\u8c03\u961f\u5217>-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4",description:"1438. \u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/1438-<\u91cd\u70b9\u9898-\u7ea2\u9ed1\u6811-\u5355\u8c03\u961f\u5217>-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u91cd\u70b9\u9898-\u7ea2\u9ed1\u6811-\u5355\u8c03\u961f\u5217>-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u91cd\u70b9\u9898-\u7ea2\u9ed1\u6811-\u5355\u8c03\u961f\u5217>-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4",draft:!1,tags:[],version:"current",sidebarPosition:1438,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u9006\u5411\u601d\u7ef4\u6ed1\u7a97-\u524d\u540e\u7f00\u548c>-\u53ef\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u9006\u5411\u601d\u7ef4\u6ed1\u7a97-\u524d\u540e\u7f00\u548c>-\u53ef\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570"},next:{title:"<\u91cd\u70b9\u9898-\u6392\u5e8f+\u6ed1\u7a97+\u524d\u7f00\u548c\u601d\u60f3>-\u6700\u9ad8\u9891\u5143\u7d20\u7684\u9891\u6570",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u91cd\u70b9\u9898-\u6392\u5e8f+\u6ed1\u7a97+\u524d\u7f00\u548c\u601d\u60f3>-\u6700\u9ad8\u9891\u5143\u7d20\u7684\u9891\u6570"}},u={},p=[{value:"\u65b9\u6cd5\u4e00\uff1a\u7ea2\u9ed1\u6811",id:"\u65b9\u6cd5\u4e00\u7ea2\u9ed1\u6811",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u5355\u8c03\u961f\u5217",id:"\u65b9\u6cd5\u4e8c\u5355\u8c03\u961f\u5217",level:2}],m={toc:p};function s(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/"},"1438. \u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4")),(0,i.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," \uff0c\u548c\u4e00\u4e2a\u8868\u793a\u9650\u5236\u7684\u6574\u6570 ",(0,i.kt)("inlineCode",{parentName:"p"},"limit"),"\uff0c\u8bf7\u4f60\u8fd4\u56de\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u8be5\u5b50\u6570\u7ec4\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u7edd\u5bf9\u5dee\u5fc5\u987b\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e ",(0,i.kt)("inlineCode",{parentName:"p"},"limit")," ",(0,i.kt)("em",{parentName:"p"},"\u3002")),(0,i.kt)("p",null,"\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u5219\u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," \u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anums = [8,2,4,7], limit = 4\n\u8f93\u51fa\uff1a2 \n\u89e3\u91ca\uff1a\u6240\u6709\u5b50\u6570\u7ec4\u5982\u4e0b\uff1a\n[8] \u6700\u5927\u7edd\u5bf9\u5dee |8-8| = 0 <= 4.\n[8,2] \u6700\u5927\u7edd\u5bf9\u5dee |8-2| = 6 > 4. \n[8,2,4] \u6700\u5927\u7edd\u5bf9\u5dee |8-2| = 6 > 4.\n[8,2,4,7] \u6700\u5927\u7edd\u5bf9\u5dee |8-2| = 6 > 4.\n[2] \u6700\u5927\u7edd\u5bf9\u5dee |2-2| = 0 <= 4.\n[2,4] \u6700\u5927\u7edd\u5bf9\u5dee |2-4| = 2 <= 4.\n[2,4,7] \u6700\u5927\u7edd\u5bf9\u5dee |2-7| = 5 > 4.\n[4] \u6700\u5927\u7edd\u5bf9\u5dee |4-4| = 0 <= 4.\n[4,7] \u6700\u5927\u7edd\u5bf9\u5dee |4-7| = 3 <= 4.\n[7] \u6700\u5927\u7edd\u5bf9\u5dee |7-7| = 0 <= 4. \n\u56e0\u6b64\uff0c\u6ee1\u8db3\u9898\u610f\u7684\u6700\u957f\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a 2 \u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1anums = [10,1,2,4,7,2], limit = 5\n\u8f93\u51fa\uff1a4 \n\u89e3\u91ca\uff1a\u6ee1\u8db3\u9898\u610f\u7684\u6700\u957f\u5b50\u6570\u7ec4\u662f [2,4,7,2]\uff0c\u5176\u6700\u5927\u7edd\u5bf9\u5dee |2-7| = 5 <= 5 \u3002\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1anums = [4,2,2,2,4,4,2,2], limit = 0\n\u8f93\u51fa\uff1a3\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 10^5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= nums[i] <= 10^9")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0 <= limit <= 10^9"))),(0,i.kt)("hr",null),(0,i.kt)("p",null,"\u5982\u4f55\u5bf9\u7a97\u53e3\u9650\u5236\uff1a\u7a97\u53e3\u5185\u6700\u5927\u6700\u5c0f\u503c\u7684\u5dee\u7684\u7edd\u5bf9\u503c <= limit"),(0,i.kt)("p",null,"\u9700\u8981\u5feb\u901f\u7684\u5bf9\u6307\u5b9a\u503c\u8fdb\u884c\u64cd\u4f5c"),(0,i.kt)("p",null,"\u56e0\u6b64\u6709\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u4f7f\u7528\uff0c\u7ea2\u9ed1\u6811\uff0c\u5355\u8c03\u961f\u5217"),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u7ea2\u9ed1\u6811"},"\u65b9\u6cd5\u4e00\uff1a\u7ea2\u9ed1\u6811"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(nlogn)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums, int limit) {\n        int left = 0;\n        int right = 0;\n        multiset<int> window;\n        int ans = 0;\n\n        while (right < nums.size()) {\n            window.insert(nums[right]);\n            while (abs(*window.begin() - *window.rbegin()) > limit) {\n                window.erase(window.find(nums[left]));\n                left++;\n            }\n            ans = max(ans, right - left + 1);\n            right++;\n        }\n        return ans;\n    }\n};\n")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u5355\u8c03\u961f\u5217"},"\u65b9\u6cd5\u4e8c\uff1a\u5355\u8c03\u961f\u5217"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u83b7\u53d6\u6700\u5c0f\u503c\uff0c\u4f7f\u7528\u300c\u5355\u589e\u961f\u5217\u300d")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u4e0e\u300c\u961f\u5c3e\u300d\u5143\u7d20\u76f8\u6bd4\u8f83\uff0c\u6bd4\u5143\u7d20\u503c\u5927\u7684\u503c\u53bb\u6389\uff0c\u7136\u540e\u5728\u300c\u961f\u5c3e\u300d\u6dfb\u52a0\u5143\u7d20\u3002\u300c\u961f\u9996\u300d\u53ef\u83b7\u53d6\u5230\u6700\u5c0f\u503c"),(0,i.kt)("li",{parentName:"ul"},"\u5220\u9664\u5143\u7d20\u65f6\uff0c\u4e0e\u300c\u961f\u9996\u300d\u5143\u7d20\u76f8\u6bd4\u8f83\uff0c\u4e0e\u300c\u961f\u9996\u300d\u5143\u7d20\u76f8\u7b49\u65f6\u5220\u9664")),(0,i.kt)("p",null,"\u4f8b\u5982 1 2 3\uff0c\u5f80\u91cc\u9762\u6dfb\u52a0 2\uff0c\u5148\u53bb\u6389 3\uff0c\u518d\u6dfb\u52a0 2\uff0c\u6700\u540e\u4e3a 1 2 2"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u83b7\u53d6\u6700\u5927\u503c\uff0c\u4f7f\u7528\u300c\u5355\u51cf\u961f\u5217\u300d")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u4e0e\u300c\u961f\u5c3e\u300d\u5143\u7d20\u76f8\u6bd4\u8f83\uff0c\u6bd4\u5143\u7d20\u503c\u5c0f\u7684\u503c\u53bb\u6389\uff0c\u7136\u540e\u5728\u300c\u961f\u5c3e\u300d\u6dfb\u52a0\u5143\u7d20\u3002\u300c\u961f\u9996\u300d\u53ef\u83b7\u53d6\u5230\u6700\u5927\u503c"),(0,i.kt)("li",{parentName:"ul"},"\u5220\u9664\u5143\u7d20\u65f6\uff0c\u4e0e\u300c\u961f\u9996\u300d\u5143\u7d20\u76f8\u6bd4\u8f83\uff0c\u4e0e\u300c\u961f\u9996\u300d\u5143\u7d20\u76f8\u7b49\u65f6\u5220\u9664")),(0,i.kt)("p",null,"\u4f8b\u5982 3 2 1\uff0c\u5f80\u91cc\u9762\u6dfb\u52a0 2\uff0c\u5148\u53bb\u6389 1\uff0c\u518d\u6dfb\u52a0 2\uff0c\u6700\u540e\u4e3a 3 2 2"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums, int limit) {\n        int left = 0;\n        int right = 0;\n        int ans = 0;\n        deque<int> min_que;\n        deque<int> max_que;\n\n        while (right < nums.size()) {\n            // \u53f3\u8fb9\u754c\u5165\u7a97\n            while (!min_que.empty() && min_que.back() > nums[right]) {\n                min_que.pop_back();\n            }\n            min_que.push_back(nums[right]);\n            while (!max_que.empty() && max_que.back() < nums[right]) {\n                max_que.pop_back();\n            }\n            max_que.push_back(nums[right]);\n            // \u5de6\u8fb9\u754c\u6536\u7f29\n            while (!min_que.empty() && !max_que.empty() && abs(max_que.front() - min_que.front()) > limit) {\n                if (nums[left] == min_que.front()) {\n                    min_que.pop_front();\n                }\n                if (nums[left] == max_que.front()) {\n                    max_que.pop_front();\n                }\n                left++;\n            }\n            ans = max(ans, right - left + 1);\n            right++;\n        }\n        return ans;\n    }\n};\n")))}s.isMDXComponent=!0}}]);
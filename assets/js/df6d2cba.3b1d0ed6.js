"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[20529],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>f});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?t.createElement(f,i(i({ref:n},s),{},{components:r})):t.createElement(f,i({ref:n},s))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},21141:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var t=r(87462),o=(r(67294),r(3905));const a={},i=void 0,l={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u591a\u8f6e\u56de\u6eaf>-\u5355\u8bcd\u641c\u7d22",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u591a\u8f6e\u56de\u6eaf>-\u5355\u8bcd\u641c\u7d22",title:"<\u591a\u8f6e\u56de\u6eaf>-\u5355\u8bcd\u641c\u7d22",description:"\u9898\u76ee\uff1a79. \u5355\u8bcd\u641c\u7d22",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS/79-<\u591a\u8f6e\u56de\u6eaf>-\u5355\u8bcd\u641c\u7d22.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u591a\u8f6e\u56de\u6eaf>-\u5355\u8bcd\u641c\u7d22",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u591a\u8f6e\u56de\u6eaf>-\u5355\u8bcd\u641c\u7d22",draft:!1,tags:[],version:"current",sidebarPosition:79,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u52a8\u6001\u66f4\u65b0\u56de\u6eaf\u5934>-\u7ec4\u5408",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u52a8\u6001\u66f4\u65b0\u56de\u6eaf\u5934>-\u7ec4\u5408"},next:{title:"<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740"}},c={},p=[{value:"\u591a\u8f6e\u56de\u6eaf",id:"\u591a\u8f6e\u56de\u6eaf",level:2}],s={toc:p};function d(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/word-search/"},"79. \u5355\u8bcd\u641c\u7d22")),(0,o.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"m x n")," \u4e8c\u7ef4\u5b57\u7b26\u7f51\u683c ",(0,o.kt)("inlineCode",{parentName:"p"},"board")," \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5355\u8bcd ",(0,o.kt)("inlineCode",{parentName:"p"},"word")," \u3002\u5982\u679c ",(0,o.kt)("inlineCode",{parentName:"p"},"word")," \u5b58\u5728\u4e8e\u7f51\u683c\u4e2d\uff0c\u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," \uff1b\u5426\u5219\uff0c\u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," \u3002"),(0,o.kt)("p",null,"\u5355\u8bcd\u5fc5\u987b\u6309\u7167\u5b57\u6bcd\u987a\u5e8f\uff0c\u901a\u8fc7\u76f8\u90bb\u7684\u5355\u5143\u683c\u5185\u7684\u5b57\u6bcd\u6784\u6210\uff0c\u5176\u4e2d\u201c\u76f8\u90bb\u201d\u5355\u5143\u683c\u662f\u90a3\u4e9b\u6c34\u5e73\u76f8\u90bb\u6216\u5782\u76f4\u76f8\u90bb\u7684\u5355\u5143\u683c\u3002\u540c\u4e00\u4e2a\u5355\u5143\u683c\u5185\u7684\u5b57\u6bcd\u4e0d\u5141\u8bb8\u88ab\u91cd\u590d\u4f7f\u7528\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1aboard = [["A","B","C","E"],["S","F","C","S"],["A","D","E","E"]], word = "ABCCED"\n\u8f93\u51fa\uff1atrue\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/11/04/word-1.jpg",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1aboard = [["A","B","C","E"],["S","F","C","S"],["A","D","E","E"]], word = "SEE"\n\u8f93\u51fa\uff1atrue\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 3\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/10/15/word3.jpg",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1aboard = [["A","B","C","E"],["S","F","C","S"],["A","D","E","E"]], word = "ABCB"\n\u8f93\u51fa\uff1afalse\n')),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("p",null,"m == board.length\nn = board","[i]",".length\n1 <= m, n <= 6\n1 <= word.length <= 15\nboard \u548c word \u4ec5\u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u8fdb\u9636\uff1a"),"\u4f60\u53ef\u4ee5\u4f7f\u7528\u641c\u7d22\u526a\u679d\u7684\u6280\u672f\u6765\u4f18\u5316\u89e3\u51b3\u65b9\u6848\uff0c\u4f7f\u5176\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"board")," \u66f4\u5927\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u66f4\u5feb\u89e3\u51b3\u95ee\u9898\uff1f"),(0,o.kt)("h2",{id:"\u591a\u8f6e\u56de\u6eaf"},"\u591a\u8f6e\u56de\u6eaf"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int n;\n    int rows, cols;\n    string word;\n    vector<vector<char>> board;\n    pair<int, int> direction[4] = {{0, 1}, {1, 0}, {-1, 0}, {0, -1}};\n    int vis[36];\n\n    // \u5df2\u7ecf\u5b8c\u6210\u8003\u5bdf word \u7684\u7b2c cur \u4f4d\n    bool dfs(int r, int c, int cur) {\n        if (cur == n - 1) {\n            return true;\n        }\n\n        for (auto& [dr, dc] : direction) {\n            int nr = r + dr;\n            int nc = c + dc;\n            int idx = nr * cols + nc;\n\n            if (nr < 0 || nr >= rows || nc < 0 || nc >= cols) continue;  // \u51fa\u754c\n            if (vis[idx]) continue;                                      // \u8d70\u8fc7\n            if (board[nr][nc] != word[cur + 1]) continue;                // \u5b57\u7b26\u4e0d\u4e00\u6837\n\n            vis[idx] = 1;\n            if (dfs(nr, nc, cur + 1)) return true;\n            vis[idx] = 0;\n        }\n\n        return false;\n    }\n    bool exist(vector<vector<char>>& _board, string _word) {\n        word = _word;\n        board = _board;\n        n = word.size();\n        rows = board.size();\n        cols = board[0].size();\n\n        for (int r = 0; r < rows; r++) {\n            for (int c = 0; c < cols; c++) {\n                if (board[r][c] != word[0]) continue;\n                memset(vis, 0, sizeof(int) * 36);\n                vis[r * cols + c] = 1;\n                if (dfs(r, c, 0)) return true;\n            }\n        }\n\n        return false;\n    }\n};\n")))}d.isMDXComponent=!0}}]);
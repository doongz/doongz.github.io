"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[94849],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),f=a,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||o;return t?r.createElement(d,i(i({ref:n},s),{},{components:t})):r.createElement(d,i({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},98313:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const o={},i=void 0,l={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u751f\u6210>-\u87ba\u65cb\u77e9\u9635II",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u751f\u6210>-\u87ba\u65cb\u77e9\u9635II",title:"<\u987a\u65f6\u9488\u751f\u6210>-\u87ba\u65cb\u77e9\u9635II",description:"\u9898\u76ee\uff1a59. \u87ba\u65cb\u77e9\u9635 II",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/59-<\u987a\u65f6\u9488\u751f\u6210>-\u87ba\u65cb\u77e9\u9635II.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u751f\u6210>-\u87ba\u65cb\u77e9\u9635II",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u987a\u65f6\u9488\u751f\u6210>-\u87ba\u65cb\u77e9\u9635II",draft:!1,tags:[],version:"current",sidebarPosition:59,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u4e09\u4e2awhile>-\u63d2\u5165\u533a\u95f4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u4e09\u4e2awhile>-\u63d2\u5165\u533a\u95f4"},next:{title:"<\u4e0d\u7528\u7684\u5730\u65b9\u505a\u6807\u8bb0\u4f4d>-\u77e9\u9635\u7f6e\u96f6",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/<\u4e0d\u7528\u7684\u5730\u65b9\u505a\u6807\u8bb0\u4f4d>-\u77e9\u9635\u7f6e\u96f6"}},p={},c=[],s={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u9898\u76ee\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/spiral-matrix-ii/"},"59. \u87ba\u65cb\u77e9\u9635 II")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," \uff0c\u751f\u6210\u4e00\u4e2a\u5305\u542b ",(0,a.kt)("inlineCode",{parentName:"p"},"1")," \u5230 ",(0,a.kt)("inlineCode",{parentName:"p"},"n^2")," \u6240\u6709\u5143\u7d20\uff0c\u4e14\u5143\u7d20\u6309\u987a\u65f6\u9488\u987a\u5e8f\u87ba\u65cb\u6392\u5217\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"n x n")," \u6b63\u65b9\u5f62\u77e9\u9635 ",(0,a.kt)("inlineCode",{parentName:"p"},"matrix")," \u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg",alt:"img"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1an = 3\n\u8f93\u51fa\uff1a[[1,2,3],[8,9,4],[7,6,5]]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1an = 1\n\u8f93\u51fa\uff1a[[1]]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= n <= 20"))),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def generateMatrix(self, n: int) -> List[List[int]]:\n        ans = [[0 for _ in range(n)] for _ in range(n)]\n        l = 0\n        r = n - 1\n        t = 0\n        b = n - 1\n\n        val = 1\n        while True:\n            # left to right\n            for i in range(l, r+1):\n                ans[t][i] = val\n                val += 1\n            t += 1\n            if t > b: break\n\n            # top to bottom\n            for i in range(t, b+1):\n                ans[i][r] = val\n                val += 1\n            r -= 1\n            if l > r: break\n\n            # right to left\n            for i in range(r, l-1, -1):\n                ans[b][i] = val\n                val += 1\n            b -= 1\n            if t > b: break\n\n            # bottom to top\n            for i in range(b, t-1, -1):\n                ans[i][l] = val\n                val += 1\n            l += 1\n            if l > r: break\n\n        return ans\n")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[95058],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,k=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return t?r.createElement(k,l(l({ref:n},u),{},{components:t})):r.createElement(k,l({ref:n},u))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},10061:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const o={},l=void 0,i={unversionedId:"Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/<\u73af\u72b6\u66ff\u6362>-\u8f6e\u8f6c\u6570\u7ec4",id:"Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/<\u73af\u72b6\u66ff\u6362>-\u8f6e\u8f6c\u6570\u7ec4",title:"<\u73af\u72b6\u66ff\u6362>-\u8f6e\u8f6c\u6570\u7ec4",description:"189. \u8f6e\u8f6c\u6570\u7ec4",source:"@site/docs/Algorithm/5-\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/189-<\u73af\u72b6\u66ff\u6362>-\u8f6e\u8f6c\u6570\u7ec4.md",sourceDirName:"Algorithm/5-\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97",slug:"/Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/<\u73af\u72b6\u66ff\u6362>-\u8f6e\u8f6c\u6570\u7ec4",permalink:"/docs/Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/<\u73af\u72b6\u66ff\u6362>-\u8f6e\u8f6c\u6570\u7ec4",draft:!1,tags:[],version:"current",sidebarPosition:189,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u52a8\u89c4&\u5feb\u901f\u5e42&\u901a\u9879\u5f0f>-\u722c\u697c\u68af",permalink:"/docs/Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/<\u52a8\u89c4&\u5feb\u901f\u5e42&\u901a\u9879\u5f0f>-\u722c\u697c\u68af"},next:{title:"<\u9ad8\u65af\u6c42\u548c>-\u4e22\u5931\u7684\u6570\u5b57",permalink:"/docs/Algorithm/\u6570\u5b66/\u4f8b\u9898-\u6570\u5b66\u8fd0\u7b97/<\u9ad8\u65af\u6c42\u548c>-\u4e22\u5931\u7684\u6570\u5b57"}},p={},s=[{value:"189. \u8f6e\u8f6c\u6570\u7ec4",id:"189-\u8f6e\u8f6c\u6570\u7ec4",level:4},{value:"\u65b9\u6cd5\u4e00\uff1a\u73af\u72b6\u66ff\u6362",id:"\u65b9\u6cd5\u4e00\u73af\u72b6\u66ff\u6362",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4",id:"\u65b9\u6cd5\u4e8c\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4",level:2}],u={toc:s};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"189-\u8f6e\u8f6c\u6570\u7ec4"},(0,a.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/rotate-array/"},"189. \u8f6e\u8f6c\u6570\u7ec4")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/rotate-array/solution/xuan-zhuan-shu-zu-by-leetcode-solution-nipk/"},"\u9898\u89e3")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u8f6e\u8f6c ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," \u4e2a\u4f4d\u7f6e\uff0c\u5176\u4e2d ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," \u662f\u975e\u8d1f\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1:\n\n\u8f93\u5165: nums = [1,2,3,4,5,6,7], k = 3\n\u8f93\u51fa: [5,6,7,1,2,3,4]\n\u89e3\u91ca:\n\u5411\u53f3\u8f6e\u8f6c 1 \u6b65: [7,1,2,3,4,5,6]\n\u5411\u53f3\u8f6e\u8f6c 2 \u6b65: [6,7,1,2,3,4,5]\n\u5411\u53f3\u8f6e\u8f6c 3 \u6b65: [5,6,7,1,2,3,4]\n\n\u793a\u4f8b\xa02:\n\n\u8f93\u5165\uff1anums = [-1,-100,3,99], k = 2\n\u8f93\u51fa\uff1a[3,99,-1,-100]\n\u89e3\u91ca: \n\u5411\u53f3\u8f6e\u8f6c 1 \u6b65: [99,-1,-100,3]\n\u5411\u53f3\u8f6e\u8f6c 2 \u6b65: [3,99,-1,-100]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 105")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-231 <= nums[i] <= 231 - 1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"0 <= k <= 105"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u8fdb\u9636\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5c3d\u53ef\u80fd\u60f3\u51fa\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u81f3\u5c11\u6709 ",(0,a.kt)("strong",{parentName:"li"},"\u4e09\u79cd")," \u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u4f60\u53ef\u4ee5\u4f7f\u7528\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,a.kt)("inlineCode",{parentName:"li"},"O(1)")," \u7684 ",(0,a.kt)("strong",{parentName:"li"},"\u539f\u5730")," \u7b97\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f")),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u73af\u72b6\u66ff\u6362"},"\u65b9\u6cd5\u4e00\uff1a\u73af\u72b6\u66ff\u6362"),(0,a.kt)("p",null,"\u6211\u4eec\u4ece\u4f4d\u7f6e 0 \u5f00\u59cb\uff0c\u6700\u521d\u4ee4 temp=nums","[0]","\u3002\u6839\u636e\u89c4\u5219\uff0c\u4f4d\u7f6e 0 \u7684\u5143\u7d20\u4f1a\u653e\u81f3 (0+k)modn \u7684\u4f4d\u7f6e\uff0c\u4ee4 x=(0+k)modn\uff0c\u6b64\u65f6\u4ea4\u6362 temp \u548c nums","[x]","\uff0c\u5b8c\u6210\u4f4d\u7f6e x \u7684\u66f4\u65b0\u3002\u7136\u540e\uff0c\u6211\u4eec\u8003\u5bdf\u4f4d\u7f6e x\uff0c\u5e76\u4ea4\u6362 temp \u548c nums","[(x+k)modn]","\uff0c\u4ece\u800c\u5b8c\u6210\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u66f4\u65b0\u3002\u4e0d\u65ad\u8fdb\u884c\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u81f3\u56de\u5230\u521d\u59cb\u4f4d\u7f6e0\u3002"),(0,a.kt)("p",null,"\u5bb9\u6613\u53d1\u73b0\uff0c\u5f53\u56de\u5230\u521d\u59cb\u4f4d\u7f6e 0 \u65f6\uff0c\u6709\u4e9b\u6570\u5b57\u53ef\u80fd\u8fd8\u6ca1\u6709\u904d\u5386\u5230\uff0c\u6b64\u65f6\u6211\u4eec\u5e94\u8be5\u4ece\u4e0b\u4e00\u4e2a\u6570\u5b57\u5f00\u59cb\u91cd\u590d\u7684\u8fc7\u7a0b\uff0c\u53ef\u662f\u8fd9\u4e2a\u65f6\u5019\u600e\u4e48\u624d\u7b97\u904d\u5386\u7ed3\u675f\u5462\uff1f",(0,a.kt)("strong",{parentName:"p"},"\u8fdb\u884c\u904d\u5386\u7684\u6b21\u6570\u4e3a n k \u7684\u6700\u5927\u516c\u7ea6\u6570")),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)  \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def rotate(self, nums: List[int], k: int) -> None:\n        """\n        Do not return anything, modify nums in-place instead.\n        """\n        sz = len(nums)\n        k = k % sz\n        count = self.gcd(k, sz)\n\n        start = 0\n        while start < count:\n            cur = start\n            prev = nums[start]\n\n            while True:\n                next = (cur + k) % sz\n                nums[next], prev = prev, nums[next]\n                cur = next\n                if start == cur:\n                    break\n            start += 1\n\n    def gcd(self, a, b):\n        # \u6700\u5927\u516c\u7ea6\u6570\n        while a != 0:\n            a, b = b%a, a\n        return b\n')),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4"},"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4"),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)  \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def rotate(self, nums: List[int], k: int) -> None:\n        """\n        Do not return anything, modify nums in-place instead.\n        """\n        sz = len(nums)\n        step = k % sz\n        # print(step)\n        tmp = []\n        for i in range(sz):\n            new_idx = (i + step) % sz\n            # print(new_idx, nums[i])\n            tmp.append((new_idx, nums[i]))\n        for t in tmp:\n            nums[t[0]] = t[1]\n\n')))}m.isMDXComponent=!0}}]);
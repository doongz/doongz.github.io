"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[72209],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>v});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(t),d=i,v=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return t?r.createElement(v,l(l({ref:n},s),{},{components:t})):r.createElement(v,l({ref:n},s))}));function v(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},95101:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=t(87462),i=(t(67294),t(3905));const a={},l=void 0,o={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u65e0\u91cd\u53e0\u533a\u95f4",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u65e0\u91cd\u53e0\u533a\u95f4",title:"<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u65e0\u91cd\u53e0\u533a\u95f4",description:"435. \u65e0\u91cd\u53e0\u533a\u95f4",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/435-<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u65e0\u91cd\u53e0\u533a\u95f4.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u65e0\u91cd\u53e0\u533a\u95f4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u65e0\u91cd\u53e0\u533a\u95f4",draft:!1,tags:[],version:"current",sidebarPosition:435,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u6392\u5e8f\u9884\u5904\u7406+\u8d2a\u5fc3>-\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u6392\u5e8f\u9884\u5904\u7406+\u8d2a\u5fc3>-\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217"},next:{title:"<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403"}},p={},c=[{value:"\u65b9\u6cd5\uff1a\u533a\u95f4\u8c03\u5ea6\u95ee\u9898\uff08\u6392\u5e8f+\u8d2a\u5fc3\uff09",id:"\u65b9\u6cd5\u533a\u95f4\u8c03\u5ea6\u95ee\u9898\u6392\u5e8f\u8d2a\u5fc3",level:2}],s={toc:c};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/non-overlapping-intervals/"},"435. \u65e0\u91cd\u53e0\u533a\u95f4")),(0,i.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4\u7684\u96c6\u5408 ",(0,i.kt)("inlineCode",{parentName:"p"},"intervals")," \uff0c\u5176\u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"intervals[i] = [starti, endi]")," \u3002\u8fd4\u56de ",(0,i.kt)("em",{parentName:"p"},"\u9700\u8981\u79fb\u9664\u533a\u95f4\u7684\u6700\u5c0f\u6570\u91cf\uff0c\u4f7f\u5269\u4f59\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0")," \u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1:\n\n\u8f93\u5165: intervals = [[1,2],[2,3],[3,4],[1,3]]\n\u8f93\u51fa: 1\n\u89e3\u91ca: \u79fb\u9664 [1,3] \u540e\uff0c\u5269\u4e0b\u7684\u533a\u95f4\u6ca1\u6709\u91cd\u53e0\u3002\n\n\u793a\u4f8b 2:\n\n\u8f93\u5165: intervals = [ [1,2], [1,2], [1,2] ]\n\u8f93\u51fa: 2\n\u89e3\u91ca: \u4f60\u9700\u8981\u79fb\u9664\u4e24\u4e2a [1,2] \u6765\u4f7f\u5269\u4e0b\u7684\u533a\u95f4\u6ca1\u6709\u91cd\u53e0\u3002\n\n\u793a\u4f8b 3:\n\n\u8f93\u5165: intervals = [ [1,2], [2,3] ]\n\u8f93\u51fa: 0\n\u89e3\u91ca: \u4f60\u4e0d\u9700\u8981\u79fb\u9664\u4efb\u4f55\u533a\u95f4\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u662f\u65e0\u91cd\u53e0\u7684\u4e86\u3002\n\n")),(0,i.kt)("p",null,"\u63d0\u793a:"),(0,i.kt)("p",null,"1 <= intervals.length <= 105\nintervals","[i]",".length == 2\n-5 ",(0,i.kt)("em",{parentName:"p"}," 104 <= starti < endi <= 5 ")," 104"),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u533a\u95f4\u8c03\u5ea6\u95ee\u9898\u6392\u5e8f\u8d2a\u5fc3"},"\u65b9\u6cd5\uff1a\u533a\u95f4\u8c03\u5ea6\u95ee\u9898\uff08\u6392\u5e8f+\u8d2a\u5fc3\uff09"),(0,i.kt)("p",null,"\u601d\u8def\uff1a\u79fb\u9664\u7a7a\u95f4\u6700\u5c11\uff0c\u610f\u5473\u7740\u5269\u4f59\u533a\u95f4\u6700\u591a"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6570\u636e\u9884\u5904\u7406\uff1a\u6309\u7167\u533a\u95f4\u300c\u5c3e\u8282\u70b9\u300d\u4ece\u5c0f\u5230\u5927\u6392\u5e8f")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u8d2a\u5fc3\uff1a\u5047\u5b9a\u524d\u9762\u7684\u533a\u95f4\u90fd\u7edf\u8ba1\u8fc7\uff0c\u8003\u8651\u4e0b\u9762\u7684\u60c5\u51b5\uff0c\u90fd\u662f\u5c3e\u8282\u70b9\u518d\u524d\u9762\u7684\u4f18\u5148\u5e94\u88ab\u9009\u62e9\uff0c\u4ee5\u6b64\u7ed9\u540e\u9762\u7684\u533a\u95f4\u7559\u591f\u5145\u8db3\u7684\u7a7a\u95f4")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"   \uff5c\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n\uff5c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n\n\uff5c\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n\uff5c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n\n\uff5c\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n   \uff5c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n   \n              \uff5c\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n\uff5c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n\n                  \uff5c\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n\uff5c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\uff5c\n")),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(nlogn)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(logn)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int eraseOverlapIntervals(vector<vector<int>> &intervals) {\n        // \u79fb\u9664\u7a7a\u95f4\u6700\u5c11\uff0c\u610f\u5473\u7740\u5269\u4f59\u7a7a\u95f4\u6700\u591a\n        auto cmp = [&](vector<int> &a, vector<int> &b) {\n            return a[1] < b[1];\n        };\n        sort(intervals.begin(), intervals.end(), cmp);\n        int end = intervals[0][1];\n        int cnt = 1;\n        for (int i = 1; i < intervals.size(); i++) {\n            if (end <= intervals[i][0]) {\n                // cout << intervals[i][0] << endl;\n                cnt += 1;\n                end = intervals[i][1];\n            }\n        }\n        return intervals.size() - cnt;\n    }\n};\n")))}u.isMDXComponent=!0}}]);
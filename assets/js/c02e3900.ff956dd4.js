"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[25527],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),s=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),v=a,m=u["".concat(o,".").concat(v)]||u[v]||d[v]||i;return t?r.createElement(m,l(l({ref:n},p),{},{components:t})):r.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=v;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c[u]="string"==typeof e?e:a,l[1]=c;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},88634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const i={},l="algorithm",c={unversionedId:"Skill/C++/\u6807\u51c6\u6a21\u677f\u5e93/algorithm",id:"Skill/C++/\u6807\u51c6\u6a21\u677f\u5e93/algorithm",title:"algorithm",description:"\u6765\u6e90\uff1ahttp://c.biancheng.net/stl/",source:"@site/docs/Skill/C++/3-\u6807\u51c6\u6a21\u677f\u5e93/13-algorithm.md",sourceDirName:"Skill/C++/3-\u6807\u51c6\u6a21\u677f\u5e93",slug:"/Skill/C++/\u6807\u51c6\u6a21\u677f\u5e93/algorithm",permalink:"/docs/Skill/C++/\u6807\u51c6\u6a21\u677f\u5e93/algorithm",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{},sidebar:"skillSidebar",previous:{title:"priority_queue",permalink:"/docs/Skill/C++/\u6807\u51c6\u6a21\u677f\u5e93/priority_queue"},next:{title:"\u6df1\u5165\u7406\u89e3Symbol",permalink:"/docs/Skill/C++/\u6269\u5145\u77e5\u8bc6/\u7b26\u53f7Symbol"}},o={},s=[{value:"\u5176\u4ed6",id:"\u5176\u4ed6",level:2},{value:"1\u3001<code>*min_element()</code> \u548c <code>*max_element</code>",id:"1min_element-\u548c-max_element",level:3},{value:"2\u3001reverse()",id:"2reverse",level:3},{value:"\u4e00\u3001\u4e8c\u5206\u67e5\u627e",id:"\u4e00\u4e8c\u5206\u67e5\u627e",level:2},{value:"1\u3001lower_bound()",id:"1lower_bound",level:3},{value:"2\u3001upper_bound()",id:"2upper_bound",level:3},{value:"3\u3001equel_range()",id:"3equel_range",level:3},{value:"4\u3001binary_search()",id:"4binary_search",level:3},{value:"\u4e8c\u3001\u6392\u5e8f",id:"\u4e8c\u6392\u5e8f",level:2},{value:"1\u3001sort()",id:"1sort",level:3},{value:"2\u3001stable_sort()",id:"2stable_sort",level:3},{value:"3\u3001paritial_sort()",id:"3paritial_sort",level:3},{value:"4\u3001partial_sort_copy()",id:"4partial_sort_copy",level:3},{value:"5\u3001nth_elelment()",id:"5nth_elelment",level:3},{value:"6\u3001is_sorted()",id:"6is_sorted",level:3},{value:"7\u3001merge()",id:"7merge",level:3},{value:"8\u3001inplace_merge()",id:"8inplace_merge",level:3},{value:"9\u3001next_permutation()",id:"9next_permutation",level:3},{value:"10\u3001prev_permutation()",id:"10prev_permutation",level:3},{value:"\u4e09\u3001\u67e5\u627e",id:"\u4e09\u67e5\u627e",level:2},{value:"1\u3001find()",id:"1find",level:3},{value:"2\u3001find_if()",id:"2find_if",level:3},{value:"3\u3001find_if_not()",id:"3find_if_not",level:3},{value:"4\u3001find_end()",id:"4find_end",level:3},{value:"5\u3001find_first_of()",id:"5find_first_of",level:3},{value:"6\u3001adjacent_find()",id:"6adjacent_find",level:3},{value:"7\u3001search()",id:"7search",level:3},{value:"8\u3001search_n()",id:"8search_n",level:3},{value:"\u56db\u3001\u5206\u7ec4",id:"\u56db\u5206\u7ec4",level:2},{value:"1\u3001partition()",id:"1partition",level:3},{value:"2\u3001stable_partition()",id:"2stable_partition",level:3},{value:"3\u3001partition_copy()",id:"3partition_copy",level:3},{value:"4\u3001partition_point()",id:"4partition_point",level:3},{value:"\u4e94\u3001\u5224\u65ad",id:"\u4e94\u5224\u65ad",level:2},{value:"1\u3001all_of()",id:"1all_of",level:3},{value:"2\u3001any_of()",id:"2any_of",level:3},{value:"3\u3001none_of()",id:"3none_of",level:3},{value:"4\u3001equal()",id:"4equal",level:3},{value:"5\u3001is_permutation()",id:"5is_permutation",level:3},{value:"6\u3001mismatch()",id:"6mismatch",level:3},{value:"7\u3001lexicographical_compare()",id:"7lexicographical_compare",level:3},{value:"\u516d\u3001\u6539\u53d8",id:"\u516d\u6539\u53d8",level:2},{value:"1\u3001unique()",id:"1unique",level:3},{value:"2\u3001replace()",id:"2replace",level:3}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"algorithm"},"algorithm"),(0,a.kt)("p",null,"\u6765\u6e90\uff1a",(0,a.kt)("a",{parentName:"p",href:"http://c.biancheng.net/stl/"},"http://c.biancheng.net/stl/")),(0,a.kt)("h2",{id:"\u5176\u4ed6"},"\u5176\u4ed6"),(0,a.kt)("h3",{id:"1min_element-\u548c-max_element"},"1\u3001",(0,a.kt)("inlineCode",{parentName:"h3"},"*min_element()")," \u548c ",(0,a.kt)("inlineCode",{parentName:"h3"},"*max_element")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    vector<int> vec = {5, 3, 1, 4, 2};\n\n    int min = *min_element(vec.begin(), vec.end());\n    int max = *max_element(vec.begin(), vec.end());\n    cout << min << endl;  // 1\n    cout << max << endl;  // 5\n}\n")),(0,a.kt)("h3",{id:"2reverse"},"2\u3001reverse()"),(0,a.kt)("p",null,"\u53cd\u8f6c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    vector<int> vec{1, 2, 3};\n    reverse(vec.begin(), vec.end());\n    for (int i = 0; i < vec.size(); i++) {\n        cout << vec[i] << " ";\n    }\n    // 3 2 1\n}\n')),(0,a.kt)("h2",{id:"\u4e00\u4e8c\u5206\u67e5\u627e"},"\u4e00\u3001\u4e8c\u5206\u67e5\u627e"),(0,a.kt)("p",null,"\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u67e5"),(0,a.kt)("h3",{id:"1lower_bound"},"1\u3001lower_bound()"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"lower_bound()")," \u51fd\u6570\u7528\u4e8e\u5728\u6307\u5b9a\u533a\u57df\u5185\u67e5\u627e ",(0,a.kt)("strong",{parentName:"p"},"\u5927\u4e8e\u7b49\u4e8e \u76ee\u6807\u503c\u7684\u7b2c\u4e00\u4e2a\uff08\u6700\u5c0f\uff09\u5143\u7d20")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int arr[5] = {1, 2, 3, 3, 4};\n\n    int *p = lower_bound(arr, arr + 5, 3);\n    cout << "idx: " << p - arr << " val: " << *p << endl;\n    // idx: 2 val: 3\n\n    vector<int> vec1 = {1, 2, 3, 3, 4};\n    auto res1 = lower_bound(vec1.begin(), vec1.end(), 3);\n    cout << "idx: " << res1 - vec1.begin() << " val: " << *res1 << endl;\n    // idx: 2 val: 3\n\n    vector<int> vec2 = {1, 2, 4, 4, 4};\n    auto res2 = lower_bound(vec2.begin(), vec2.end(), 3);\n    cout << "idx: " << res2 - vec2.begin() << " val: " << *res2 << endl;\n    // idx: 2 val: 4\n  \n    // b \u4e3a \u5927\u4e8e\u7b49\u4e8e \u76ee\u6807\u503c\u7684\u7b2c\u4e00\u4e2a\uff08\u6700\u5c0f\uff09\u5143\u7d20\n    res.push_back(INT_MIN); // \u9996\u4f4d\u6dfb\u52a0\u4e2a\u5143\u7d20\uff0c\u9632\u6b62\u8d8a\u754c\n    res.push_back(\u6240\u6709\u5143\u7d20);\n    res.push_back(INT_MAX);\n    auto it = lower_bound(res.begin(), res.end(), q);\n    int b;\n    if (it-res.begin() == n-1) {\n      b = -1; // \u6ca1\u627e\u5230\n    } else {\n      b = *it; // \u627e\u5230\u4e86\n    }\n  \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"2upper_bound"},"2\u3001upper_bound()"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"upper_bound()")," \u51fd\u6570\u7528\u4e8e\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e ",(0,a.kt)("strong",{parentName:"p"},"\u5927\u4e8e\u76ee\u6807\u503c\u7684\u7b2c\u4e00\u4e2a\uff08\u6700\u5c0f\uff09\u5143\u7d20")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"upper_bound() -1")," \u51fd\u6570\u7528\u4e8e\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e ",(0,a.kt)("strong",{parentName:"p"},"\u5c0f\u4e8e\u7b49\u4e8e \u76ee\u6807\u503c\u7684\u6700\u540e\u4e00\u4e2a\uff08\u6700\u5927\uff09\u5143\u7d20")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'int arr[5] = {1, 2, 3, 3, 4};\n\nint *p = upper_bound(arr, arr + 5, 3);\ncout << "idx: " << p - arr << " val: " << *p << endl;\n// idx: 4 val: 4\n\nvector<int> vec1 = {1, 2, 3, 3, 4};\nauto res1 = upper_bound(vec1.begin(), vec1.end(), 3);\ncout << "idx: " << res1 - vec1.begin() << " val: " << *res1 << endl;\n// idx: 4 val: 4\n\nvector<int> vec2 = {1, 2, 4, 4, 4};\nauto res2 = upper_bound(vec2.begin(), vec2.end(), 3);\ncout << "idx: " << res2 - vec2.begin() << " val: " << *res2 << endl;\n// idx: 2 val: 4\n\n// a \u4e3a \u5c0f\u4e8e\u7b49\u4e8e \u76ee\u6807\u503c\u7684\u6700\u540e\u4e00\u4e2a\uff08\u6700\u5927\uff09\u5143\u7d20\nres.push_back(INT_MIN); // \u9996\u4f4d\u6dfb\u52a0\u4e2a\u5143\u7d20\uff0c\u9632\u6b62\u8d8a\u754c\nres.push_back(\u6240\u6709\u5143\u7d20);\nres.push_back(INT_MAX);\nauto it = upper_bound(res.begin(), res.end(), q);\nint a;\nif (it-1-res.begin() == 0) {\n  a = -1;\n} else {\n  a = *(it-1);\n}\n')),(0,a.kt)("h3",{id:"3equel_range"},"3\u3001equel_range()"),(0,a.kt)("p",null,"equel_range() \u51fd\u6570\u7528\u4e8e\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e ",(0,a.kt)("strong",{parentName:"p"},"\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u6240\u6709\u5143\u7d20")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'int arr[6] = {1, 2, 3, 3, 3, 4};\npair<int*, int*> range1 = equal_range(arr, arr + 6, 3);\ncout << "first: " << range1.first - arr\n        << " second: " << range1.second - arr << endl;\n// first: 2 second: 5\n\nvector<int> vec = {1, 2, 3, 3, 3, 4};\npair<vector<int>::iterator, vector<int>::iterator> range2;\nrange2 = equal_range(vec.begin(), vec.end(), 3);\ncout << "first: " << range2.first - vec.begin()\n        << " second: " << range2.second - vec.begin() << endl;\n// first: 2 second: 5\n')),(0,a.kt)("h3",{id:"4binary_search"},"4\u3001binary_search()"),(0,a.kt)("p",null,"binary_search() \u7528\u4e8e\u67e5\u627e\u6307\u5b9a\u533a\u57df\u5185\u662f\u5426\u5305\u542b\u67d0\u4e2a\u76ee\u6807\u5143\u7d20"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> vec = {1, 2, 3, 3, 3, 4};\nbool res1 = binary_search(vec.begin(), vec.end(), 3);\ncout << res1 << endl;  // 1\n\nbool res2 = binary_search(vec.begin(), vec.end(), 5);\ncout << res2 << endl;  // 0\n")),(0,a.kt)("h2",{id:"\u4e8c\u6392\u5e8f"},"\u4e8c\u3001\u6392\u5e8f"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"\u51fd\u6570\u540d"),(0,a.kt)("th",{parentName:"tr",align:null},"\u7528\u6cd5"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"sort (first, last)"),(0,a.kt)("td",{parentName:"tr",align:null},"\u5bf9\u5bb9\u5668\u6216\u666e\u901a\u6570\u7ec4\u4e2d [first, last) \u8303\u56f4\u5185\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u9ed8\u8ba4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"stable_sort (first, last)"),(0,a.kt)("td",{parentName:"tr",align:null},"\u548c sort() \u51fd\u6570\u529f\u80fd\u76f8\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5bf9\u4e8e [first, last) \u8303\u56f4\u5185\u503c\u76f8\u540c\u7684\u5143\u7d20\uff0c\u8be5\u51fd\u6570\u4e0d\u4f1a\u6539\u53d8\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"partial_sort (first, middle, last)"),(0,a.kt)("td",{parentName:"tr",align:null},"\u4ece [first,last) \u8303\u56f4\u5185\uff0c\u7b5b\u9009\u51fa muddle-first \u4e2a\u6700\u5c0f\u7684\u5143\u7d20\u5e76\u6392\u5e8f\u5b58\u653e\u5728 [first\uff0cmiddle) \u533a\u95f4\u4e2d\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"partial_sort_copy (first, last, result_first, result_last)"),(0,a.kt)("td",{parentName:"tr",align:null},"\u4ece [first, last) \u8303\u56f4\u5185\u7b5b\u9009\u51fa result_last-result_first \u4e2a\u5143\u7d20\u6392\u5e8f\u5e76\u5b58\u50a8\u5230 [result_first, result_last) \u6307\u5b9a\u7684\u8303\u56f4\u4e2d\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"is_sorted (first, last)"),(0,a.kt)("td",{parentName:"tr",align:null},"\u68c0\u6d4b [first, last) \u8303\u56f4\u5185\u662f\u5426\u5df2\u7ecf\u6392\u597d\u5e8f\uff0c\u9ed8\u8ba4\u68c0\u6d4b\u662f\u5426\u6309\u5347\u5e8f\u6392\u5e8f\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"is_sorted_until (first, last)"),(0,a.kt)("td",{parentName:"tr",align:null},"\u548c is_sorted() \u51fd\u6570\u529f\u80fd\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5982\u679c [first, last) \u8303\u56f4\u7684\u5143\u7d20\u6ca1\u6709\u6392\u597d\u5e8f\uff0c\u5219\u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u9996\u4e2a\u4e0d\u9075\u5faa\u6392\u5e8f\u89c4\u5219\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"void nth_element (first, nth, last)"),(0,a.kt)("td",{parentName:"tr",align:null},"\u627e\u5230 [first, last) \u8303\u56f4\u5185\u6309\u7167\u6392\u5e8f\u89c4\u5219\uff08\u9ed8\u8ba4\u6309\u7167\u5347\u5e8f\u6392\u5e8f\uff09\u5e94\u8be5\u4f4d\u4e8e\u7b2c nth \u4e2a\u4f4d\u7f6e\u5904\u7684\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u653e\u7f6e\u5230\u6b64\u4f4d\u7f6e\u3002\u540c\u65f6\u4f7f\u8be5\u4f4d\u7f6e\u5de6\u4fa7\u7684\u6240\u6709\u5143\u7d20\u90fd\u6bd4\u5176\u5b58\u653e\u7684\u5143\u7d20\u5c0f\uff0c\u8be5\u4f4d\u7f6e\u53f3\u4fa7\u7684\u6240\u6709\u5143\u7d20\u90fd\u6bd4\u5176\u5b58\u653e\u7684\u5143\u7d20\u5927\u3002")))),(0,a.kt)("h3",{id:"1sort"},"1\u3001sort()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"sort() \u51fd\u6570\u662f\u57fa\u4e8e\u5feb\u901f\u6392\u5e8f\u5b9e\u73b0\u7684\uff0c\u9ed8\u8ba4\u7531\u5c0f\u5230\u5927"),(0,a.kt)("li",{parentName:"ul"},"\u53ea\u5bf9 array\u3001vector\u3001deque \u8fd9 3 \u4e2a\u5bb9\u5668\u63d0\u4f9b\u652f\u6301"),(0,a.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u6307\u5b9a\u533a\u57df\u5185\u503c\u76f8\u7b49\u7684\u5143\u7d20\uff0csort() \u51fd\u6570\u65e0\u6cd5\u4fdd\u8bc1\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d1\u751f\u6539\u53d8")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\n// \u65b9\u6cd5\u4e00\uff1a\u4ee5\u666e\u901a\u51fd\u6570\u7684\u65b9\u5f0f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff0c< \u5927\u7684\u5728\u524d\nbool cmp1(int &a, int &b) {\n    return (a < b);\n}\n\n// \u65b9\u6cd5\u4e8c\uff1a\u4ee5\u51fd\u6570\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff0c> \u5927\u7684\u5728\u524d\nclass cmp2 {\npublic:\n    // \u91cd\u8f7d operator\n    bool operator()(int &a, int &b) {\n        return (a > b);\n    }\n};\n\nvoid show(vector<int> vec) {\n    for (int i = 0; i < vec.size(); i++) {\n        cout << vec[i] << " ";\n    }\n    cout << endl;\n}\n\nint main() {\n    vector<int> vec{5, 2, 3, 4, 1};\n\n    sort(vec.begin(), vec.end());        // 1 2 3 4 5\n    sort(vec.begin(), vec.begin() + 3);  // 2 3 5 4 1\n\n    sort(vec.begin(), vec.end(), greater<int>());  // 5 4 3 2 1\n    sort(vec.begin(), vec.end(), cmp1);            // 5 4 3 2 1\n    sort(vec.begin(), vec.end(), cmp2());          // 5 4 3 2 1\n\n    // \u65b9\u6cd5\u4e09\uff1alambda \u51fd\u6570\n    auto cmp3 = [&](const int &a, const int &b) -> bool {\n        return a > b;\n    };\n    sort(vec.begin(), vec.end(), cmp3);  // 5 4 3 2 1\n\n    show(vec);\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"2stable_sort"},"2\u3001stable_sort()"),(0,a.kt)("p",null,"stable_sort() \u51fd\u6570\u662f\u57fa\u4e8e\u5f52\u5e76\u6392\u5e8f\u5b9e\u73b0\u7684\uff0c\u5b8c\u5168\u53ef\u770b\u4f5c\u662f sort() \u51fd\u6570\u7684\u5347\u7ea7\u7248\uff0c\u8bed\u6cd5\u683c\u5f0f\u3001\u4f7f\u7528\u4e5f\u76f8\u540c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"stable_sort() \u5728\u529f\u80fd\u4e0a\u9664\u4e86\u53ef\u4ee5\u5b9e\u73b0\u6392\u5e8f\uff0c\u8fd8\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u6539\u53d8\u76f8\u7b49\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002")),(0,a.kt)("p",null,"\u6709\u4e9b\u573a\u666f\u662f\u9700\u8981\u4fdd\u8bc1\u76f8\u7b49\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u7684\u3002\u4f8b\u5982\u5bf9\u4e8e\u4e00\u4e2a\u4fdd\u5b58\u67d0\u79cd\u4e8b\u52a1\uff08\u6bd4\u5982\u94f6\u884c\u8d26\u6237\uff09\u7684\u5bb9\u5668\uff0c\u5728\u5904\u7406\u8fd9\u4e9b\u4e8b\u52a1\u4e4b\u524d\uff0c\u4e3a\u4e86\u80fd\u591f\u6709\u5e8f\u66f4\u65b0\u8fd9\u4e9b\u8d26\u6237\uff0c\u9700\u8981\u6309\u7167\u8d26\u53f7\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\u3002\u800c\u8fd9\u65f6\u5c31\u5f88\u6709\u53ef\u80fd\u51fa\u73b0\u76f8\u7b49\u7684\u8d26\u53f7\uff08\u5373\u540c\u4e00\u8d26\u53f7\u5728\u67d0\u6bb5\u65f6\u95f4\u505a\u591a\u6b21\u7684\u5b58\u53d6\u94b1\u64cd\u4f5c\uff09\uff0c\u5b83\u4eec\u7684\u76f8\u5bf9\u987a\u5e8f\u610f\u5473\u7740\u6dfb\u52a0\u5230\u5bb9\u5668\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u6b64\u987a\u5e8f\u4e0d\u80fd\u4fee\u6539\uff0c\u5426\u5219\u5f88\u53ef\u80fd\u51fa\u73b0\u8d26\u6237\u900f\u652f\u7684\u60c5\u51b5\u3002"),(0,a.kt)("h3",{id:"3paritial_sort"},"3\u3001paritial_sort()"),(0,a.kt)("p",null,"\u573a\u666f\uff1a\u6709\u4e00\u4e2a\u5b58\u6709 100 \u4e07\u4e2a\u5143\u7d20\u7684\u5bb9\u5668\uff0c\u4f46\u53ea\u60f3\u4ece\u4e2d\u63d0\u53d6\u51fa\u503c\u6700\u5c0f\u7684 10 \u4e2a\u5143\u7d20\uff0c\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u5982\u679c\u7528 sort() \u6216\u8005 stable_sort() \u6392\u5e8f\u51fd\u6570\uff0c\u5373\u901a\u8fc7\u5bf9\u5bb9\u5668\u4e2d\u5b58\u50a8\u7684 100 \u4e07\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u518d\u7b5b\u9009\u51fa\u6700\u5c0f\u7684 10 \u4e2a\u5143\u7d20\uff0c\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u7684\u6548\u7387\u662f\u975e\u5e38\u4f4e\u7684\u3002"),(0,a.kt)("p",null,"paritial_sort() \u51fd\u6570\u53ef\u4ee5\u4ece\u6307\u5b9a\u533a\u57df\u4e2d\u63d0\u53d6\u51fa\u90e8\u5206\u6570\u636e\uff0c\u5e76\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\u3002 \u53ea\u9002\u7528\u4e8e array\u3001vector\u3001deque \u8fd9 3 \u4e2a\u5bb9\u5668"),(0,a.kt)("p",null,"\u8bed\u6cd5\u683c\u5f0f\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"//\u6309\u7167\u9ed8\u8ba4\u7684\u5347\u5e8f\u6392\u5e8f\u89c4\u5219\uff0c\u5bf9 [first, last) \u8303\u56f4\u7684\u6570\u636e\u8fdb\u884c\u7b5b\u9009\u5e76\u6392\u5e8f\nvoid partial_sort (RandomAccessIterator first,\n                   RandomAccessIterator middle,\n                   RandomAccessIterator last);\n//\u6309\u7167 comp \u6392\u5e8f\u89c4\u5219\uff0c\u5bf9 [first, last) \u8303\u56f4\u7684\u6570\u636e\u8fdb\u884c\u7b5b\u9009\u5e76\u6392\u5e8f\nvoid partial_sort (RandomAccessIterator first,\n                   RandomAccessIterator middle,\n                   RandomAccessIterator last,\n                   Compare comp);\n")),(0,a.kt)("p",null,"partial_sort() \u51fd\u6570\u4f1a\u4ee5",(0,a.kt)("strong",{parentName:"p"},"\u4ea4\u6362\u5143\u7d20\u5b58\u50a8\u4f4d\u7f6e\u7684\u65b9\u5f0f\u5b9e\u73b0\u90e8\u5206\u6392\u5e8f\u7684"),"\u3002\u5c06 [first, last) \u8303\u56f4\u5185\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u7684 middle-first \u4e2a\u5143\u7d20\u79fb\u52a8\u5230 [first, middle) \u533a\u57df\u4e2d\uff0c\u5e76\u5bf9\u8fd9\u90e8\u5206\u5143\u7d20\u505a\u5347\u5e8f\uff08\u6216\u964d\u5e8f\uff09\u6392\u5e8f\u3002 [middle, last)\u8303\u56f4\u5185\u7684\u5143\u7d20\u4e0d\u4fdd\u8bc1\u662f\u539f\u6709\u7684\u987a\u5e8f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\n// \u4ee5\u666e\u901a\u51fd\u6570\u7684\u65b9\u5f0f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff0c< \u5927\u7684\u5728\u524d\nbool cmp1(int i, int j) {\n    return (i < j);\n}\n\n// \uff08\u63a8\u8350\uff09\u4ee5\u51fd\u6570\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff0c> \u5927\u7684\u5728\u524d\nclass cmp2 {\npublic:\n    // \u91cd\u8f7d operator\n    bool operator()(int i, int j) {\n        return (i > j);\n    }\n};\n\nvoid show(vector<int> vec) {\n    for (int i = 0; i < vec.size(); i++) {\n        cout << vec[i] << " ";\n    }\n    cout << endl;\n}\n\nint main() {\n    vector<int> vec{3, 2, 5, 4, 1, 6, 9, 7};\n\n    // \u9ed8\u8ba4\u5347\u5e8f\uff0c\u6700\u5c0f\u7684 4 \u4e2a\u5143\u7d20\u79fb\u52a8\u5230\u5f00\u5934\u5e76\u6392\u597d\u5e8f\n    partial_sort(vec.begin(), vec.begin() + 4, vec.end());  // 1 2 3 4 5 6 9 7\n\n    // \u6307\u5b9a\u964d\u5e8f\uff0c\u6700\u5c0f\u7684 4 \u4e2a\u5143\u7d20\u79fb\u52a8\u5230\u5f00\u5934\u5e76\u6392\u597d\u5e8f\n    partial_sort(vec.begin(), vec.begin() + 4, vec.end(), greater<int>());  // 9 7 6 5 1 2 3 4\n\n    // \u6307\u5b9a\u6392\u5e8f\u65b9\u5f0f\n    partial_sort(vec.begin(), vec.begin() + 4, vec.end(), cmp2());  // 9 7 6 5 1 2 3 4\n\n    show(vec);\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"4partial_sort_copy"},"4\u3001partial_sort_copy()"),(0,a.kt)("p",null,"partial_sort_copy() \u51fd\u6570\u7684\u529f\u80fd\u548c partial_sort() \u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u4e0d\u4f1a\u5bf9\u539f\u6709\u6570\u636e\u505a\u4efb\u4f55\u53d8\u52a8\uff0c\u800c\u662f\u5148\u5c06\u9009\u5b9a\u7684\u90e8\u5206\u5143\u7d20\u62f7\u8d1d\u5230\u53e6\u5916\u6307\u5b9a\u7684\u6570\u7ec4\u6216\u5bb9\u5668\u4e2d\uff0c\u518d\u5bf9\u8fd9\u90e8\u5206\u5143\u7d20\u8fdb\u884c\u6392\u5e8f"),"\u3002"),(0,a.kt)("p",null,"\u8bed\u6cd5\u683c\u5f0f:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"//\u9ed8\u8ba4\u4ee5\u5347\u5e8f\u89c4\u5219\u8fdb\u884c\u90e8\u5206\u6392\u5e8f\nRandomAccessIterator partial_sort_copy (\n                       InputIterator first,\n                       InputIterator last,\n                       RandomAccessIterator result_first,\n                       RandomAccessIterator result_last);\n//\u4ee5 comp \u89c4\u5219\u8fdb\u884c\u90e8\u5206\u6392\u5e8f\nRandomAccessIterator partial_sort_copy (\n                       InputIterator first,\n                       InputIterator last,\n                       RandomAccessIterator result_first,\n                       RandomAccessIterator result_last,\n                       Compare comp);\n")),(0,a.kt)("p",null,"partial_sort_copy() \u51fd\u6570\u4f1a\u5c06 [first, last) \u8303\u56f4\u5185\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u7684 result_last-result_first \u4e2a\u5143\u7d20\u590d\u5236\u5230 [result_first, result_last) \u533a\u57df\u4e2d\uff0c\u5e76\u5bf9\u8be5\u533a\u57df\u7684\u5143\u7d20\u505a\u5347\u5e8f\uff08\u6216\u964d\u5e8f\uff09\u6392\u5e8f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> vec{3, 2, 5, 4, 1, 6, 9, 7};\nvector<int> res(5, 0);\n\npartial_sort_copy(vec.begin(), vec.end(), res.begin(), res.end());  // 1 2 3 4 5\npartial_sort_copy(vec.begin(), vec.end(), res, res + 5);            // 1 2 3 4 5\n")),(0,a.kt)("h3",{id:"5nth_elelment"},"5\u3001nth_elelment()"),(0,a.kt)("p",null,"th_element() \u51fd\u6570\u7684\u529f\u80fd\uff1a"),(0,a.kt)("p",null,"\u5f53\u91c7\u7528\u9ed8\u8ba4\u7684\u5347\u5e8f\u6392\u5e8f\u89c4\u5219\uff08",(0,a.kt)("inlineCode",{parentName:"p"},"std::less<T>"),"\uff09\u65f6\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u4ece\u67d0\u4e2a\u5e8f\u5217\u4e2d\u627e\u5230\u7b2c n \u5c0f\u7684\u5143\u7d20 K\uff0c\u5e76\u5c06 K \u79fb\u52a8\u5230\u5e8f\u5217\u4e2d\u7b2c n \u7684\u4f4d\u7f6e\u5904\u3002\u6b64\u65f6\uff0c\u6240\u6709\u4f4d\u4e8e K \u4e4b\u524d\u7684\u5143\u7d20\u90fd\u6bd4 K \u5c0f\uff0c\u6240\u6709\u4f4d\u4e8e K \u4e4b\u540e\u7684\u5143\u7d20\u90fd\u6bd4 K \u5927\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"//\u6392\u5e8f\u89c4\u5219\u91c7\u7528\u9ed8\u8ba4\u7684\u5347\u5e8f\u6392\u5e8f\nvoid nth_element (RandomAccessIterator first,\n                  RandomAccessIterator nth,\n                  RandomAccessIterator last);\n//\u6392\u5e8f\u89c4\u5219\u4e3a\u81ea\u5b9a\u4e49\u7684 comp \u6392\u5e8f\u89c4\u5219\nvoid nth_element (RandomAccessIterator first,\n                  RandomAccessIterator nth,\n                  RandomAccessIterator last,\n                  Compare comp);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    vector<int> vec{3, 1, 2, 5, 4};\n    // \u7b2c\u4e09\u5c0f\u7684\u653e\u5728\u7b2c\u4e09\u4f4d\u7f6e\u4e0a\uff0c\u524d\u9762\u7684\u90fd\u6bd4\u5b83\u5c0f\uff0c\u540e\u9762\u7684\u90fd\u6bd4\u5b83\u5927\n    nth_element(vec.begin(), vec.begin() + 2, vec.end());  // 2 1 3 4 5\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"6is_sorted"},"6\u3001is_sorted()"),(0,a.kt)("p",null,"is_sorted() \u51fd\u6570\u7528\u4e8e\u5224\u65ad\u67d0\u4e2a\u5e8f\u5217\u662f\u5426\u4e3a\u6709\u5e8f\u5e8f\u5217\u3002"),(0,a.kt)("p",null,"\u5f53\u7a0b\u5e8f\u4e2d\u6d89\u53ca\u6392\u5e8f\u64cd\u4f5c\u65f6\uff0c\u5e94\u8be5\u4e3a\u5176\u5305\u88f9\u4e00\u5c42\u5224\u65ad\u8bed\u53e5 ",(0,a.kt)("inlineCode",{parentName:"p"},"if is_sorted()")," \u907f\u514d\u6267\u884c\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u6392\u5e8f\u64cd\u4f5c"),(0,a.kt)("p",null,"\u8bed\u6cd5\u683c\u5f0f:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"//\u5224\u65ad [first, last) \u533a\u57df\u5185\u7684\u6570\u636e\u662f\u5426\u7b26\u5408 std::less<T> \u6392\u5e8f\u89c4\u5219\uff0c\u5373\u662f\u5426\u4e3a\u5347\u5e8f\u5e8f\u5217\nbool is_sorted (ForwardIterator first, ForwardIterator last);\n//\u5224\u65ad [first, last) \u533a\u57df\u5185\u7684\u6570\u636e\u662f\u5426\u7b26\u5408 comp \u6392\u5e8f\u89c4\u5219  \nbool is_sorted (ForwardIterator first, ForwardIterator last, Compare comp);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nvoid show(vector<int> vec) {\n    for (int i = 0; i < vec.size(); i++) {\n        cout << vec[i] << " ";\n    }\n    cout << endl;\n}\n\n// \uff08\u63a8\u8350\uff09\u4ee5\u51fd\u6570\u5bf9\u8c61\u7684\u65b9\u5f0f\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff0c> \u5927\u7684\u5728\u524d\nclass cmp {\npublic:\n    // \u91cd\u8f7d operator\n    bool operator()(int i, int j) {\n        return (i > j);\n    }\n};\n\nint main() {\n    vector<int> vec{3, 1, 2, 5, 4};\n\n    if (!is_sorted(vec.begin(), vec.end())) {\n        cout << "not small -> big" << endl;\n        sort(vec.begin(), vec.end());\n    }\n    show(vec);  // 1 2 3 4 5\n\n    if (!is_sorted(vec.begin(), vec.end(), cmp())) {\n        cout << "not big -> small" << endl;\n        sort(vec.begin(), vec.end(), cmp());\n    }\n    show(vec);  // 5 4 3 2 1\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"7merge"},"7\u3001merge()"),(0,a.kt)("p",null,"merge() \u51fd\u6570\u7528\u4e8e",(0,a.kt)("strong",{parentName:"p"},"\u5c06 2 \u4e2a\u6709\u5e8f\u5e8f\u5217\u5408\u5e76\u4e3a 1 \u4e2a\u6709\u5e8f\u5e8f\u5217"),"\uff0c\u524d\u63d0\u662f\u8fd9 2 \u4e2a\u6709\u5e8f\u5e8f\u5217\u7684\u6392\u5e8f\u89c4\u5219\u76f8\u540c\uff08\u8981\u4e48\u90fd\u662f\u5347\u5e8f\uff0c\u8981\u4e48\u90fd\u662f\u964d\u5e8f\uff09\u3002\u5e76\u4e14\u6700\u7ec8\u501f\u52a9\u8be5\u51fd\u6570\u83b7\u5f97\u7684\u65b0\u6709\u5e8f\u5e8f\u5217\uff0c\u5176\u6392\u5e8f\u89c4\u5219\u4e5f\u548c\u8fd9 2 \u4e2a\u6709\u5e8f\u5e8f\u5217\u76f8\u540c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"//\u4ee5\u9ed8\u8ba4\u7684\u5347\u5e8f\u6392\u5e8f\u4f5c\u4e3a\u6392\u5e8f\u89c4\u5219\nOutputIterator merge (InputIterator1 first1, InputIterator1 last1,\n                      InputIterator2 first2, InputIterator2 last2,\n                      OutputIterator result);\n//\u4ee5\u81ea\u5b9a\u4e49\u7684 comp \u89c4\u5219\u4f5c\u4e3a\u6392\u5e8f\u89c4\u5219\nOutputIterator merge (InputIterator1 first1, InputIterator1 last1,\n                      InputIterator2 first2, InputIterator2 last2,\n                      OutputIterator result, Compare comp);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nvoid show(vector<int> vec) {\n    for (int i = 0; i < vec.size(); i++) {\n        cout << vec[i] << " ";\n    }\n    cout << endl;\n}\n\nint main() {\n    vector<int> vec1{3, 5, 7, 9};\n    vector<int> vec2{1, 2, 4, 6, 8};\n    vector<int> res(9);\n\n    merge(vec1.begin(), vec1.end(), vec2.begin(), vec2.end(), res.begin());\n    show(res);  // 1 2 3 4 5 6 7 8 9\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"8inplace_merge"},"8\u3001inplace_merge()"),(0,a.kt)("p",null,"\u5f53 2 \u4e2a\u6709\u5e8f\u5e8f\u5217\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u6570\u7ec4\u6216\u5bb9\u5668\u4e2d\u65f6\uff0cinplace_merge() \u51fd\u6570\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a 1 \u4e2a\u6709\u5e8f\u5e8f\u5217"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> vec{3, 5, 7, 9, 1, 2, 4, 6, 8};\n\ninplace_merge(vec, vec + 4, vec.end());\n// 1 2 3 4 5 6 7 8 9\n")),(0,a.kt)("h3",{id:"9next_permutation"},"9\u3001next_permutation()"),(0,a.kt)("p",null,"\u5728\u5bb9\u5668\u5185\u6240\u6709\u5143\u7d20\u7684\u6392\u5217\u7ec4\u5408\u4e2d\uff0c\u6392\u5e8f\u4e3a\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u5373\u5347\u5e8f\u7684\u65b9\u5f0f\u751f\u6210\u6392\u5217"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<int> vec{5, 3, 1, 2, 4};\n\nwhile (next_permutation(vec.begin(), vec.end())) {\n}\nfor (int i = 0; i < vec.size(); i++) {\n    cout << vec[i] << " ";\n}\n// 1 2 3 4 5\n')),(0,a.kt)("h3",{id:"10prev_permutation"},"10\u3001prev_permutation()"),(0,a.kt)("p",null,"\u5728\u5bb9\u5668\u5185\u6240\u6709\u5143\u7d20\u7684\u6392\u5217\u7ec4\u5408\u4e2d\uff0c\u6392\u5e8f\u4e3a\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u5373\u964d\u5e8f\u7684\u65b9\u5f0f\u751f\u6210\u6392\u5217"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<int> vec{5, 3, 1, 2, 4};\n\nwhile (prev_permutation(vec.begin(), vec.end())) {\n}\nfor (int i = 0; i < vec.size(); i++) {\n    cout << vec[i] << " ";\n}\n// 5 4 3 2 1\n')),(0,a.kt)("h2",{id:"\u4e09\u67e5\u627e"},"\u4e09\u3001\u67e5\u627e"),(0,a.kt)("p",null,"\u5728\u65e0\u5e8f\u5e8f\u5217\u4e2d\u67e5"),(0,a.kt)("h3",{id:"1find"},"1\u3001find()"),(0,a.kt)("p",null,"find() \u51fd\u6570\u7528\u4e8e\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u548c\u76ee\u6807\u5143\u7d20\u503c\u76f8\u7b49\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002"),(0,a.kt)("p",null,"\u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8f93\u5165\u8fed\u4ee3\u5668\uff0c\u5f53 find() \u51fd\u6570\u67e5\u627e\u6210\u529f\u65f6\uff0c\u5176\u6307\u5411\u7684\u662f\u5728 [first, last) \u533a\u57df\u5185\u67e5\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\u5143\u7d20\uff1b\u5982\u679c\u67e5\u627e\u5931\u8d25\uff0c\u5219\u8be5\u8fed\u4ee3\u5668\u7684\u6307\u5411\u548c last \u76f8\u540c\u3002"),(0,a.kt)("p",null,"find() \u51fd\u6570\u7684\u5e95\u5c42\u5b9e\u73b0\uff0c\u5176\u5b9e\u5c31\u662f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"=="),"\u8fd0\u7b97\u7b26\u5c06 val \u548c [first, last) \u533a\u57df\u5185\u7684\u5143\u7d20\u9010\u4e2a\u8fdb\u884c\u6bd4\u5bf9\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c[first, last) \u533a\u57df\u5185\u7684\u5143\u7d20\u5fc5\u987b\u652f\u6301",(0,a.kt)("inlineCode",{parentName:"p"},"=="),"\u8fd0\u7b97\u7b26"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    vector<int> vec{1, 2, 2, 2, 3};\n    auto it = find(vec.begin(), vec.end(), 2);\n    if (it != vec.end()) {\n        cout << "find it" << endl;\n    } else {\n        cout << "not find" << endl;\n    }\n    // find it\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"2find_if"},"2\u3001find_if()"),(0,a.kt)("p",null,"find_if() \u51fd\u6570\u5141\u8bb8\u81ea\u5b9a\u4e49\u67e5\u627e\u89c4\u5219\uff0c\u5f62\u53c2\u4e3a\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a bool \u7684\u51fd\u6570"),(0,a.kt)("p",null,"find_if() \u51fd\u6570\u4f1a\u6839\u636e\u6307\u5b9a\u7684\u67e5\u627e\u89c4\u5219\uff0c\u5728\u6307\u5b9a\u533a\u57df\u5185\u67e5\u627e\u7b2c\u4e00\u4e2a\u7b26\u5408\u8be5\u51fd\u6570\u8981\u6c42\uff08\u4f7f\u51fd\u6570\u8fd4\u56de true\uff09\u7684\u5143\u7d20\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\n// \u4ee5\u51fd\u6570\u5bf9\u8c61\u7684\u5f62\u5f0f\u5b9a\u4e49\u4e00\u4e2a find_if() \u51fd\u6570\u7684\u67e5\u627e\u89c4\u5219\nclass cmp {\npublic:\n    bool operator()(const int& i) {\n        return ((i % 2) == 0);\n    }\n};\n\nint main() {\n    vector<int> vec{1, 2, 2, 2, 3};\n\n    vector<int>::iterator it = find_if(vec.begin(), vec.end(), cmp());\n    cout << *it << endl;  // 2\n\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"3find_if_not"},"3\u3001find_if_not()"),(0,a.kt)("p",null,"find_if_not() \u51fd\u6570\u5219\u7528\u4e8e\u67e5\u627e\u7b2c\u4e00\u4e2a\u4e0d\u7b26\u5408\u8c13\u8bcd\u51fd\u6570\u89c4\u5219\u7684\u5143\u7d20"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\n// \u4ee5\u51fd\u6570\u5bf9\u8c61\u7684\u5f62\u5f0f\u5b9a\u4e49\u4e00\u4e2a find_if() \u51fd\u6570\u7684\u67e5\u627e\u89c4\u5219\nclass cmp {\npublic:\n    bool operator()(const int& i) {\n        return ((i % 2) == 0);\n    }\n};\n\nint main() {\n    vector<int> vec{1, 2, 2, 2, 3};\n\n    vector<int>::iterator it = find_if_not(vec.begin(), vec.end(), cmp());\n    cout << *it << endl;  // 1\n\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"4find_end"},"4\u3001find_end()"),(0,a.kt)("p",null,"find_end() \u51fd\u6570\u5728\u5e8f\u5217 A \u4e2d\u67e5\u627e\u5e8f\u5217 B \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    vector<int> vec{1, 2, 3, 2, 3};\n    vector<int> v{2, 3};\n    vector<int>::iterator it = find_end(vec.begin(), vec.end(), v.begin(), v.end());\n    if (it != vec.end()) {\n        cout << "idx: " << it - vec.begin() << endl;\n    }\n    // idx: 3\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"5find_first_of"},"5\u3001find_first_of()"),(0,a.kt)("p",null,"find_first_of() \u51fd\u6570\u5728 A \u5e8f\u5217\u4e2d\u67e5\u627e\u548c B \u5e8f\u5217\u4e2d\u4efb\u610f\u5143\u7d20\u76f8\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\n//\u4ee5\u51fd\u6570\u5bf9\u8c61\u7684\u5f62\u5f0f\u5b9a\u4e49\u4e00\u4e2a find_first_of() \u51fd\u6570\u7684\u5339\u914d\u89c4\u5219\nclass cmp {\npublic:\n    bool operator()(const int& c1, const int& c2) {\n        return (c2 % c1 == 0);\n    }\n};\nint main() {\n    vector<int> vec{5, 7, 3, 9};\n    int inter[] = {4, 6, 8};\n    //\u8c03\u7528\u7b2c\u4e8c\u79cd\u8bed\u6cd5\u683c\u5f0f\uff0c\u627e\u5230 vec \u5bb9\u5668\u4e2d\u4efb\u4e00\u5143\u7d20\u6709 c2%c1=0 \u5173\u7cfb\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n    vector<int>::iterator iter = find_first_of(vec.begin(), vec.end(), inter, inter + 3, cmp());\n    if (iter != vec.end()) {\n        cout << *iter << endl;\n    }\n    // 3\n\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"6adjacent_find"},"6\u3001adjacent_find()"),(0,a.kt)("p",null,"adjacent_find() \u51fd\u6570\u7528\u4e8e\u5728\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u8fde\u7eed 2 \u4e2a\u6ee1\u8db3\u89c4\u5219\u7684\u5143\u7d20\uff0c\u9ed8\u8ba4\u4e24\u4e2a\u76f8\u7b49\u7684\u5143\u7d20"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nclass cmp {\npublic:\n    bool operator()(const int& _Left, const int& _Right) {\n        return (_Left != _Right);\n    }\n};\nint main() {\n    vector<int> vec{1, 2, 2, 3};\n    vector<int>::iterator it = adjacent_find(vec.begin(), vec.end());\n\n    if (it != vec.end()) {\n        cout << "idx: " << it - vec.begin() << endl;\n        cout << *it << endl;\n    }\n    // idx: 1\n    // 2\n\n    auto res = adjacent_find(vec.begin(), vec.end(), cmp());\n    if (res != vec.end()) {\n        cout << "idx: " << res - vec.begin() << endl;\n        cout << *res << endl;\n    }\n    // idx: 0\n    // 1\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"7search"},"7\u3001search()"),(0,a.kt)("p",null,"search() \u51fd\u6570\u67e5\u627e\u5e8f\u5217 B \u5728\u5e8f\u5217 A \u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    vector<int> vec{1, 2, 3, 2, 3};\n    vector<int> v{2, 3};\n    vector<int>::iterator it = search(vec.begin(), vec.end(), v.begin(), v.end());\n    if (it != vec.end()) {\n        cout << "idx: " << it - vec.begin() << endl;\n    }\n    // idx: 1\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"8search_n"},"8\u3001search_n()"),(0,a.kt)("p",null,"search_n() \u51fd\u6570\u529f\u80fd\u4e0esearch() \u51fd\u6570\u7c7b\u4f3c\uff0c\u4f46\u53ea\u80fd\u67e5\u627e\u5305\u542b\u591a\u4e2a\u76f8\u540c\u5143\u7d20\u7684\u5b50\u5e8f\u5217\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<int> vec{1, 2, 3, 2, 2};\nvector<int> v{2, 2};\nvector<int>::iterator it = search_n(vec.begin(), vec.end(), v.begin(), v.end());\nif (it != vec.end()) {\n    cout << "idx: " << it - vec.begin() << endl;\n}\n// idx: 3\n')),(0,a.kt)("h2",{id:"\u56db\u5206\u7ec4"},"\u56db\u3001\u5206\u7ec4"),(0,a.kt)("h3",{id:"1partition"},"1\u3001partition()"),(0,a.kt)("p",null,"partition() \u51fd\u6570\u53ef\u6839\u636e\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b5b\u9009\u89c4\u5219\uff0c\u91cd\u65b0\u6392\u5217\u6307\u5b9a\u533a\u57df\u5185\u5b58\u50a8\u7684\u6570\u636e\uff0c\u4f7f\u5176\u5206\u4e3a 2 \u7ec4\uff0c\u7b2c\u4e00\u7ec4\u4e3a\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u6570\u636e\uff0c\u53e6\u4e00\u7ec4\u4e3a\u4e0d\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u6570\u636e\u3002\u5176\u5b9e\u4f1a\u628a\u6570\u636e\u653e\u5230\u539f\u5904\uff0c\u524d\u9762\u4e00\u534a\u6ee1\u8db3\u89c4\u5219\uff0c\u540e\u9762\u4e00\u534a\u4e0d\u6ee1\u8db3\uff0c\u4e5f\u4e0d\u5173\u5fc3\u5206\u7ec4\u540e\u5404\u4e2a\u5143\u7d20\u5177\u4f53\u7684\u5b58\u50a8\u4f4d\u7f6e\u3002"),(0,a.kt)("p",null,"\u8fd4\u56de\u7b2c\u4e8c\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8fb9\u754c\u5143\u7d20"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nclass cmp {\npublic:\n    bool operator()(const int& i) {\n        return (i % 2 == 0);\n    }\n};\n\nint main() {\n    vector<int> vec{1, 2, 3, 4, 5, 6, 7, 8, 9};\n\n    //\u4ee5 cmp \u89c4\u5219\uff0c\u5bf9 vec  \u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5206\u7ec4\n    auto bound = partition(vec.begin(), vec.end(), cmp());\n    for (auto it = vec.begin(); it != vec.end(); ++it) {\n        cout << *it << " ";\n    }                                // 8 2 6 4 5 3 7 1 9\n    cout << "\\nbound = " << *bound;  // bound = 5\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"2stable_partition"},"2\u3001stable_partition()"),(0,a.kt)("p",null,"stable_partition() \u51fd\u6570\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u6307\u5b9a\u533a\u57df\u5185\u6570\u636e\u5b8c\u6210\u5206\u7ec4\u7684\u540c\u65f6\uff0c\u4e0d\u6539\u53d8\u5404\u7ec4\u5185\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e"),(0,a.kt)("p",null,"\u8fd4\u56de\u7b2c\u4e8c\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8fb9\u754c\u5143\u7d20"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<int> vec{1, 2, 3, 4, 5, 6, 7, 8, 9};\n\n//\u4ee5 cmp \u89c4\u5219\uff0c\u5bf9 vec  \u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5206\u7ec4\nauto bound = stable_partition(vec.begin(), vec.end(), cmp());\nfor (auto it = vec.begin(); it != vec.end(); ++it) {\n    cout << *it << " ";\n}\ncout << endl;  // 2 4 6 8 1 3 5 7 9\nfor (auto it = vec.begin(); it != bound; ++it) {\n    cout << *it << " ";\n}  // 2 4 6 8\n')),(0,a.kt)("h3",{id:"3partition_copy"},"3\u3001partition_copy()"),(0,a.kt)("p",null,"partition_copy() \u51fd\u6570"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6309\u7167\u67d0\u4e2a\u7b5b\u9009\u89c4\u5219\u5bf9\u6307\u5b9a\u533a\u57df\u5185\u7684\u6570\u636e\u8fdb\u884c\u201c\u5206\u7ec4\u201d"),(0,a.kt)("li",{parentName:"ul"},"\u5206\u7ec4\u540e\u4e0d\u4f1a\u6539\u53d8\u5404\u4e2a\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e"),(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u4f1a\u5bf9\u539f\u5e8f\u5217\u505a\u4fee\u6539\uff0c\u4ee5\u590d\u5236\u7684\u65b9\u5f0f\u5230\u5176\u5b83\u7684\u6307\u5b9a\u4f4d\u7f6e")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <algorithm>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nclass cmp {\npublic:\n    bool operator()(const int &i) {\n        return (i % 2 == 0);\n    }\n};\n\nint main() {\n    vector<int> vec{1, 2, 3, 4, 5, 6, 7, 8, 9};\n    int a[10] = {0};\n    int b[10] = {0};\n\n    pair<int *, int *> res = partition_copy(vec.begin(), vec.end(), a, b, cmp());\n    for (int *p = a; p < res.first; p++) {\n        cout << *p << " ";\n    }\n    cout << endl;  // 2 4 6 8\n\n    for (int *p = b; p < res.second; p++) {\n        cout << *p << " ";\n    }  // 1 3 5 7 9\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"4partition_point"},"4\u3001partition_point()"),(0,a.kt)("p",null,"partition_point() \u51fd\u6570\u5728\u5df2\u5206\u597d\u7ec4\u7684\u6570\u636e\u4e2d\u627e\u5230\u5206\u754c\u4f4d\u7f6e"),(0,a.kt)("h2",{id:"\u4e94\u5224\u65ad"},"\u4e94\u3001\u5224\u65ad"),(0,a.kt)("h3",{id:"1all_of"},"1\u3001all_of()"),(0,a.kt)("p",null,"\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u300c\u90fd\u6ee1\u8db3\u6761\u4ef6\u65f6\u300d\uff0c\u8fd4\u56de\u81ea\u5b9a\u4e49\u7684 true \u7ed3\u679c\uff0c\u5426\u5219\u8fd4\u56de false \u7ed3\u679c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<int> ages{6, 7, 8, 9};\nint max_age = 10;\n\n// \u5224\u65ad\u5411\u91cf\u4e2d\u5168\u90e8\u90fd\u5c0f\u4e8e 10\nstring res;\nres = (all_of(ages.begin(), ages.end(), [max_age](int age) { return age < max_age; }) ? "Yes" : "No");\ncout << res << endl;  // Yes\n')),(0,a.kt)("h3",{id:"2any_of"},"2\u3001any_of()"),(0,a.kt)("p",null,"\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u300c\u6709\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u65f6\u300d\uff0c\u8fd4\u56de\u81ea\u5b9a\u4e49\u7684 true \u7ed3\u679c\uff0c\u5426\u5219\u8fd4\u56de false \u7ed3\u679c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<int> ages{6, 7, 8, 9};\nint max_age = 7;\n\n// \u5224\u65ad\u5411\u91cf\u4e2d\u6709\u4e00\u4e2a\u5c0f\u4e8e 7\nstring res;\nres = (any_of(ages.begin(), ages.end(), [max_age](int age) { return age < max_age; }) ? "Yes" : "No");\ncout << res << endl;  // Yes\n')),(0,a.kt)("h3",{id:"3none_of"},"3\u3001none_of()"),(0,a.kt)("p",null,"\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u300c\u90fd\u4e0d\u6ee1\u8db3\u6761\u4ef6\u65f6\u300d\uff0c\u8fd4\u56de\u81ea\u5b9a\u4e49\u7684 true \u7ed3\u679c\uff0c\u5426\u5219\u8fd4\u56de false \u7ed3\u679c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<int> ages{6, 7, 8, 9};\nint min_age = 5;\n\n// \u5224\u65ad\u5411\u91cf\u4e2d\u6ca1\u6709\u4e00\u4e2a\u5c0f\u4e8e5\nstring res;\nres = (none_of(ages.begin(), ages.end(), [min_age](int age) { return age < min_age; }) ? "Yes" : "No");\ncout << res << endl;  // Yes\n')),(0,a.kt)("h3",{id:"4equal"},"4\u3001equal()"),(0,a.kt)("p",null,"equal() \u6bd4\u8f83\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u76f8\u7b49\uff0c\u5305\u62ec\u5143\u7d20\u503c\u548c\u5143\u7d20\u6392\u5e8f\uff0c\u63a8\u8350\u4f7f\u7528\u63a5\u53d7 4 \u4e2a\u53c2\u6570\u7684\u7248\u672c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> vec1 = {1, 2, 3, 4};\nvector<int> vec2 = {2, 3, 4, 5};\n\ncout << equal(vec1.begin(), vec1.end(), vec2.begin(), vec2.end()) << endl;          // 0\ncout << equal(vec1.begin() + 1, vec1.end(), vec2.begin(), vec2.end() - 1) << endl;  // 1\ncout << equal(vec1.begin() + 1, vec1.end(), vec2.begin()) << endl;                  // 1\n")),(0,a.kt)("h3",{id:"5is_permutation"},"5\u3001is_permutation()"),(0,a.kt)("p",null,"is_permutation() \u6bd4\u8f83\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u76f8\u7b49\uff0c\u53ea\u68c0\u67e5\u5143\u7d20\u503c\uff0c\u4e0d\u5305\u542b\u5143\u7d20\u6392\u5e8f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> vec1{5, 3, 1, 2, 4};\nvector<int> vec2{1, 2, 3, 4, 5};\n\nbool res1 = is_permutation(vec1.begin(), vec1.end(), vec2.begin(), vec2.end());\nbool res2 = equal(vec1.begin(), vec1.end(), vec2.begin(), vec2.end());\ncout << res1 << endl;  // 1\ncout << res2 << endl;  // 0\n")),(0,a.kt)("h3",{id:"6mismatch"},"6\u3001mismatch()"),(0,a.kt)("p",null,"mismatch() \u4e5f\u53ef\u4ee5\u5224\u65ad\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u5339\u914d\uff0c\u800c\u4e14\u5982\u679c\u4e0d\u5339\u914d\uff0c\u8fd4\u56de\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e"),(0,a.kt)("h3",{id:"7lexicographical_compare"},"7\u3001lexicographical_compare()"),(0,a.kt)("p",null,"\u5b57\u7b26\u4e32\u5b57\u5178\u8bb8\u6392\u5e8f\u7b97\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<string> phrase1{"the", "tigers", "of", "wrath"};\nvector<string> phrase2{"the", "horses", "of", "instruction"};\nbool res = lexicographical_compare(begin(phrase1), end(phrase1),\n                                    begin(phrase2), end(phrase2));\ncout << res << endl;  // 0 \u56e0\u4e3a tigers \u5927\u4e8e horses\n')),(0,a.kt)("h2",{id:"\u516d\u6539\u53d8"},"\u516d\u3001\u6539\u53d8"),(0,a.kt)("h3",{id:"1unique"},"1\u3001unique()"),(0,a.kt)("p",null,"unique() \u7b97\u6cd5\u53ef\u4ee5\u5728\u5e8f\u5217\u4e2d\u539f\u5730\u79fb\u9664\u91cd\u590d\u7684\u5143\u7d20"),(0,a.kt)("h3",{id:"2replace"},"2\u3001replace()"),(0,a.kt)("p",null,"\u65b0\u7684\u503c\u6765\u66ff\u6362\u548c\u7ed9\u5b9a\u503c\u76f8\u5339\u914d\u7684\u5143\u7d20"))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[95817],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),k=i,f=p["".concat(u,".").concat(k)]||p[k]||m[k]||o;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=k;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},93550:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const o={},a=void 0,l={unversionedId:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6",id:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6",title:"\u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6",description:"\u9898\u76ee\uff1a698. \u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6",source:"@site/docs/Algorithm/6-\u7cfb\u5217\u9898\u76ee/07-\u5b50\u96c6\u5212\u5206\u95ee\u9898/698-\u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6.md",sourceDirName:"Algorithm/6-\u7cfb\u5217\u9898\u76ee/07-\u5b50\u96c6\u5212\u5206\u95ee\u9898",slug:"/Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6",draft:!1,tags:[],version:"current",sidebarPosition:698,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"\u706b\u67f4\u62fc\u6b63\u65b9\u5f62",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u706b\u67f4\u62fc\u6b63\u65b9\u5f62"},next:{title:"\u516c\u5e73\u5206\u53d1\u997c\u5e72",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u5b50\u96c6\u5212\u5206\u95ee\u9898/\u516c\u5e73\u5206\u53d1\u997c\u5e72"}},u={},s=[{value:"\u65b9\u6cd5\uff1a\u56de\u6eaf + \u526a\u679d\uff08\u5b50\u96c6\u5212\u5206\u95ee\u9898\uff09",id:"\u65b9\u6cd5\u56de\u6eaf--\u526a\u679d\u5b50\u96c6\u5212\u5206\u95ee\u9898",level:2}],c={toc:s};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/"},"698. \u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6")),(0,i.kt)("p",null,"\u9898\u89e3\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/solution/by-lfool-d9o7/"},"\u7ecf\u5178\u56de\u6eaf\u7b97\u6cd5\uff1a\u96c6\u5408\u5212\u5206\u95ee\u9898\u300c\u91cd\u8981\u66f4\u65b0 \ud83d\udd25\ud83d\udd25\ud83d\udd25\u300d - \u5212\u5206\u4e3ak\u4e2a\u76f8\u7b49\u7684\u5b50\u96c6 - \u529b\u6263\uff08LeetCode\uff09")),(0,i.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," \u548c\u4e00\u4e2a\u6b63\u6574\u6570 ",(0,i.kt)("inlineCode",{parentName:"p"},"k"),"\uff0c\u627e\u51fa\u662f\u5426\u6709\u53ef\u80fd\u628a\u8fd9\u4e2a\u6570\u7ec4\u5206\u6210 ",(0,i.kt)("inlineCode",{parentName:"p"},"k")," \u4e2a\u975e\u7a7a\u5b50\u96c6\uff0c\u5176\u603b\u548c\u90fd\u76f8\u7b49\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1a nums = [4, 3, 2, 3, 5, 2, 1], k = 4\n\u8f93\u51fa\uff1a True\n\u8bf4\u660e\uff1a \u6709\u53ef\u80fd\u5c06\u5176\u5206\u6210 4 \u4e2a\u5b50\u96c6\uff085\uff09\uff0c\uff081,4\uff09\uff0c\uff082,3\uff09\uff0c\uff082,3\uff09\u7b49\u4e8e\u603b\u548c\u3002\n\n\u793a\u4f8b 2:\n\n\u8f93\u5165: nums = [1,2,3,4], k = 3\n\u8f93\u51fa: false\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= k <= len(nums) <= 16")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0 < nums[i] < 10000")),(0,i.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5143\u7d20\u7684\u9891\u7387\u5728 ",(0,i.kt)("inlineCode",{parentName:"li"},"[1,4]")," \u8303\u56f4\u5185")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u56de\u6eaf--\u526a\u679d\u5b50\u96c6\u5212\u5206\u95ee\u9898"},"\u65b9\u6cd5\uff1a\u56de\u6eaf + \u526a\u679d\uff08\u5b50\u96c6\u5212\u5206\u95ee\u9898\uff09"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6392\u5e8f\uff1a\u5148\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5148\u8ba9\u503c\u5927\u7684\u5143\u7d20\u9009\u62e9\u6876\uff0c\u8fd9\u6837\u53ef\u4ee5\u589e\u52a0\u526a\u679d\u7684\u547d\u4e2d\u7387\uff0c\u4ece\u800c\u964d\u4f4e\u56de\u6eaf\u7684\u6982\u7387"),(0,i.kt)("li",{parentName:"ul"},"\u526a\u679d1\uff1a\u7b2c\u4e00\u4e2a\u6570\u53ea\u9700\u5206\u914d\u81f3\u4e00\u4e2a k \u4f4d\u7f6e\u5373\u53ef\uff0c\u53ef\u51cf\u5c11 (k-1)/k \u4e2a\u9012\u5f52\u6811"),(0,i.kt)("li",{parentName:"ul"},"\u526a\u679d2\uff1a\u5982\u679c\u4e00\u4e2a\u5b50\u96c6\u7684\u548c \u5927\u4e8e \u5e94\u8be5\u7684\u5e73\u5747\u503c\uff0c\u663e\u7136\u4e0d\u53ef\u80fd"),(0,i.kt)("li",{parentName:"ul"},"\u526a\u679d3\uff1a\u5982\u679c\u5f53\u524d\u6876\u548c\u4e0a\u4e00\u4e2a\u6876\u5185\u7684\u5143\u7d20\u548c\u76f8\u7b49\uff0c\u5219\u8df3\u8fc7")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u539f\u56e0\uff1a\u5982\u679c\u5143\u7d20\u548c\u76f8\u7b49\uff0c\u90a3\u4e48 nums","[index]"," \u9009\u62e9\u4e0a\u4e00\u4e2a\u6876\u548c\u9009\u62e9\u5f53\u524d\u6876\u53ef\u4ee5\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684"),(0,i.kt)("p",{parentName:"blockquote"},"\u8fd9\u662f\u6700nb\u7684\u526a\u679d,1764 ms -> 0 ms")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6392\u5e8f\u3001\u526a\u679d2\u3001\u526a\u679d3 \u8fd9\u4e09\u4e2a\u5730\u65b9\u5fc5\u987b\u90fd\u5b58\u5728\uff0c\u90fd\u4e0d\u53ef\u6216\u7f3a")),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(k^n)")),(0,i.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a0 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e86100.00%\u7684\u7528\u6237"),(0,i.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a9.2 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8656.65%\u7684\u7528\u6237"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int n;  // \u6570\u7ec4\u7684\u957f\u5ea6\n    int k;  // \u5b50\u96c6\u7684\u6570\u91cf\n    vector<int> nums_sorted;\n    vector<int> buckets;\n    int average;\n\n    // cur \u5f53\u524d\u5e94\u8be5\u5206\u914d\u7684\u6570\u7684\u4e0b\u6807\n    bool dfs(vector<int>& buckets, int cur) {\n        if (cur == n) {\n            // \u526a\u679d\u8865\u5145\uff1a\u8d70\u5230\u8fd9\u91cc\u7684\u6bcf\u4e2a\u6876\u4e00\u5b9a\u662f\u5e73\u5747\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u5224\u65ad\n            // \u76f4\u63a5\u8fd4\u56de true\uff0c\u4f46\u662f\u8fd9\u91cc\u526a\u679d\u6536\u76ca\u5f88\u5c0f\u5f88\u5c0f\n            for (int i = 0; i < k; i++) {\n                if (buckets[i] != average) return false;\n            }\n            return true;\n        }\n\n        // \u56de\u6eaf\n        int res = false;\n        for (int i = 0; i < k; i++) {\n            // \u526a\u679d1\uff1a\u7b2c\u4e00\u4e2a\u6570\u53ea\u9700\u5206\u914d\u81f3\u4e00\u4e2a k \u4f4d\u7f6e\u5373\u53ef\uff0c\u53ef\u51cf\u5c11 (k-1)/k \u4e2a\u9012\u5f52\u6811\n            if (cur == 0 && i != 0) break;\n\n            // \u526a\u679d2\uff1a\u5982\u679c\u4e00\u4e2a\u5b50\u96c6\u7684\u548c \u5927\u4e8e \u5e94\u8be5\u7684\u5e73\u5747\u503c\uff0c\u663e\u7136\u4e0d\u53ef\u80fd\n            if (buckets[i] + nums_sorted[cur] > average) continue;\n\n            // \u526a\u679d3\uff1a\u5982\u679c\u5f53\u524d\u6876\u548c\u4e0a\u4e00\u4e2a\u6876\u5185\u7684\u5143\u7d20\u548c\u76f8\u7b49\uff0c\u5219\u8df3\u8fc7\n            // \u539f\u56e0\uff1a\u5982\u679c\u5143\u7d20\u548c\u76f8\u7b49\uff0c\u90a3\u4e48 nums[index] \u9009\u62e9\u4e0a\u4e00\u4e2a\u6876\u548c\u9009\u62e9\u5f53\u524d\u6876\u53ef\u4ee5\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\n            // \u8fd9\u662f\u6700nb\u7684\u526a\u679d,1764 ms -> 0 ms\n            if (i > 0 && buckets[i] == buckets[i - 1]) continue;\n\n            buckets[i] += nums_sorted[cur];\n            res = dfs(buckets, cur + 1);\n            buckets[i] -= nums_sorted[cur];\n            if (res) break;\n        }\n        return res;\n    }\n\n    bool canPartitionKSubsets(vector<int>& nums, int k) {\n        nums_sorted = nums;\n        n = nums.size();\n        this->k = k;\n        buckets.resize(k, 0);\n\n        // \u5148\u6392\u5e8f\uff0c\u5c3d\u65e9\u89e6\u53d1 dfs \u4e2d\u7684\u526a\u679d\uff0c\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u9012\u5f52\u5c3d\u5feb\u7ed3\u675f\n        sort(nums_sorted.begin(), nums_sorted.end(), greater<int>());\n\n        int total = 0;\n        for (int num : nums) total += num;\n        if (total % k) return false;  // nums \u4e0d\u80fd\u5e73\u5206\u6210 k \u4efd\uff0c\u76f4\u63a5\u8fd4\u56de\n        average = total / k;\n\n        return dfs(buckets, 0);\n    }\n};\n")))}p.isMDXComponent=!0}}]);
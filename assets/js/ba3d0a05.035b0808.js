"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[60098],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(t),f=o,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||l;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=f;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a[d]="string"==typeof e?e:o,i[1]=a;for(var c=2;c<l;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},63438:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const l={},i=void 0,a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-36-\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-36-\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868",title:"\u5251\u6307Offer-36-\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868",description:"\u9898\u76ee\uff1a\u5251\u6307 Offer 36. \u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-36-\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-36-\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-36-\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"\u5251\u6307Offer-35-\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-35-\u590d\u6742\u94fe\u8868\u7684\u590d\u5236"},next:{title:"\u5251\u6307Offer-II-021-\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cn\u4e2a\u7ed3\u70b9",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-021-\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2cn\u4e2a\u7ed3\u70b9"}},s={},c=[],p={toc:c};function d(e){let{components:n,...l}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof/"},"\u5251\u6307 Offer 36. \u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868")),(0,o.kt)("p",null,"\u8f93\u5165\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5c06\u8be5\u4e8c\u53c9\u641c\u7d22\u6811\u8f6c\u6362\u6210\u4e00\u4e2a\u6392\u5e8f\u7684\u5faa\u73af\u53cc\u5411\u94fe\u8868\u3002\u8981\u6c42\u4e0d\u80fd\u521b\u5efa\u4efb\u4f55\u65b0\u7684\u8282\u70b9\uff0c\u53ea\u80fd\u8c03\u6574\u6811\u4e2d\u8282\u70b9\u6307\u9488\u7684\u6307\u5411\u3002"),(0,o.kt)("p",null,"\u4e3a\u4e86\u8ba9\u60a8\u66f4\u597d\u5730\u7406\u89e3\u95ee\u9898\uff0c\u4ee5\u4e0b\u9762\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u4e3a\u4f8b\uff1a"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:t(86727).Z,width:"681",height:"392"})),(0,o.kt)("p",null,"\u6211\u4eec\u5e0c\u671b\u5c06\u8fd9\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u8f6c\u5316\u4e3a\u53cc\u5411\u5faa\u73af\u94fe\u8868\u3002\u94fe\u8868\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u524d\u9a71\u548c\u540e\u7ee7\u6307\u9488\u3002\u5bf9\u4e8e\u53cc\u5411\u5faa\u73af\u94fe\u8868\uff0c\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u524d\u9a71\u662f\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u7ee7\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002"),(0,o.kt)("p",null,"\u4e0b\u56fe\u5c55\u793a\u4e86\u4e0a\u9762\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u8f6c\u5316\u6210\u7684\u94fe\u8868\u3002\u201chead\u201d \u8868\u793a\u6307\u5411\u94fe\u8868\u4e2d\u6709\u6700\u5c0f\u5143\u7d20\u7684\u8282\u70b9\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:t(2710).Z,width:"1149",height:"375"})),(0,o.kt)("p",null,"\u7279\u522b\u5730\uff0c\u6211\u4eec\u5e0c\u671b\u53ef\u4ee5\u5c31\u5730\u5b8c\u6210\u8f6c\u6362\u64cd\u4f5c\u3002\u5f53\u8f6c\u5316\u5b8c\u6210\u4ee5\u540e\uff0c\u6811\u4e2d\u8282\u70b9\u7684\u5de6\u6307\u9488\u9700\u8981\u6307\u5411\u524d\u9a71\uff0c\u6811\u4e2d\u8282\u70b9\u7684\u53f3\u6307\u9488\u9700\u8981\u6307\u5411\u540e\u7ee7\u3002\u8fd8\u9700\u8981\u8fd4\u56de\u94fe\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002 "),(0,o.kt)("p",null,"\u6ce8\u610f\uff1a\u672c\u9898\u4e0e\u4e3b\u7ad9 426 \u9898\u76f8\u540c\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/"},"https://leetcode-cn.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/")),(0,o.kt)("p",null,"\u6ce8\u610f\uff1a\u6b64\u9898\u5bf9\u6bd4\u539f\u9898\u6709\u6539\u52a8\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n        left = NULL;\n        right = NULL;\n    }\n\n    Node(int _val, Node* _left, Node* _right) {\n        val = _val;\n        left = _left;\n        right = _right;\n    }\n};\n*/\nclass Solution {\npublic:\n    vector<Node*> node_list;\n\n    void dfs(Node* node) {\n        if (node == nullptr) return;\n        dfs(node->left);\n        node_list.push_back(node);\n        dfs(node->right);\n    }\n    Node* treeToDoublyList(Node* root) {\n        if (root == nullptr) return root;\n        dfs(root);\n\n        int n = node_list.size();\n        for (int i = 0; i < n - 1; i++) {\n            node_list[i]->right = node_list[i + 1];\n        }\n        node_list[n - 1]->right = node_list[0];\n        for (int i = n - 1; i > 0; i--) {\n            node_list[i]->left = node_list[i - 1];\n        }\n        node_list[0]->left = node_list[n - 1];\n\n        return node_list[0];\n    }\n};\n")),(0,o.kt)("p",null,"\u539f\u5730\u7b97\u6cd5"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    Node* treeToDoublyList(Node* root) {\n        if (root == nullptr) return nullptr;\n        dfs(root);\n        head->left = pre;\n        pre->right = head;\n        return head;\n    }\n\nprivate:\n    Node *pre, *head;\n    void dfs(Node* cur) {\n        if (cur == nullptr) return;\n        dfs(cur->left);\n        if (pre != nullptr) {\n            pre->right = cur;\n        } else {\n            head = cur;\n        }\n        cur->left = pre;\n        pre = cur;\n        dfs(cur->right);\n    }\n};\n\n")))}d.isMDXComponent=!0},86727:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/bstdlloriginalbst-f9e2ecbd4718b481763518198eddac00.png"},2710:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/bstdllreturndll-dd851af1ada7526a24235627b76999a3.png"}}]);
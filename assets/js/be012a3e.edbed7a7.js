"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3815],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>f});var r=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var m=r.createContext({}),u=function(n){var e=r.useContext(m),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},p=function(n){var e=u(n.components);return r.createElement(m.Provider,{value:e},n.children)},s="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,m=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),s=u(t),d=o,f=s["".concat(m,".").concat(d)]||s[d]||c[d]||i;return t?r.createElement(f,a(a({ref:e},p),{},{components:t})):r.createElement(f,a({ref:e},p))}));function f(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,a=new Array(i);a[0]=d;var l={};for(var m in e)hasOwnProperty.call(e,m)&&(l[m]=e[m]);l.originalType=n,l[s]="string"==typeof n?n:o,a[1]=l;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},74317:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>m,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(87462),o=(t(67294),t(3905));const i={},a=void 0,l={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u4e8c\u5206\u6cd5/<\u91cd\u8981-lower_bound\u5e94\u7528>-\u7edd\u5bf9\u5dee\u503c\u548c",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u4e8c\u5206\u6cd5/<\u91cd\u8981-lower_bound\u5e94\u7528>-\u7edd\u5bf9\u5dee\u503c\u548c",title:"<\u91cd\u8981-lower_bound\u5e94\u7528>-\u7edd\u5bf9\u5dee\u503c\u548c",description:"1818. \u7edd\u5bf9\u5dee\u503c\u548c",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u4e8c\u5206\u6cd5/1818-<\u91cd\u8981-lower_bound\u5e94\u7528>-\u7edd\u5bf9\u5dee\u503c\u548c.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u4e8c\u5206\u6cd5",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u4e8c\u5206\u6cd5/<\u91cd\u8981-lower_bound\u5e94\u7528>-\u7edd\u5bf9\u5dee\u503c\u548c",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u4e8c\u5206\u6cd5/<\u91cd\u8981-lower_bound\u5e94\u7528>-\u7edd\u5bf9\u5dee\u503c\u548c",draft:!1,tags:[],version:"current",sidebarPosition:1818,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u5c71\u8109\u6570\u7ec4-\u7efc\u5408\u9898>-\u5c71\u8109\u6570\u7ec4\u4e2d\u67e5\u627e\u76ee\u6807\u503c",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u4e8c\u5206\u6cd5/<\u5c71\u8109\u6570\u7ec4-\u7efc\u5408\u9898>-\u5c71\u8109\u6570\u7ec4\u4e2d\u67e5\u627e\u76ee\u6807\u503c"},next:{title:"<\u81f3\u5c11\u5bf9\u8fb9\u754c\u7684\u5f71\u54cd>-\u5b8c\u6210\u65c5\u9014\u7684\u6700\u5c11\u65f6\u95f4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u4e8c\u5206\u6cd5/<\u81f3\u5c11\u5bf9\u8fb9\u754c\u7684\u5f71\u54cd>-\u5b8c\u6210\u65c5\u9014\u7684\u6700\u5c11\u65f6\u95f4"}},m={},u=[{value:"\u65b9\u6cd5\uff1a\u6392\u5e8f+\u4e8c\u5206",id:"\u65b9\u6cd5\u6392\u5e8f\u4e8c\u5206",level:2}],p={toc:u};function s(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/minimum-absolute-sum-difference/"},"1818. \u7edd\u5bf9\u5dee\u503c\u548c")),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e24\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 ",(0,o.kt)("inlineCode",{parentName:"p"},"nums1")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"nums2")," \uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u90fd\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"n")," \u3002"),(0,o.kt)("p",null,"\u6570\u7ec4 ",(0,o.kt)("inlineCode",{parentName:"p"},"nums1")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"nums2")," \u7684 ",(0,o.kt)("strong",{parentName:"p"},"\u7edd\u5bf9\u5dee\u503c\u548c")," \u5b9a\u4e49\u4e3a\u6240\u6709 ",(0,o.kt)("inlineCode",{parentName:"p"},"|nums1[i] - nums2[i]|"),"\uff08",(0,o.kt)("inlineCode",{parentName:"p"},"0 <= i < n"),"\uff09\u7684 ",(0,o.kt)("strong",{parentName:"p"},"\u603b\u548c"),"\uff08",(0,o.kt)("strong",{parentName:"p"},"\u4e0b\u6807\u4ece 0 \u5f00\u59cb"),"\uff09\u3002"),(0,o.kt)("p",null,"\u4f60\u53ef\u4ee5\u9009\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"nums1")," \u4e2d\u7684 ",(0,o.kt)("strong",{parentName:"p"},"\u4efb\u610f\u4e00\u4e2a")," \u5143\u7d20\u6765\u66ff\u6362 ",(0,o.kt)("inlineCode",{parentName:"p"},"nums1")," \u4e2d\u7684 ",(0,o.kt)("strong",{parentName:"p"},"\u81f3\u591a")," \u4e00\u4e2a\u5143\u7d20\uff0c\u4ee5 ",(0,o.kt)("strong",{parentName:"p"},"\u6700\u5c0f\u5316")," \u7edd\u5bf9\u5dee\u503c\u548c\u3002"),(0,o.kt)("p",null,"\u5728\u66ff\u6362\u6570\u7ec4 ",(0,o.kt)("inlineCode",{parentName:"p"},"nums1")," \u4e2d\u6700\u591a\u4e00\u4e2a\u5143\u7d20 ",(0,o.kt)("strong",{parentName:"p"},"\u4e4b\u540e")," \uff0c\u8fd4\u56de\u6700\u5c0f\u7edd\u5bf9\u5dee\u503c\u548c\u3002\u56e0\u4e3a\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u6240\u4ee5\u9700\u8981\u5bf9 ",(0,o.kt)("inlineCode",{parentName:"p"},"109 + 7")," ",(0,o.kt)("strong",{parentName:"p"},"\u53d6\u4f59")," \u540e\u8fd4\u56de\u3002"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"|x|")," \u5b9a\u4e49\u4e3a\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5982\u679c ",(0,o.kt)("inlineCode",{parentName:"li"},"x >= 0")," \uff0c\u503c\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"x")," \uff0c\u6216\u8005"),(0,o.kt)("li",{parentName:"ul"},"\u5982\u679c ",(0,o.kt)("inlineCode",{parentName:"li"},"x <= 0")," \uff0c\u503c\u4e3a ",(0,o.kt)("inlineCode",{parentName:"li"},"-x"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anums1 = [1,7,5], nums2 = [2,3,5]\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u6700\u4f18\u65b9\u6848\uff1a\n- \u5c06\u7b2c\u4e8c\u4e2a\u5143\u7d20\u66ff\u6362\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff1a[1,7,5] => [1,1,5] \uff0c\u6216\u8005\n- \u5c06\u7b2c\u4e8c\u4e2a\u5143\u7d20\u66ff\u6362\u4e3a\u7b2c\u4e09\u4e2a\u5143\u7d20\uff1a[1,7,5] => [1,5,5]\n\u4e24\u79cd\u65b9\u6848\u7684\u7edd\u5bf9\u5dee\u503c\u548c\u90fd\u662f |1-2| + (|1-3| \u6216\u8005 |5-3|) + |5-5| = 3\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1anums1 = [2,4,6,8,10], nums2 = [2,4,6,8,10]\n\u8f93\u51fa\uff1a0\n\u89e3\u91ca\uff1anums1 \u548c nums2 \u76f8\u7b49\uff0c\u6240\u4ee5\u4e0d\u7528\u66ff\u6362\u5143\u7d20\u3002\u7edd\u5bf9\u5dee\u503c\u548c\u4e3a 0\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1anums1 = [1,10,4,4,2,7], nums2 = [9,3,5,1,7,4]\n\u8f93\u51fa\uff1a20\n\u89e3\u91ca\uff1a\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u66ff\u6362\u4e3a\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff1a[1,10,4,4,2,7] => [10,10,4,4,2,7]\n\u7edd\u5bf9\u5dee\u503c\u548c\u4e3a |10-9| + |10-3| + |4-5| + |4-1| + |2-7| + |7-4| = 20\n")),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("p",null,"n == nums1.length\nn == nums2.length\n1 <= n <= 105\n1 <= nums1","[i]",", nums2","[i]"," <= 105"),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u6392\u5e8f\u4e8c\u5206"},"\u65b9\u6cd5\uff1a\u6392\u5e8f+\u4e8c\u5206"),(0,o.kt)("p",null,"\u6211\u4eec\u5728\u8fdb\u884c\u5904\u7406\u524d\uff0c",(0,o.kt)("strong",{parentName:"p"},"\u5148\u5bf9 nums1 \u8fdb\u884c\u300c\u62f7\u8d1d\u6392\u5e8f\u300d"),"\uff0c\u56e0\u4e3a nums1 \u548c nums2 \u7684\u4f4d\u7f6e\u662f\u76f8\u5bf9\u5e94\u7684"),(0,o.kt)("p",null,"\u7136\u540e \u5728\u904d\u5386 nums1 \u548c nums2 \u8ba1\u7b97\u603b\u7684\u5dee\u503c sum \u65f6\uff0c",(0,o.kt)("strong",{parentName:"p"},"\u901a\u8fc7\u5bf9\u6392\u8fc7\u5e8f\u7684 nums1 \u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230\u300c\u6700\u5408\u9002\u300d\u66ff\u6362 nums","[i]"," \u7684\u503c")),(0,o.kt)("p",null,"\u5177\u4f53\u7684\uff0c\u5f53\u6211\u4eec\u5904\u7406\u5230\u7b2c i \u4f4d\u65f6\uff0c\u5047\u8bbe\u8be5\u4f4d\u7684\u539f\u5dee\u503c\u4e3a x = abs(nums1","[i]"," - nums2","[i]",")\uff0c\u7136\u540e\u4ece nums1 \u4e2d\u901a\u8fc7\u4e8c\u5206\u627e\u5230\u6700\u63a5\u8fd1 nums2","[i]"," \u7684\u503c\uff0c\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u5dee\u503c nd\uff08\u6ce8\u610f\u8981\u68c0\u67e5\u5206\u5272\u70b9\u4e0e\u5206\u5272\u70b9\u7684\u4e0b\u4e00\u4f4d\uff09\uff0c\u5982\u679c\u6ee1\u8db3 nd < x \u8bf4\u660e\u5b58\u5728\u4e00\u4e2a\u66ff\u6362\u65b9\u6848\u4f7f\u5f97\u5dee\u503c\u53d8\u5c0f\uff0c\u6211\u4eec\u4f7f\u7528\u53d8\u91cf maxn \u8bb0\u4e0b\u6765\u8fd9\u4e2a\u66ff\u6362\u65b9\u6848\u6240\u5e26\u6765\u7684\u53d8\u5316\uff08\u540e\u534a\u622a\u5dee\u7684\uff09\uff0c\u5e76\u4e0d\u65ad\u66f4\u65b0 maxn\u3002"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u603b\u5dee\u7684(diff) - \u524d\u534a\u622a\u5dee\u7684 = \u540e\u534a\u622a\u5dee\u7684")),(0,o.kt)("p",null,"\u5f53\u6574\u4e2a\u6570\u7ec4\u88ab\u5904\u7406\u5b8c\uff0cmaxn \u5b58\u50a8\u7740\u540e\u534a\u622a\u5dee\u7684\u6700\u5927\u7684\uff0c\u6b64\u65f6 sum - maxn \u5373\u662f\u5176\u4f59\u503c\u7684 diff\u548c + \u524d\u534a\u622a\u5dee\u7684\u6700\u5c0f\u7684\uff0c\u5c31\u662f\u7b54\u6848"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"const int mod = 1e9 + 7;\n\nclass Solution {\npublic:\n    int minAbsoluteSumDiff(vector<int>& nums1, vector<int>& nums2) {\n        int n = nums1.size();\n        vector<int> nums1_copy(nums1);\n        sort(nums1_copy.begin(), nums1_copy.end());\n        long long sum = 0;\n        int maxn = 0;\n        for (int i = 0; i < n; i++) {\n            int val1 = nums1[i];  // \u6ce8\u610f\u8fd9\u91cc\u4f7f\u7528\u539f\u6570\u7ec4 nums1 \u4e2d\u53d6\u503c\n            int val2 = nums2[i];\n            int diff = abs(val1 - val2);\n            sum += diff;\n\n            int idx = lower_bound(nums1_copy.begin(), nums1_copy.end(), val2) - nums1_copy.begin();\n            if (idx < n) {\n                maxn = max(maxn, diff - (nums1_copy[idx] - val2));\n            }\n            if (idx > 0) {\n                maxn = max(maxn, diff - (val2 - nums1_copy[idx - 1]));\n            }\n        }\n        return (sum - maxn) % mod;\n    }\n};\n")))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[28347],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>f});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var p=r.createContext({}),u=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},c=function(n){var e=u(n.components);return r.createElement(p.Provider,{value:e},n.children)},s="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,p=n.parentName,c=o(n,["components","mdxType","originalType","parentName"]),s=u(t),k=i,f=s["".concat(p,".").concat(k)]||s[k]||m[k]||a;return t?r.createElement(f,l(l({ref:e},c),{},{components:t})):r.createElement(f,l({ref:e},c))}));function f(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,l=new Array(a);l[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=n,o[s]="string"==typeof n?n:i,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},79185:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var r=t(87462),i=(t(67294),t(3905));const a={},l=void 0,o={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u526a\u679d>-\u7b2ck\u4e2a\u6392\u5217",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u526a\u679d>-\u7b2ck\u4e2a\u6392\u5217",title:"<\u526a\u679d>-\u7b2ck\u4e2a\u6392\u5217",description:"\u9898\u76ee\uff1a60. \u6392\u5217\u5e8f\u5217",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS/60-<\u526a\u679d>-\u7b2ck\u4e2a\u6392\u5217.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u526a\u679d>-\u7b2ck\u4e2a\u6392\u5217",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u526a\u679d>-\u7b2ck\u4e2a\u6392\u5217",draft:!1,tags:[],version:"current",sidebarPosition:60,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5c42\u56de\u6eaf-vis\u8bbe\u8ba1>-N\u7687\u540ell",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u5c42\u56de\u6eaf-vis\u8bbe\u8ba1>-N\u7687\u540ell"},next:{title:"<\u52a8\u6001\u66f4\u65b0\u56de\u6eaf\u5934>-\u7ec4\u5408",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u52a8\u6001\u66f4\u65b0\u56de\u6eaf\u5934>-\u7ec4\u5408"}},p={},u=[{value:"\u56de\u6eaf\u5230\u7b2cK\u4e2a\uff0c\u5c31\u8df3\u51fa\u9012\u5f52",id:"\u56de\u6eaf\u5230\u7b2ck\u4e2a\u5c31\u8df3\u51fa\u9012\u5f52",level:2},{value:"\u526a\u679d",id:"\u526a\u679d",level:2}],c={toc:u};function s(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/permutation-sequence/"},"60. \u6392\u5217\u5e8f\u5217")),(0,i.kt)("p",null,"\u7ed9\u51fa\u96c6\u5408 ",(0,i.kt)("inlineCode",{parentName:"p"},"[1,2,3,...,n]"),"\uff0c\u5176\u6240\u6709\u5143\u7d20\u5171\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"n!")," \u79cd\u6392\u5217\u3002"),(0,i.kt)("p",null,"\u6309\u5927\u5c0f\u987a\u5e8f\u5217\u51fa\u6240\u6709\u6392\u5217\u60c5\u51b5\uff0c\u5e76\u4e00\u4e00\u6807\u8bb0\uff0c\u5f53 ",(0,i.kt)("inlineCode",{parentName:"p"},"n = 3")," \u65f6, \u6240\u6709\u6392\u5217\u5982\u4e0b\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"123"')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"132"')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"213"')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"231"')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"312"')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},'"321"'))),(0,i.kt)("p",null,"\u7ed9\u5b9a ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"k"),"\uff0c\u8fd4\u56de\u7b2c ",(0,i.kt)("inlineCode",{parentName:"p"},"k")," \u4e2a\u6392\u5217\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1an = 3, k = 3\n\u8f93\u51fa\uff1a"213"\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1an = 4, k = 9\n\u8f93\u51fa\uff1a"2314"\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1an = 3, k = 1\n\u8f93\u51fa\uff1a"123"\n\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= n <= 9")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= k <= n!"))),(0,i.kt)("h2",{id:"\u56de\u6eaf\u5230\u7b2ck\u4e2a\u5c31\u8df3\u51fa\u9012\u5f52"},"\u56de\u6eaf\u5230\u7b2cK\u4e2a\uff0c\u5c31\u8df3\u51fa\u9012\u5f52"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    int n;\n    int k;\n    int cnt = 0;\n    vector<int> vis;\n    string ans;\n    // cur \u5f53\u524dpath\u4e2d\u7684\u6570\u91cf\n    bool dfs(int cur, string &path) {\n        if (cur == n) {\n            cnt++;\n            if (cnt == k) {\n                ans = path;\n                return true;\n            }\n            return false;\n        }\n        for (int i = 1; i <= n; i++) {\n            if (vis[i]) continue;\n            vis[i] = 1;\n            path += 48 + i;\n            if (dfs(cur + 1, path)) return true;\n            path.pop_back();\n            vis[i] = 0;\n        }\n        return false;\n    }\n\n    string getPermutation(int _n, int _k) {\n        n = _n;\n        k = _k;\n        vis.resize(n + 1, 0);\n\n        string path = "";\n        dfs(0, path);\n        return ans;\n    }\n};\n')),(0,i.kt)("h2",{id:"\u526a\u679d"},"\u526a\u679d"),(0,i.kt)("p",null,"\u660e\u663e\u8be5\u9898\u76ee\u662f\u53ea\u6c42\u7b2cK\u4e2a\u6392\u5217\uff0c\u4e0d\u9700\u8981\u679a\u4e3e\u6240\u6709\u6392\u5217\u3002\u90a3\u4e48\u5982\u4f55\u63d0\u524d\u8fd4\u56de\uff08\u51cf\u679d\uff09\u5462\u3002"),(0,i.kt)("p",null,"\u6bcf\u4e2a\u5206\u652f\u7684\u6392\u5217\u6570\u91cfcount\u662f\u53ef\u4ee5\u6c42\u51fa\u6765\u7684\uff0c(n-1)!"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5982\u679ck\u5927\u4e8ecount\uff0c\u8bf4\u660e\u7b2cK\u4e2a\u4e0d\u5728\u6b64\u5206\u652f\uff0ck\u51cf\u53bb\u8be5\u5206\u652f\u7684\u6570\u91cf\uff0c\u8fdb\u884c\u540c\u5c42\u4e0b\u4e00\u4e2a\u5206\u652f\u7684\u5224\u65ad")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5982\u679c\u5c0f\u4e8ecount\uff0c\u8bf4\u660e\u5728\u6b64\u5206\u652f\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u5c42\uff0c\u7ee7\u7eed\u6309\u7167\u4e0a\u9762\u7684\u89c4\u5219\u9012\u5f52"))),(0,i.kt)("p",null,"\u8fd9\u79cd\u56de\u6eaf\u6cd5\uff0c\u5199\u6cd5\u4e0a\u6709\u5c0f\u6280\u5de7\uff1a\u6bd4\u5982\u6bcf\u6b21\u90fd\u6709path\uff08\u5df2\u7ecf\u904d\u5386\u7684\u8def\u5f84\uff09\u548cremain\uff08\u5269\u4f59\u9700\u8981\u904d\u5386\u7684\u8282\u70b9\uff09"),(0,i.kt)("p",null,"\u590d\u6742\u5ea6\u5206\u6790\uff1a"),(0,i.kt)("p",null,"Space\uff1aO(N)"),(0,i.kt)("p",null,"Time: O(N^2) \u6700\u574f\u9700\u89811+2+...+n\u6b21\u6bd4\u8f83"),(0,i.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a0 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e86100.00%\u7684\u7528\u6237"),(0,i.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a5.8 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8655.34%\u7684\u7528\u6237"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    int n;\n    int k;\n    int cnt = 0;\n    vector<int> vis;\n    string ans;\n\n    int gen(int m) {\n        int res = 1;\n        while (m > 0) {\n            res *= m;\n            --m;\n        }\n        return res;\n    }\n    // cur \u5f53\u524dpath\u4e2d\u7684\u6570\u91cf\uff0ccnt \u4e3a\u5f53\u524dpath\u7684\u6392\u540d\uff08\u4e5f\u8868\u793a\u524d\u9762\u6709\u591a\u5c11\u4e2a\u5c0f\u7684path\uff09\n    bool dfs(int cur, string &path) {\n        if (cur == n) {\n            cnt++;\n            if (cnt == k) {\n                ans = path;\n                return true;\n            }\n            return false;\n        }\n\n        int possible_times = gen(n - cur - 1);  // \u6b64\u6761\u5206\u652f\u6709\u591a\u5c11\u79cd\u9009\u62e9\uff0c\u540c\u5c42\u4e2d\u6bcf\u4e2a\u5206\u652f\u9009\u62e9\u6570\u91cf\u4e00\u6837\n        for (int i = 1; i <= n; i++) {\n            if (vis[i]) continue;\n\n            // \u5982\u679c\u524d\u9762\u5df2\u6709\u5c0f\u7684\u6570\u91cf + \u6b64\u6761\u5206\u652f\u7684\u53ef\u80fd\u6570 < k\n            // \u8bf4\u660e\u4e0d\u5728\u6b64\u6761\u5206\u652f\u4e0a\uff0c\u5728\u540e\u9762\u7684\u5206\u652f\u4e0a\n            if (cnt + possible_times < k) {\n                // cout << cnt << " " << possible_times << endl;\n                cnt += possible_times;\n                continue;\n            }\n\n            vis[i] = 1;\n            path += 48 + i;\n            if (dfs(cur + 1, path)) return true;\n            path.pop_back();\n            vis[i] = 0;\n        }\n        return false;\n    }\n\n    string getPermutation(int _n, int _k) {\n        n = _n;\n        k = _k;\n        vis.resize(n + 1, 0);\n\n        string path = "";\n        dfs(0, path);\n        return ans;\n    }\n};\n')))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[45453],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=u(r),f=a,d=s["".concat(i,".").concat(f)]||s[f]||m[f]||o;return r?n.createElement(d,l(l({ref:t},c),{},{components:r})):n.createElement(d,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=f;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[s]="string"==typeof e?e:a,l[1]=p;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},48998:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const o={},l=void 0,p={unversionedId:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u8bb0\u5f55\u8def\u5f84\u503c>-\u8def\u5f84\u603b\u548c",id:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u8bb0\u5f55\u8def\u5f84\u503c>-\u8def\u5f84\u603b\u548c",title:"<\u8bb0\u5f55\u8def\u5f84\u503c>-\u8def\u5f84\u603b\u548c",description:"\u9898\u76ee\uff1a112. \u8def\u5f84\u603b\u548c",source:"@site/docs/Algorithm/6-\u7cfb\u5217\u9898\u76ee/06-\u6811\u7684\u8def\u5f84\u95ee\u9898/112-<\u8bb0\u5f55\u8def\u5f84\u503c>-\u8def\u5f84\u603b\u548c.md",sourceDirName:"Algorithm/6-\u7cfb\u5217\u9898\u76ee/06-\u6811\u7684\u8def\u5f84\u95ee\u9898",slug:"/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u8bb0\u5f55\u8def\u5f84\u503c>-\u8def\u5f84\u603b\u548c",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u8bb0\u5f55\u8def\u5f84\u503c>-\u8def\u5f84\u603b\u548c",draft:!1,tags:[],version:"current",sidebarPosition:112,frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u8def\u5f84\u95ee\u9898",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/"},next:{title:"<\u8bb0\u5f55\u8def\u5f84>-\u8def\u5f84\u603b\u548cII",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u8bb0\u5f55\u8def\u5f84>-\u8def\u5f84\u603b\u548cII"}},i={},u=[],c={toc:u};function s(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u9898\u76ee\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/path-sum/"},"112. \u8def\u5f84\u603b\u548c")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," \u548c\u4e00\u4e2a\u8868\u793a\u76ee\u6807\u548c\u7684\u6574\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"targetSum")," \u3002\u5224\u65ad\u8be5\u6811\u4e2d\u662f\u5426\u5b58\u5728 ",(0,a.kt)("strong",{parentName:"p"},"\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9")," \u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u503c\u76f8\u52a0\u7b49\u4e8e\u76ee\u6807\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"targetSum")," \u3002\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," \uff1b\u5426\u5219\uff0c\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," \u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u53f6\u5b50\u8282\u70b9")," \u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/01/18/pathsum1.jpg",alt:"img"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a\u7b49\u4e8e\u76ee\u6807\u548c\u7684\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u8def\u5f84\u5982\u4e0a\u56fe\u6240\u793a\u3002\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg",alt:"img"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = [1,2,3], targetSum = 5\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u6811\u4e2d\u5b58\u5728\u4e24\u6761\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\uff1a\n(1 --\x3e 2): \u548c\u4e3a 3\n(1 --\x3e 3): \u548c\u4e3a 4\n\u4e0d\u5b58\u5728 sum = 5 \u7684\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u3002\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 3\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1aroot = [], targetSum = 0\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u7531\u4e8e\u6811\u662f\u7a7a\u7684\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u3002\n")),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("p",null,"\u6811\u4e2d\u8282\u70b9\u7684\u6570\u76ee\u5728\u8303\u56f4 ","[0, 5000]"," \u5185\n-1000 <= Node.val <= 1000\n-1000 <= targetSum <= 1000"),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int target;\n    bool dfs(TreeNode* cur, int path) {\n        if (!cur) return false;\n        path += cur->val;\n        if (!cur->left && !cur->right) {\n            if (path == target) return true;\n            return false;\n        }\n        if (dfs(cur->left, path)) return true;\n        if (dfs(cur->right, path)) return true;\n        return false;\n    }\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        target = targetSum;\n        bool ans = dfs(root, 0);\n        return ans;\n    }\n};\n")))}s.isMDXComponent=!0}}]);
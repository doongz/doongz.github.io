"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[26534],{3905:(n,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>d});var t=r(67294);function i(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}function l(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.push.apply(r,t)}return r}function o(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){i(n,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}))}return n}function p(n,e){if(null==n)return{};var r,t,i=function(n,e){if(null==n)return{};var r,t,i={},l=Object.keys(n);for(t=0;t<l.length;t++)r=l[t],e.indexOf(r)>=0||(i[r]=n[r]);return i}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(t=0;t<l.length;t++)r=l[t],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(i[r]=n[r])}return i}var s=t.createContext({}),a=function(n){var e=t.useContext(s),r=e;return n&&(r="function"==typeof n?n(e):o(o({},e),n)),r},u=function(n){var e=a(n.components);return t.createElement(s.Provider,{value:e},n.children)},m="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},f=t.forwardRef((function(n,e){var r=n.components,i=n.mdxType,l=n.originalType,s=n.parentName,u=p(n,["components","mdxType","originalType","parentName"]),m=a(r),f=i,d=m["".concat(s,".").concat(f)]||m[f]||c[f]||l;return r?t.createElement(d,o(o({ref:e},u),{},{components:r})):t.createElement(d,o({ref:e},u))}));function d(n,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var l=r.length,o=new Array(l);o[0]=f;var p={};for(var s in e)hasOwnProperty.call(e,s)&&(p[s]=e[s]);p.originalType=n,p[m]="string"==typeof n?n:i,o[1]=p;for(var a=2;a<l;a++)o[a]=r[a];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},92737:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>a});var t=r(87462),i=(r(67294),r(3905));const l={},o=void 0,p={unversionedId:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u6700\u957f\u5b50\u6570\u7ec4\u548c\u53d8\u5f62\u9898>-\u62fc\u63a5\u6570\u7ec4\u7684\u6700\u5927\u5206\u6570",id:"Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u6700\u957f\u5b50\u6570\u7ec4\u548c\u53d8\u5f62\u9898>-\u62fc\u63a5\u6570\u7ec4\u7684\u6700\u5927\u5206\u6570",title:"<\u6700\u957f\u5b50\u6570\u7ec4\u548c\u53d8\u5f62\u9898>-\u62fc\u63a5\u6570\u7ec4\u7684\u6700\u5927\u5206\u6570",description:"\u9898\u76ee\uff1a2321. \u62fc\u63a5\u6570\u7ec4\u7684\u6700\u5927\u5206\u6570",source:"@site/docs/Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/2321-<\u6700\u957f\u5b50\u6570\u7ec4\u548c\u53d8\u5f62\u9898>-\u62fc\u63a5\u6570\u7ec4\u7684\u6700\u5927\u5206\u6570.md",sourceDirName:"Algorithm/3-\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP",slug:"/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u6700\u957f\u5b50\u6570\u7ec4\u548c\u53d8\u5f62\u9898>-\u62fc\u63a5\u6570\u7ec4\u7684\u6700\u5927\u5206\u6570",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u6700\u957f\u5b50\u6570\u7ec4\u548c\u53d8\u5f62\u9898>-\u62fc\u63a5\u6570\u7ec4\u7684\u6700\u5927\u5206\u6570",draft:!1,tags:[],version:"current",sidebarPosition:2321,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u5e8f\u5217\u95ee\u9898>-\u5b57\u7b26\u4e32\u7684\u603b\u5f15\u529b",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u5e8f\u5217DP/<\u5e8f\u5217\u95ee\u9898>-\u5b57\u7b26\u4e32\u7684\u603b\u5f15\u529b"},next:{title:"<\u6570\u5b66\u601d\u8def>-\u7edf\u8ba1\u5404\u4f4d\u6570\u5b57\u90fd\u4e0d\u540c\u7684\u6570\u5b57\u4e2a\u6570",permalink:"/docs/Algorithm/\u52a8\u6001\u89c4\u5212/\u4f8b\u9898-\u6570\u4f4dDP/<\u6570\u5b66\u601d\u8def>-\u7edf\u8ba1\u5404\u4f4d\u6570\u5b57\u90fd\u4e0d\u540c\u7684\u6570\u5b57\u4e2a\u6570"}},s={},a=[{value:"\u65b9\u6cd5\u4e00\uff1a\u8f6c\u5316\u4e3a\u6700\u957f\u5b50\u6570\u7ec4\u548c",id:"\u65b9\u6cd5\u4e00\u8f6c\u5316\u4e3a\u6700\u957f\u5b50\u6570\u7ec4\u548c",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u524d\u7f00\u548c + \u4e24\u6b21\u6ed1\u52a8\u7a97\u53e3\uff08\u6bd4\u8d5b\u65f6\u7684\u5199\u6cd5\uff09",id:"\u65b9\u6cd5\u4e8c\u524d\u7f00\u548c--\u4e24\u6b21\u6ed1\u52a8\u7a97\u53e3\u6bd4\u8d5b\u65f6\u7684\u5199\u6cd5",level:2}],u={toc:a};function m(n){let{components:e,...r}=n;return(0,i.kt)("wrapper",(0,t.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/maximum-score-of-spliced-array/"},"2321. \u62fc\u63a5\u6570\u7ec4\u7684\u6700\u5927\u5206\u6570")),(0,i.kt)("p",null,"\u9898\u89e3\u6765\u6e90\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/maximum-score-of-spliced-array/solution/by-endlesscheng-fm8l/"},"https://leetcode.cn/problems/maximum-score-of-spliced-array/solution/by-endlesscheng-fm8l/")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u8f6c\u5316\u4e3a\u6700\u957f\u5b50\u6570\u7ec4\u548c"},"\u65b9\u6cd5\u4e00\uff1a\u8f6c\u5316\u4e3a\u6700\u957f\u5b50\u6570\u7ec4\u548c"),(0,i.kt)("p",null,"\u8bbe $s",(0,i.kt)("em",{parentName:"p"},"1 = \\sum"),"{i}nums_1","[i]","$"),(0,i.kt)("p",null,"\u4ea4\u6362 ","[left, right]"," \u8303\u56f4\u5185\u7684\u5143\u7d20\u540e\uff0c\u5bf9\u4e8e $nums_1^{\\prime}$\n$$\n\\sum nums_1^{\\prime}","[i]"," = s_1 - (nums_1","[left]"," + ... + nums_1","[right]",") + (nums_2","[left]"," + ... + nums_2","[right]",")\n$$\n\u5408\u5e76\u76f8\u540c\u4e0b\u6807\uff0c\u7b49\u53f7\u53f3\u4fa7\u53d8\u5f62\u4e3a\n$$\ns_1 + (nums_2","[left]"," - nums_1","[left]",") + ... + (nums_2","[right]"," - nums_1","[right]",")\n$$\n\u4e3a\u4e86\u6700\u5927\u5316\u4e0a\u5f0f\uff0c\u8f6c\u5316\u4e3a\u300c\u5e8f\u5217DP\u300d\u4e2d\u7684\u300c\u6700\u957f\u5b50\u6570\u7ec4\u548c\u300d\u95ee\u9898"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(1)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int solv(vector<int>& nums1, vector<int>& nums2) {\n        int n = nums1.size();\n        int s1 = 0;\n        int sub = 0;\n        int maxSub = 0;\n\n        for (int i = 0; i < n; i++) {\n            s1 += nums1[i];\n            int tmp = sub + nums2[i] - nums1[i];\n            if (tmp > 0) {\n                sub = tmp;\n            } else {\n                sub = 0;\n            }\n            maxSub = max(maxSub, sub);\n        }\n        return s1 + maxSub;\n    }\n\n    int maximumsSplicedArray(vector<int>& nums1, vector<int>& nums2) {\n        return max(solv(nums1, nums2), solv(nums2, nums1));\n    }\n};\n")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u524d\u7f00\u548c--\u4e24\u6b21\u6ed1\u52a8\u7a97\u53e3\u6bd4\u8d5b\u65f6\u7684\u5199\u6cd5"},"\u65b9\u6cd5\u4e8c\uff1a\u524d\u7f00\u548c + \u4e24\u6b21\u6ed1\u52a8\u7a97\u53e3\uff08\u6bd4\u8d5b\u65f6\u7684\u5199\u6cd5\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def maximumsSplicedArray(self, nums1: List[int], nums2: List[int]) -> int:\n        # \u53ea\u4e00\u6b21 \u6216\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\n        # \u5c3d\u91cf\u5c06\u53e6\u4e00\u4e2a\u6570\u7ec4\u53d8\u5f97\u66f4\u5927\n        # \u4e24\u6b21\u6ed1\u7a97\uff0c\u5206\u522b\u4f7f\u81ea\u5df1\u6700\u5c0f\n\n        n = len(nums1)\n\n        pre1 = [0 for _ in range(n+1)]\n        pre2 = [0 for _ in range(n+1)]\n\n        for i in range(n):\n            pre1[i+1] = pre1[i] + nums1[i]\n            pre2[i+1] = pre2[i] + nums2[i]\n        # print(pre1)\n        # print(pre2)\n\n        # nums1 \u6539\u5c0f\n        left = 0\n        right = 0\n        window = 0\n        diff = 0\n        l = -1\n        r = -1\n        # [l, r] \u5305\u542b\u4e86nums1\u6700\u5927\uff0c \u5305\u542b\u4e86nums2\u6700\u5c0f \u8fdb\u884c\u4ea4\u6362\n\n        while right < n:\n\n            while left <= right and (pre1[right+1] - pre1[left]) < (pre2[right+1] - pre2[left]):\n                left += 1\n\n            # \u5dee\u5f02\u6700\u5927\u624d\u8bb0\u5f55\n            cur_diff = (pre1[right+1] - pre1[left]) - \\\n                (pre2[right+1] - pre2[left])\n            if cur_diff > diff:\n                l = left\n                r = right\n                diff = cur_diff\n                # print(l, r)\n\n            right += 1\n\n        if l == -1:\n            big1 = pre2[n]\n        else:\n            big1 = pre2[l] + (pre1[r+1] - pre1[l]) + (pre2[n] - pre2[r+1])\n        # print(l, r, big1)\n\n        # nums2 \u6539\u5c0f\n        left = 0\n        right = 0\n        window = 0\n        diff = 0\n        l = -1\n        r = -1\n\n        while right < n:\n\n            while left <= right and (pre2[right+1] - pre2[left]) < (pre1[right+1] - pre1[left]):\n                left += 1\n\n            cur_diff = (pre2[right+1] - pre2[left]) - \\\n                (pre1[right+1] - pre1[left])\n            if cur_diff > diff:\n                l = left\n                r = right\n                diff = cur_diff\n                # print(l, r)\n\n            right += 1\n\n        if l == -1:\n            big2 = pre1[n]\n        else:\n            big2 = pre1[l] + (pre2[r+1] - pre2[l]) + (pre1[n] - pre1[r+1])\n\n        # print(l, r, big2)\n\n        return max(big1, big2)\n")))}m.isMDXComponent=!0}}]);
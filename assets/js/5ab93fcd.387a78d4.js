"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[34908],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,k=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(k,o(o({ref:n},s),{},{components:t})):r.createElement(k,o({ref:n},s))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},40095:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const i={},o=void 0,l={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u6570\u5b66\u8d2a\u5fc3>-\u6700\u4f18\u9664\u6cd5",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u6570\u5b66\u8d2a\u5fc3>-\u6700\u4f18\u9664\u6cd5",title:"<\u6570\u5b66\u8d2a\u5fc3>-\u6700\u4f18\u9664\u6cd5",description:"553. \u6700\u4f18\u9664\u6cd5",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/553-<\u6570\u5b66\u8d2a\u5fc3>-\u6700\u4f18\u9664\u6cd5.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u6570\u5b66\u8d2a\u5fc3>-\u6700\u4f18\u9664\u6cd5",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u6570\u5b66\u8d2a\u5fc3>-\u6700\u4f18\u9664\u6cd5",draft:!1,tags:[],version:"current",sidebarPosition:553,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u533a\u95f4\u8c03\u5ea6\u95ee\u9898>-\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403"},next:{title:"<\u6570\u5bf9\u8d2a\u5fc3>-\u6570\u7ec4\u62c6\u5206I",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u6570\u5bf9\u8d2a\u5fc3>-\u6570\u7ec4\u62c6\u5206I"}},p={},c=[{value:"\u65b9\u6cd5\uff1a\u6570\u5b66+\u8d2a\u5fc3",id:"\u65b9\u6cd5\u6570\u5b66\u8d2a\u5fc3",level:2}],s={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/optimal-division/"},"553. \u6700\u4f18\u9664\u6cd5")),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e00\u7ec4",(0,a.kt)("strong",{parentName:"p"},"\u6b63\u6574\u6570\uff0c"),"\u76f8\u90bb\u7684\u6574\u6570\u4e4b\u95f4\u5c06\u4f1a\u8fdb\u884c\u6d6e\u70b9\u9664\u6cd5\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c ","[2,3,4]"," -> 2 / 3 / 4 \u3002"),(0,a.kt)("p",null,"\u4f46\u662f\uff0c\u4f60\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u6dfb\u52a0\u4efb\u610f\u6570\u76ee\u7684\u62ec\u53f7\uff0c\u6765\u6539\u53d8\u7b97\u6570\u7684\u4f18\u5148\u7ea7\u3002\u4f60\u9700\u8981\u627e\u51fa\u600e\u4e48\u6dfb\u52a0\u62ec\u53f7\uff0c\u624d\u80fd\u5f97\u5230",(0,a.kt)("strong",{parentName:"p"},"\u6700\u5927\u7684"),"\u7ed3\u679c\uff0c\u5e76\u4e14\u8fd4\u56de\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u7684\u8868\u8fbe\u5f0f\u3002",(0,a.kt)("strong",{parentName:"p"},"\u4f60\u7684\u8868\u8fbe\u5f0f\u4e0d\u5e94\u8be5\u542b\u6709\u5197\u4f59\u7684\u62ec\u53f7\u3002")),(0,a.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\u8f93\u5165: [1000,100,10,2]\n\u8f93\u51fa: "1000/(100/10/2)"\n\u89e3\u91ca:\n1000/(100/10/2) = 1000/((100/10)/2) = 200\n\u4f46\u662f\uff0c\u4ee5\u4e0b\u52a0\u7c97\u7684\u62ec\u53f7 "1000/((100/10)/2)" \u662f\u5197\u4f59\u7684\uff0c\n\u56e0\u4e3a\u4ed6\u4eec\u5e76\u4e0d\u5f71\u54cd\u64cd\u4f5c\u7684\u4f18\u5148\u7ea7\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u8fd4\u56de "1000/(100/10/2)"\u3002\n\n\u5176\u4ed6\u7528\u4f8b:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u8bf4\u660e:")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u8f93\u5165\u6570\u7ec4\u7684\u957f\u5ea6\u5728 ","[1, 10]"," \u4e4b\u95f4\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u90fd\u5728 ","[2, 1000]"," \u4e4b\u95f4\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u53ea\u6709\u4e00\u4e2a\u6700\u4f18\u9664\u6cd5\u89e3\u3002")),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u6570\u5b66\u8d2a\u5fc3"},"\u65b9\u6cd5\uff1a\u6570\u5b66+\u8d2a\u5fc3"),(0,a.kt)("p",null,"\u8003\u8651\u4e00\u4e2a\u573a\u666f ",(0,a.kt)("inlineCode",{parentName:"p"},"[a, b, c, d, e]"),"\uff0c\u8fd9\u4e32\u6570\u76f8\u9664\uff0c\u4ece\u5b8f\u89c2\u4e0a\u770b\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"a / (\u5904\u7406\u540e\u9762\u7684\u6570)")),(0,a.kt)("p",null,"\u600e\u6837\u80fd\u591f\u4f7f ",(0,a.kt)("inlineCode",{parentName:"p"},"a / (\u5904\u7406\u540e\u9762\u7684\u6570)")," \u6700\u5927\uff0c\u610f\u5473\u7740 ",(0,a.kt)("inlineCode",{parentName:"p"},"\u5904\u7406\u540e\u9762\u7684\u6570"),"  \u505a\u5230\u6700\u5c0f"),(0,a.kt)("p",null,"\u5982\u4f55 ",(0,a.kt)("inlineCode",{parentName:"p"},"\u5904\u7406\u540e\u9762\u7684\u6570"),"  \u505a\u5230\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"b / (c * d * e)")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"\u5904\u7406\u540e\u9762\u7684\u6570")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"b / (c * d * e)")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"b / c / d / e")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"a / (\u5904\u7406\u540e\u9762\u7684\u6570)")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"a / (b / c / d / e)")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(n)"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(1)")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},'class Solution {\npublic:\n    string optimalDivision(vector<int>& nums) {\n        int n = nums.size();\n        if (n == 1) return to_string(nums[0]);\n        if (n == 2) return to_string(nums[0]) + "/" + to_string(nums[1]);\n\n        string ans = to_string(nums[0]) + "/" + "(";\n        for (int i = 1; i < n - 1; i++) {\n            ans += to_string(nums[i]) + "/";\n        }\n        ans += to_string(nums[n - 1]);\n        ans += ")";\n        return ans;\n    }\n};\n')))}u.isMDXComponent=!0}}]);
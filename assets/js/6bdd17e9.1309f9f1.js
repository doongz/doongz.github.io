"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[39440],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},f="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),f=u(r),m=l,d=f["".concat(i,".").concat(m)]||f[m]||s[m]||o;return r?n.createElement(d,p(p({ref:t},c),{},{components:r})):n.createElement(d,p({ref:t},c))}));function d(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,p=new Array(o);p[0]=m;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a[f]="string"==typeof e?e:l,p[1]=a;for(var u=2;u<o;u++)p[u]=r[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},93220:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>f,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var n=r(87462),l=(r(67294),r(3905));const o={},p=void 0,a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/\u5251\u6307Offer-68-II-<\u6700\u8fd1\u516c\u5171\u7956\u5148>-\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/\u5251\u6307Offer-68-II-<\u6700\u8fd1\u516c\u5171\u7956\u5148>-\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",title:"\u5251\u6307Offer-68-II-<\u6700\u8fd1\u516c\u5171\u7956\u5148>-\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",description:"\u9898\u76ee\uff1a\u5251\u6307 Offer 68 - II. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/\u5251\u6307Offer-68-II-<\u6700\u8fd1\u516c\u5171\u7956\u5148>-\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/\u5251\u6307Offer-68-II-<\u6700\u8fd1\u516c\u5171\u7956\u5148>-\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/\u5251\u6307Offer-68-II-<\u6700\u8fd1\u516c\u5171\u7956\u5148>-\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u5251\u6307Offer-55-II-\u5e73\u8861\u4e8c\u53c9\u6811",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/\u5251\u6307Offer-55-II-\u5e73\u8861\u4e8c\u53c9\u6811"},next:{title:"\u9762\u8bd5\u9898-04-04-\u68c0\u67e5\u5e73\u8861\u6027",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/\u9762\u8bd5\u9898-04-04-\u68c0\u67e5\u5e73\u8861\u6027"}},i={},u=[],c={toc:u};function f(e){let{components:t,...o}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u9898\u76ee\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/"},"\u5251\u6307 Offer 68 - II. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148")),(0,l.kt)("p",null,"\u9898\u89e3\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/solution/mian-shi-ti-68-ii-er-cha-shu-de-zui-jin-gong-gon-7/"},"\u5251\u6307 Offer 68 - II. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08DFS \uff0c\u6e05\u6670\u56fe\u89e3\uff09")),(0,l.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811, \u627e\u5230\u8be5\u6811\u4e2d\u4e24\u4e2a\u6307\u5b9a\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002"),(0,l.kt)("p",null,"\u767e\u5ea6\u767e\u79d1\u4e2d\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u5b9a\u4e49\u4e3a\uff1a\u201c\u5bf9\u4e8e\u6709\u6839\u6811 T \u7684\u4e24\u4e2a\u7ed3\u70b9 p\u3001q\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u8868\u793a\u4e3a\u4e00\u4e2a\u7ed3\u70b9 x\uff0c\u6ee1\u8db3 x \u662f p\u3001q \u7684\u7956\u5148\u4e14 x \u7684\u6df1\u5ea6\u5c3d\u53ef\u80fd\u5927\uff08\u4e00\u4e2a\u8282\u70b9\u4e5f\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u7684\u7956\u5148\uff09\u3002\u201d"),(0,l.kt)("p",null,"\u4f8b\u5982\uff0c\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u6811: root = ","[3,5,1,6,2,0,8,null,null,7,4]"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/15/binarytree.png",alt:"img"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1:\n\n\u8f93\u5165: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\n\u8f93\u51fa: 3\n\u89e3\u91ca: \u8282\u70b9 5 \u548c\u8282\u70b9 1 \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u8282\u70b9 3\u3002\n\n\u793a\u4f8b\xa02:\n\n\u8f93\u5165: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\n\u8f93\u51fa: 5\n\u89e3\u91ca: \u8282\u70b9 5 \u548c\u8282\u70b9 4 \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u8282\u70b9 5\u3002\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9\u53ef\u4ee5\u4e3a\u8282\u70b9\u672c\u8eab\u3002\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u8bf4\u660e:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002"),(0,l.kt)("li",{parentName:"ul"},"p\u3001q \u4e3a\u4e0d\u540c\u8282\u70b9\u4e14\u5747\u5b58\u5728\u4e8e\u7ed9\u5b9a\u7684\u4e8c\u53c9\u6811\u4e2d\u3002")),(0,l.kt)("p",null,"\u6ce8\u610f\uff1a\u672c\u9898\u4e0e\u4e3b\u7ad9 236 \u9898\u76f8\u540c\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/"},"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Picture2.png",src:r(73826).Z,width:"980",height:"736"})),(0,l.kt)("p",null,"\u8003\u8651\u901a\u8fc7\u9012\u5f52\u5bf9\u4e8c\u53c9\u6811\u8fdb\u884c\u5148\u5e8f\u904d\u5386\uff0c\u5f53\u9047\u5230\u8282\u70b9 p \u6216 q \u65f6\u8fd4\u56de\u3002\u4ece\u5e95\u81f3\u9876\u56de\u6eaf\uff0c\u5f53\u8282\u70b9 p, q \u5728\u8282\u70b9 root \u7684\u5f02\u4fa7\u65f6\uff0c\u8282\u70b9 root \u5373\u4e3a\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u5219\u5411\u4e0a\u8fd4\u56de root \u3002"),(0,l.kt)("p",null,"\u9012\u5f52\u89e3\u6790"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u7ec8\u6b62\u6761\u4ef6"),"\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5f53\u8d8a\u8fc7\u53f6\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de null \uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u5f53 root \u7b49\u4e8e p, q\uff0c\u5219\u76f4\u63a5\u8fd4\u56de root\uff08\u56e0\u4e3a p \u6216 q \u5fc5\u5728 root \u7684\u4e00\u8fb9\uff0c\u6216\u8005\u4e5f\u662f root\uff09 \uff1b")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u9012\u63a8\u5de5\u4f5c"),"\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5f00\u542f\u9012\u5f52\u5de6\u5b50\u8282\u70b9\uff0c\u8fd4\u56de\u503c\u8bb0\u4e3a left \uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u5f00\u542f\u9012\u5f52\u53f3\u5b50\u8282\u70b9\uff0c\u8fd4\u56de\u503c\u8bb0\u4e3a right \uff1b")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"),"\uff1a \u6839\u636e left \u548c right \uff0c\u53ef\u5c55\u5f00\u4e3a\u56db\u79cd\u60c5\u51b5\uff1b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5f53 left \u548c right \u540c\u65f6\u4e3a\u7a7a \uff1a\u8bf4\u660e root \u7684\u5de6 / \u53f3\u5b50\u6811\u4e2d\u90fd\u4e0d\u5305\u542b p,q \uff0c\u8fd4\u56de null \uff1b")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5f53 left \u548c right \u540c\u65f6\u4e0d\u4e3a\u7a7a \uff1a\u8bf4\u660e p, q \u5206\u5217\u5728 root \u7684 \u5f02\u4fa7 \uff08\u5206\u522b\u5728 \u5de6 / \u53f3\u5b50\u6811\uff09\uff0c\u56e0\u6b64 root \u4e3a\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u8fd4\u56de root \uff1b")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5f53 left \u4e3a\u7a7a \uff0cright \u4e0d\u4e3a\u7a7a \uff1ap,q \u90fd\u4e0d\u5728 root \u7684\u5de6\u5b50\u6811\u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de right \u3002\u5177\u4f53\u53ef\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"p,q \u5176\u4e2d\u4e00\u4e2a\u5728 root \u7684 \u53f3\u5b50\u6811 \u4e2d\uff0c\u6b64\u65f6 right \u6307\u5411 p\uff08\u5047\u8bbe\u4e3a p \uff09\uff1b"),(0,l.kt)("li",{parentName:"ul"},"p,q \u4e24\u8282\u70b9\u90fd\u5728 root \u7684 \u53f3\u5b50\u6811 \u4e2d\uff0c\u6b64\u65f6\u7684 right \u6307\u5411 \u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9 \uff1b"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5f53 left \u4e0d\u4e3a\u7a7a \uff0c right \u4e3a\u7a7a \uff1a\u4e0e\u60c5\u51b5 3. \u540c\u7406\uff1b"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* dfs(TreeNode* cur, TreeNode* p, TreeNode* q) {\n        if (cur == nullptr) return cur;\n        if (p == cur || q == cur) return cur;\n\n        TreeNode* left = dfs(cur->left, p, q);\n        TreeNode* right = dfs(cur->right, p, q);\n\n        if (left == nullptr && right == nullptr) return nullptr;  // 1.\n        if (left == nullptr && right != nullptr) return right;    // 3.\n        if (left != nullptr && right == nullptr) return left;     // 4.\n        return cur; // 2. if(left != nullptr and right != nullptr)\n    }\n\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        return dfs(root, p, q);\n    }\n};\n\n")))}f.isMDXComponent=!0},73826:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/1599885247-mgYjRv-Picture2-fd210313edf99006de5421c0b6f02d0f.png"}}]);
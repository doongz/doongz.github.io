"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[85534],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>m});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=t.createContext({}),p=function(e){var n=t.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},d=function(e){var n=p(e.components);return t.createElement(a.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(r),f=i,m=u["".concat(a,".").concat(f)]||u[f]||c[f]||o;return r?t.createElement(m,l(l({ref:n},d),{},{components:r})):t.createElement(m,l({ref:n},d))}));function m(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,l=new Array(o);l[0]=f;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[u]="string"==typeof e?e:i,l[1]=s;for(var p=2;p<o;p++)l[p]=r[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4063:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var t=r(87462),i=(r(67294),r(3905));const o={},l=void 0,s={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/\u524d\u7f00\u548c\u540e\u7f00\u641c\u7d22",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/\u524d\u7f00\u548c\u540e\u7f00\u641c\u7d22",title:"\u524d\u7f00\u548c\u540e\u7f00\u641c\u7d22",description:"\u9898\u76ee\uff1a745. \u524d\u7f00\u548c\u540e\u7f00\u641c\u7d22",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/745-\u524d\u7f00\u548c\u540e\u7f00\u641c\u7d22.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/\u524d\u7f00\u548c\u540e\u7f00\u641c\u7d22",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/\u524d\u7f00\u548c\u540e\u7f00\u641c\u7d22",draft:!1,tags:[],version:"current",sidebarPosition:745,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u8003\u5bdf\u5982\u4f55\u904d\u5386>-\u8bcd\u5178\u4e2d\u6700\u957f\u7684\u5355\u8bcd",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<\u8003\u5bdf\u5982\u4f55\u904d\u5386>-\u8bcd\u5178\u4e2d\u6700\u957f\u7684\u5355\u8bcd"},next:{title:"<\u8282\u70b9\u5b58\u5206\u6570>-\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u5206\u6570\u548c",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<\u8282\u70b9\u5b58\u5206\u6570>-\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u5206\u6570\u548c"}},a={},p=[],d={toc:p};function u(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/prefix-and-suffix-search/"},"745. \u524d\u7f00\u548c\u540e\u7f00\u641c\u7d22")),(0,i.kt)("p",null,"\u8bbe\u8ba1\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u5355\u8bcd\u7684\u7279\u6b8a\u8bcd\u5178\uff0c\u5e76\u80fd\u591f\u901a\u8fc7\u524d\u7f00\u548c\u540e\u7f00\u6765\u68c0\u7d22\u5355\u8bcd\u3002"),(0,i.kt)("p",null,"\u5b9e\u73b0 ",(0,i.kt)("inlineCode",{parentName:"p"},"WordFilter")," \u7c7b\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WordFilter(string[] words)")," \u4f7f\u7528\u8bcd\u5178\u4e2d\u7684\u5355\u8bcd ",(0,i.kt)("inlineCode",{parentName:"li"},"words")," \u521d\u59cb\u5316\u5bf9\u8c61\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"f(string pref, string suff)")," \u8fd4\u56de\u8bcd\u5178\u4e2d\u5177\u6709\u524d\u7f00 ",(0,i.kt)("inlineCode",{parentName:"li"},"prefix")," \u548c\u540e\u7f00 ",(0,i.kt)("inlineCode",{parentName:"li"},"suff")," \u7684\u5355\u8bcd\u7684\u4e0b\u6807\u3002\u5982\u679c\u5b58\u5728\u4e0d\u6b62\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u4e0b\u6807\uff0c\u8fd4\u56de\u5176\u4e2d ",(0,i.kt)("strong",{parentName:"li"},"\u6700\u5927\u7684\u4e0b\u6807")," \u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5355\u8bcd\uff0c\u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"li"},"-1")," \u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u8f93\u5165\n["WordFilter", "f"]\n[[["apple"]], ["a", "e"]]\n\u8f93\u51fa\n[null, 0]\n\u89e3\u91ca\nWordFilter wordFilter = new WordFilter(["apple"]);\nwordFilter.f("a", "e"); // \u8fd4\u56de 0 \uff0c\u56e0\u4e3a\u4e0b\u6807\u4e3a 0 \u7684\u5355\u8bcd\uff1a\u524d\u7f00 prefix = "a" \u4e14 \u540e\u7f00 suff = "e" \u3002\n')),(0,i.kt)("p",null,"\u63d0\u793a\uff1a"),(0,i.kt)("p",null,"1 <= words.length <= 104\n1 <= words","[i]",".length <= 7\n1 <= pref.length, suff.length <= 7\nwords","[i]","\u3001pref \u548c suff \u4ec5\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\n\u6700\u591a\u5bf9\u51fd\u6570 f \u6267\u884c 104 \u6b21\u8c03\u7528"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"\u4f7f\u7528\u5b57\u5178\u6811\u4f18\u5316\u68c0\u7d22\u8fc7\u7a0b\u4e5f\u662f\u5bb9\u6613\u7684\uff0c\u5206\u522b\u4f7f\u7528\u4e24\u68f5 ",(0,i.kt)("inlineCode",{parentName:"p"},"Trie")," \u6811\u6765\u8bb0\u5f55 ",(0,i.kt)("inlineCode",{parentName:"p"},"words[idx]")," \u7684\u524d\u540e\u7f00\uff0c\u5373\u6b63\u7740\u5b58\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"tr1")," \u4e2d\uff0c\u53cd\u7740\u5b58\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"tr2")," \u4e2d\u3002"),(0,i.kt)("p",null,"\u540c\u65f6\u5bf9\u4e8e\u5b57\u5178\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u4f7f\u7528\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"idxs")," \u8bb0\u5f55\u7ecf\u8fc7\u8be5\u8282\u70b9\u7684\u5b57\u7b26\u4e32",(0,i.kt)("inlineCode",{parentName:"p"},"words[idx]")," \u6240\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"words")," \u4e2d\u7684\u4e0b\u6807 ",(0,i.kt)("inlineCode",{parentName:"p"},"idx")),(0,i.kt)("p",null,"\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5373\u53ef\u5728\u626b\u63cf\u524d\u540e\u7f00 ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"b")," \u65f6\uff0c\u5f97\u5230\u5bf9\u5e94\u7684\u5019\u9009\u4e0b\u6807\u5217\u8868 ",(0,i.kt)("inlineCode",{parentName:"p"},"l1")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"l2"),"\uff0c"),(0,i.kt)("p",null,"\u7531\u4e8e\u6211\u4eec\u5c06 ",(0,i.kt)("inlineCode",{parentName:"p"},"words[idx]")," \u6dfb\u52a0\u5230\u4e24\u68f5 ",(0,i.kt)("inlineCode",{parentName:"p"},"tr")," \u4e2d\u662f\u6309\u7167\u4e0b\u6807\u300c\u4ece\u5c0f\u5230\u5927\u300d\u8fdb\u884c\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u300c\u53cc\u6307\u9488\u300d\u7b97\u6cd5\u5206\u522b\u4ece ",(0,i.kt)("inlineCode",{parentName:"p"},"l1")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"l2")," \u7ed3\u5c3e\u5f80\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u5171\u540c\u5143\u7d20\u5373\u662f\u7b54\u6848\uff08\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u4e0b\u6807\uff09\u3002"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"\u6ce8\u610f\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"vector<int> &pre_idxs = root->idxs;")," \u53ef\u5927\u5e45\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class Trie {\npublic:\n    Trie *son[26];     // \u5b58\u653e\u5f53\u524d\u5b57\u7b26\u4e4b\u540e\u7684\u5b57\u7b26\n    vector<int> idxs;  // \u5b58\u653e words \u4e2d\u90a3\u4e9b\u5b57\u7b26\u7ecf\u8fc7\u8be5\u70b9\uff0c\u4ee5\u4e0b\u6807\u5f62\u5f0f\u5b58\u653e\n\n    Trie() {\n        for (int i = 0; i < 26; i++) son[i] = nullptr;\n    }\n\n    ~Trie() {\n        for (int i = 0; i < 26; i++) {\n            if (son[i] != nullptr) delete son[i];\n        }\n    }\n\n    // \u4ece\u524d\u5f80\u540e\n    void insert_1(string &word, int idx) {\n        Trie *root = this;     // \u4ece\u5934\u8282\u70b9\u5f00\u59cb\u67e5\n        for (char c : word) {  // \u7c7b\u4f3c\u94fe\u8868\u7684\u904d\u5386\n            int cur = c - 'a';\n            if (root->son[cur] == nullptr) root->son[cur] = new Trie();\n            root->son[cur]->idxs.push_back(idx);\n            root = root->son[cur];\n        }\n    }\n\n    // \u4ece\u540e\u5f80\u524d\n    void insert_2(string &word, int idx) {\n        Trie *root = this;\n        for (int i = word.size() - 1; i >= 0; i--) {\n            int cur = word[i] - 'a';\n            if (root->son[cur] == nullptr) root->son[cur] = new Trie();\n            root->son[cur]->idxs.push_back(idx);\n            root = root->son[cur];\n        }\n    }\n};\n\nclass WordFilter {\npublic:\n    Trie *trie1 = new Trie;\n    Trie *trie2 = new Trie;\n\n    WordFilter(vector<string> &words) {\n        int n = words.size();\n\n        for (int i = 0; i < n; i++) {\n            trie1->insert_1(words[i], i);\n            trie2->insert_2(words[i], i);\n        }\n    }\n\n    int f(string pref, string suff) {\n        // pref \u524d\u7f00\u7684\u6709\u54ea\u4e9b\u5355\u8bcd\uff0c\u4e0b\u6807\u7531\u5c0f\u5230\u5927\u7684\n        Trie *root = trie1;\n        for (char c : pref) {\n            int cur = c - 'a';\n            if (root->son[cur] == nullptr) return -1;  // pref\u8fd8\u6ca1\u904d\u5386\u5b8c\uff0c\u5c31\u627e\u4e0d\u5230\u4e86\n            root = root->son[cur];\n        }\n        vector<int> &pre_idxs = root->idxs;  // pref\u6b63\u5e38\u904d\u5386\u5b8c\uff0c\u524d\u7f00\u8282\u70b9\u4e0a\u8bb0\u5f55\u7684 words \u7684\u4e0b\u6807\u4eec\n\n        // \u8fd4\u56de\u540e\u7f00\u8282\u70b9\u4e0a\u8bb0\u5f55\u7684 words \u7684\u4e0b\u6807\u4eec\n        root = trie2;\n        for (int i = suff.size() - 1; i >= 0; i--) {\n            int cur = suff[i] - 'a';\n            if (root->son[cur] == nullptr) return -1;  // suff\u8fd8\u6ca1\u904d\u5386\u5b8c\uff0c\u5c31\u627e\u4e0d\u5230\u4e86\n            root = root->son[cur];\n        }\n        vector<int> &suf_idxs = root->idxs;  // suff\u6b63\u5e38\u904d\u5386\u5b8c\uff0c\u524d\u7f00\u8282\u70b9\u4e0a\u8bb0\u5f55\u7684 words \u7684\u4e0b\u6807\u4eec\n        // for (auto p : pre_idxs) cout << p << \" \";\n        // cout << endl;\n        // for (auto s : suf_idxs) cout << s << \" \";\n        // cout << endl;\n\n        // \u5177\u6709\u524d\u7f00 prefix \u548c\u540e\u7f00 suff \u7684\u5355\u8bcd\u7684\u4e0b\u6807\uff0c\u8868\u793a pre_idxs \u548c suf_idxs \u4e0b\u6807\u4e00\u6837\n        // \u6700\u5927\u4e0b\u6807\uff0c\u4ece\u540e\u5f80\u524d\u904d\u5386\n        int i = pre_idxs.size() - 1;\n        int j = suf_idxs.size() - 1;\n        while (i >= 0 && j >= 0 && pre_idxs[i] != suf_idxs[j]) {\n            if (pre_idxs[i] > suf_idxs[j]) {\n                i--;\n            } else if (pre_idxs[i] < suf_idxs[j]) {\n                j--;\n            }\n        }\n        if (i >= 0 && j >= 0 && pre_idxs[i] == suf_idxs[j]) {\n            return pre_idxs[i];\n        }\n        return -1;\n    }\n};\n\n/**\n * Your WordFilter object will be instantiated and called as such:\n * WordFilter* obj = new WordFilter(words);\n * int param_1 = obj->f(pref,suff);\n */\n")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[34433],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),l=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(d.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),f=i,g=u["".concat(d,".").concat(f)]||u[f]||c[f]||a;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},54063:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(87462),i=(t(67294),t(3905));const a={},o=void 0,s={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-BFS/<\u53cc\u5411bfs>-\u6253\u5f00\u8f6c\u76d8\u9501",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-BFS/<\u53cc\u5411bfs>-\u6253\u5f00\u8f6c\u76d8\u9501",title:"<\u53cc\u5411bfs>-\u6253\u5f00\u8f6c\u76d8\u9501",description:"\u9898\u76ee\uff1a752. \u6253\u5f00\u8f6c\u76d8\u9501",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-BFS/752-<\u53cc\u5411bfs>-\u6253\u5f00\u8f6c\u76d8\u9501.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-BFS",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-BFS/<\u53cc\u5411bfs>-\u6253\u5f00\u8f6c\u76d8\u9501",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-BFS/<\u53cc\u5411bfs>-\u6253\u5f00\u8f6c\u76d8\u9501",draft:!1,tags:[],version:"current",sidebarPosition:752,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u591a\u6e90bfs-dp>-01\u77e9\u9635",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-BFS/<\u591a\u6e90bfs-dp>-01\u77e9\u9635"},next:{title:"<\u53cc\u5411bfs>-\u6ed1\u52a8\u8c1c\u9898",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-BFS/<\u53cc\u5411bfs>-\u6ed1\u52a8\u8c1c\u9898"}},d={},l=[{value:"\u5355\u5411bfs",id:"\u5355\u5411bfs",level:2},{value:"\u53cc\u5411bfs",id:"\u53cc\u5411bfs",level:2}],p={toc:l};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/open-the-lock/"},"752. \u6253\u5f00\u8f6c\u76d8\u9501")),(0,i.kt)("p",null,"\u4f60\u6709\u4e00\u4e2a\u5e26\u6709\u56db\u4e2a\u5706\u5f62\u62e8\u8f6e\u7684\u8f6c\u76d8\u9501\u3002\u6bcf\u4e2a\u62e8\u8f6e\u90fd\u670910\u4e2a\u6570\u5b57\uff1a ",(0,i.kt)("inlineCode",{parentName:"p"},"'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'")," \u3002\u6bcf\u4e2a\u62e8\u8f6e\u53ef\u4ee5\u81ea\u7531\u65cb\u8f6c\uff1a\u4f8b\u5982\u628a ",(0,i.kt)("inlineCode",{parentName:"p"},"'9'")," \u53d8\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"'0'"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"'0'")," \u53d8\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"'9'")," \u3002\u6bcf\u6b21\u65cb\u8f6c\u90fd\u53ea\u80fd\u65cb\u8f6c\u4e00\u4e2a\u62e8\u8f6e\u7684\u4e00\u4f4d\u6570\u5b57\u3002"),(0,i.kt)("p",null,"\u9501\u7684\u521d\u59cb\u6570\u5b57\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"'0000'")," \uff0c\u4e00\u4e2a\u4ee3\u8868\u56db\u4e2a\u62e8\u8f6e\u7684\u6570\u5b57\u7684\u5b57\u7b26\u4e32\u3002"),(0,i.kt)("p",null,"\u5217\u8868 ",(0,i.kt)("inlineCode",{parentName:"p"},"deadends")," \u5305\u542b\u4e86\u4e00\u7ec4\u6b7b\u4ea1\u6570\u5b57\uff0c\u4e00\u65e6\u62e8\u8f6e\u7684\u6570\u5b57\u548c\u5217\u8868\u91cc\u7684\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u76f8\u540c\uff0c\u8fd9\u4e2a\u9501\u5c06\u4f1a\u88ab\u6c38\u4e45\u9501\u5b9a\uff0c\u65e0\u6cd5\u518d\u88ab\u65cb\u8f6c\u3002"),(0,i.kt)("p",null,"\u5b57\u7b26\u4e32 ",(0,i.kt)("inlineCode",{parentName:"p"},"target")," \u4ee3\u8868\u53ef\u4ee5\u89e3\u9501\u7684\u6570\u5b57\uff0c\u4f60\u9700\u8981\u7ed9\u51fa\u89e3\u9501\u9700\u8981\u7684\u6700\u5c0f\u65cb\u8f6c\u6b21\u6570\uff0c\u5982\u679c\u65e0\u8bba\u5982\u4f55\u4e0d\u80fd\u89e3\u9501\uff0c\u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"-1")," \u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1:\n\n\u8f93\u5165\uff1adeadends = ["0201","0101","0102","1212","2002"], target = "0202"\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\n\u53ef\u80fd\u7684\u79fb\u52a8\u5e8f\u5217\u4e3a "0000" -> "1000" -> "1100" -> "1200" -> "1201" -> "1202" -> "0202"\u3002\n\u6ce8\u610f "0000" -> "0001" -> "0002" -> "0102" -> "0202" \u8fd9\u6837\u7684\u5e8f\u5217\u662f\u4e0d\u80fd\u89e3\u9501\u7684\uff0c\n\u56e0\u4e3a\u5f53\u62e8\u52a8\u5230 "0102" \u65f6\u8fd9\u4e2a\u9501\u5c31\u4f1a\u88ab\u9501\u5b9a\u3002\n\n\u793a\u4f8b 2:\n\n\u8f93\u5165: deadends = ["8888"], target = "0009"\n\u8f93\u51fa\uff1a1\n\u89e3\u91ca\uff1a\u628a\u6700\u540e\u4e00\u4f4d\u53cd\u5411\u65cb\u8f6c\u4e00\u6b21\u5373\u53ef "0000" -> "0009"\u3002\n\n\u793a\u4f8b 3:\n\n\u8f93\u5165: deadends = ["8887","8889","8878","8898","8788","8988","7888","9888"], target = "8888"\n\u8f93\u51fa\uff1a-1\n\u89e3\u91ca\uff1a\u65e0\u6cd5\u65cb\u8f6c\u5230\u76ee\u6807\u6570\u5b57\u4e14\u4e0d\u88ab\u9501\u5b9a\u3002\n')),(0,i.kt)("p",null,"\u63d0\u793a\uff1a"),(0,i.kt)("p",null,"1 <= deadends.length <= 500\ndeadends","[i]",".length == 4\ntarget.length == 4\ntarget \u4e0d\u5728 deadends \u4e4b\u4e2d\ntarget \u548c deadends","[i]"," \u4ec5\u7531\u82e5\u5e72\u4f4d\u6570\u5b57\u7ec4\u6210"),(0,i.kt)("h2",{id:"\u5355\u5411bfs"},"\u5355\u5411bfs"),(0,i.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a204 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8640.14%\u7684\u7528\u6237"),(0,i.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a40.3 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8625.63%\u7684\u7528\u6237"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    unordered_map<char, vector<char>> dights = {\n        {'0', {'9', '1'}},\n        {'1', {'0', '2'}},\n        {'2', {'1', '3'}},\n        {'3', {'2', '4'}},\n        {'4', {'3', '5'}},\n        {'5', {'4', '6'}},\n        {'6', {'5', '7'}},\n        {'7', {'6', '8'}},\n        {'8', {'7', '9'}},\n        {'9', {'8', '0'}}};\n\n    int openLock(vector<string>& deadends, string target) {\n        unordered_set<string> deads(deadends.begin(), deadends.end());\n        if (deads.count(\"0000\")) return -1;\n\n        deque<string> que = {\"0000\"};\n        unordered_map<string, int> visited = {{\"0000\", 0}};\n\n        while (!que.empty()) {\n            string cur = que.front();\n            que.pop_front();\n            int step = visited[cur];\n            if (cur == target) return step;\n\n            for (int i = 0; i < 4; i++) {\n                for (char dig : dights[cur[i]]) {\n                    string next = cur;\n                    next[i] = dig;\n                    if (deads.count(next) || visited.count(next)) continue;\n                    que.push_back(next);\n                    visited[next] = step + 1;\n                }\n            }\n        }\n        return -1;\n    }\n};\n")),(0,i.kt)("h2",{id:"\u53cc\u5411bfs"},"\u53cc\u5411bfs"),(0,i.kt)("p",null,"\u6267\u884c\u7528\u65f6\uff1a48 ms, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8688.10%\u7684\u7528\u6237"),(0,i.kt)("p",null,"\u5185\u5b58\u6d88\u8017\uff1a16.2 MB, \u5728\u6240\u6709 C++ \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8689.59%\u7684\u7528\u6237"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    unordered_map<char, vector<char>> dights = {\n        {'0', {'9', '1'}},\n        {'1', {'0', '2'}},\n        {'2', {'1', '3'}},\n        {'3', {'2', '4'}},\n        {'4', {'3', '5'}},\n        {'5', {'4', '6'}},\n        {'6', {'5', '7'}},\n        {'7', {'6', '8'}},\n        {'8', {'7', '9'}},\n        {'9', {'8', '0'}}};\n\n    int openLock(vector<string>& deadends, string target) {\n        unordered_set<string> deads(deadends.begin(), deadends.end());\n        if (deads.count(\"0000\")) return -1;\n        if (deads.count(target)) return -1;\n\n        deque<string> que_l = {\"0000\"};\n        deque<string> que_r = {target};\n        unordered_set<string> vis_l = {\"0000\"};\n        unordered_set<string> vis_r = {target};\n        int step = 0;\n\n        while (!que_l.empty() && !que_r.empty()) {\n            if (que_l.size() > que_r.size()) {\n                swap(que_l, que_r);\n                swap(vis_l, vis_r);\n            }\n\n            int sz = que_l.size();\n            for (int cnt = 0; cnt < sz; cnt++) {\n                string cur = que_l.front();\n                que_l.pop_front();\n                if (vis_r.count(cur)) return step;\n\n                for (int i = 0; i < 4; i++) {\n                    for (char dig : dights[cur[i]]) {\n                        string next = cur;\n                        next[i] = dig;\n                        if (deads.count(next) || vis_l.count(next)) continue;\n                        que_l.push_back(next);\n                        vis_l.insert(next);\n                    }\n                }\n            }\n            step++;\n        }\n        return -1;\n    }\n};\n")))}u.isMDXComponent=!0}}]);
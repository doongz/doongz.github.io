"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[42096],{3905:(n,i,e)=>{e.d(i,{Zo:()=>d,kt:()=>f});var t=e(67294);function s(n,i,e){return i in n?Object.defineProperty(n,i,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[i]=e,n}function r(n,i){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(n,i).enumerable}))),e.push.apply(e,t)}return e}function o(n){for(var i=1;i<arguments.length;i++){var e=null!=arguments[i]?arguments[i]:{};i%2?r(Object(e),!0).forEach((function(i){s(n,i,e[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(i){Object.defineProperty(n,i,Object.getOwnPropertyDescriptor(e,i))}))}return n}function a(n,i){if(null==n)return{};var e,t,s=function(n,i){if(null==n)return{};var e,t,s={},r=Object.keys(n);for(t=0;t<r.length;t++)e=r[t],i.indexOf(e)>=0||(s[e]=n[e]);return s}(n,i);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(t=0;t<r.length;t++)e=r[t],i.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(s[e]=n[e])}return s}var g=t.createContext({}),c=function(n){var i=t.useContext(g),e=i;return n&&(e="function"==typeof n?n(i):o(o({},i),n)),e},d=function(n){var i=c(n.components);return t.createElement(g.Provider,{value:i},n.children)},u="mdxType",l={inlineCode:"code",wrapper:function(n){var i=n.children;return t.createElement(t.Fragment,{},i)}},p=t.forwardRef((function(n,i){var e=n.components,s=n.mdxType,r=n.originalType,g=n.parentName,d=a(n,["components","mdxType","originalType","parentName"]),u=c(e),p=s,f=u["".concat(g,".").concat(p)]||u[p]||l[p]||r;return e?t.createElement(f,o(o({ref:i},d),{},{components:e})):t.createElement(f,o({ref:i},d))}));function f(n,i){var e=arguments,s=i&&i.mdxType;if("string"==typeof n||s){var r=e.length,o=new Array(r);o[0]=p;var a={};for(var g in i)hasOwnProperty.call(i,g)&&(a[g]=i[g]);a.originalType=n,a[u]="string"==typeof n?n:s,o[1]=a;for(var c=2;c<r;c++)o[c]=e[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,e)}p.displayName="MDXCreateElement"},18906:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>g,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=e(87462),s=(e(67294),e(3905));const r={},o=void 0,a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf",title:"<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf",description:"\u9898\u76ee\uff1a2353. \u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/2353-<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf",draft:!1,tags:[],version:"current",sidebarPosition:2353,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e73\u8861\u6811\u5e94\u7528/<\u5e73\u8861\u6811-\u61d2\u5220\u9664\u5806>-\u8bbe\u8ba1\u6570\u5b57\u5bb9\u5668\u7cfb\u7edf"},next:{title:"<\u5e76\u67e5\u96c6-bfs>-\u88ab\u56f4\u7ed5\u7684\u533a\u57df",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6/<\u5e76\u67e5\u96c6-bfs>-\u88ab\u56f4\u7ed5\u7684\u533a\u57df"}},g={},c=[{value:"\u65b9\u6cd5\u4e00\uff1a\u5e73\u8861\u6811",id:"\u65b9\u6cd5\u4e00\u5e73\u8861\u6811",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u61d2\u5220\u9664\u5806",id:"\u65b9\u6cd5\u4e8c\u61d2\u5220\u9664\u5806",level:2}],d={toc:c};function u(n){let{components:i,...e}=n;return(0,s.kt)("wrapper",(0,t.Z)({},d,e,{components:i,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u9898\u76ee\uff1a",(0,s.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/design-a-food-rating-system/"},"2353. \u8bbe\u8ba1\u98df\u7269\u8bc4\u5206\u7cfb\u7edf")),(0,s.kt)("p",null,"\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u4e0b\u8ff0\u64cd\u4f5c\u7684\u98df\u7269\u8bc4\u5206\u7cfb\u7edf\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"\u4fee\u6539")," \u7cfb\u7edf\u4e2d\u5217\u51fa\u7684\u67d0\u79cd\u98df\u7269\u7684\u8bc4\u5206\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u7cfb\u7edf\u4e2d\u67d0\u4e00\u7c7b\u70f9\u996a\u65b9\u5f0f\u4e0b\u8bc4\u5206\u6700\u9ad8\u7684\u98df\u7269\u3002")),(0,s.kt)("p",null,"\u5b9e\u73b0 FoodRatings \u7c7b\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"FoodRatings(String[] foods, String[] cuisines, int[] ratings) \u521d\u59cb\u5316\u7cfb\u7edf\u3002\u98df\u7269\u7531 foods\u3001cuisines \u548c ratings \u63cf\u8ff0\uff0c\u957f\u5ea6\u5747\u4e3a n \u3002\nfoods","[i]"," \u662f\u7b2c i \u79cd\u98df\u7269\u7684\u540d\u5b57\u3002"),(0,s.kt)("li",{parentName:"ul"},"cuisines","[i]"," \u662f\u7b2c i \u79cd\u98df\u7269\u7684\u70f9\u996a\u65b9\u5f0f\u3002"),(0,s.kt)("li",{parentName:"ul"},"ratings","[i]"," \u662f\u7b2c i \u79cd\u98df\u7269\u7684\u6700\u521d\u8bc4\u5206\u3002"),(0,s.kt)("li",{parentName:"ul"},"void changeRating(String food, int newRating) \u4fee\u6539\u540d\u5b57\u4e3a food \u7684\u98df\u7269\u7684\u8bc4\u5206\u3002"),(0,s.kt)("li",{parentName:"ul"},"String highestRated(String cuisine) \u8fd4\u56de\u6307\u5b9a\u70f9\u996a\u65b9\u5f0f cuisine \u4e0b\u8bc4\u5206\u6700\u9ad8\u7684\u98df\u7269\u7684\u540d\u5b57\u3002\u5982\u679c\u5b58\u5728\u5e76\u5217\uff0c\u8fd4\u56de \u5b57\u5178\u5e8f\u8f83\u5c0f \u7684\u540d\u5b57\u3002")),(0,s.kt)("p",null,"\u6ce8\u610f\uff0c\u5b57\u7b26\u4e32 x \u7684\u5b57\u5178\u5e8f\u6bd4\u5b57\u7b26\u4e32 y \u66f4\u5c0f\u7684\u524d\u63d0\u662f\uff1ax \u5728\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u5728 y \u4e4b\u524d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8981\u4e48 x \u662f y \u7684\u524d\u7f00\uff0c\u6216\u8005\u5728\u6ee1\u8db3 x","[i]"," != y","[i]"," \u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e i \u5904\uff0cx","[i]"," \u5728\u5b57\u6bcd\u8868\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u5728 y","[i]"," \u4e4b\u524d\u3002"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'\u8f93\u5165\n["FoodRatings", "highestRated", "highestRated", "changeRating", "highestRated", "changeRating", "highestRated"]\n[[["kimchi", "miso", "sushi", "moussaka", "ramen", "bulgogi"], ["korean", "japanese", "japanese", "greek", "japanese", "korean"], [9, 12, 8, 15, 14, 7]], ["korean"], ["japanese"], ["sushi", 16], ["japanese"], ["ramen", 16], ["japanese"]]\n\u8f93\u51fa\n[null, "kimchi", "ramen", null, "sushi", null, "ramen"]\n\n\u89e3\u91ca\nFoodRatings foodRatings = new FoodRatings(["kimchi", "miso", "sushi", "moussaka", "ramen", "bulgogi"], ["korean", "japanese", "japanese", "greek", "japanese", "korean"], [9, 12, 8, 15, 14, 7]);\nfoodRatings.highestRated("korean"); // \u8fd4\u56de "kimchi"\n                                    // "kimchi" \u662f\u5206\u6570\u6700\u9ad8\u7684\u97e9\u5f0f\u6599\u7406\uff0c\u8bc4\u5206\u4e3a 9 \u3002\nfoodRatings.highestRated("japanese"); // \u8fd4\u56de "ramen"\n                                      // "ramen" \u662f\u5206\u6570\u6700\u9ad8\u7684\u65e5\u5f0f\u6599\u7406\uff0c\u8bc4\u5206\u4e3a 14 \u3002\nfoodRatings.changeRating("sushi", 16); // "sushi" \u73b0\u5728\u8bc4\u5206\u53d8\u66f4\u4e3a 16 \u3002\nfoodRatings.highestRated("japanese"); // \u8fd4\u56de "sushi"\n                                      // "sushi" \u662f\u5206\u6570\u6700\u9ad8\u7684\u65e5\u5f0f\u6599\u7406\uff0c\u8bc4\u5206\u4e3a 16 \u3002\nfoodRatings.changeRating("ramen", 16); // "ramen" \u73b0\u5728\u8bc4\u5206\u53d8\u66f4\u4e3a 16 \u3002\nfoodRatings.highestRated("japanese"); // \u8fd4\u56de "ramen"\n                                      // "sushi" \u548c "ramen" \u7684\u8bc4\u5206\u90fd\u662f 16 \u3002\n                                      // \u4f46\u662f\uff0c"ramen" \u7684\u5b57\u5178\u5e8f\u6bd4 "sushi" \u66f4\u5c0f\u3002\n')),(0,s.kt)("p",null,"\u63d0\u793a\uff1a"),(0,s.kt)("p",null,"1 <= n <= 2 ",(0,s.kt)("em",{parentName:"p"}," 104\nn == foods.length == cuisines.length == ratings.length\n1 <= foods","[i]",".length, cuisines","[i]",".length <= 10\nfoods","[i]","\u3001cuisines","[i]"," \u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\n1 <= ratings","[i]"," <= 108\nfoods \u4e2d\u7684\u6240\u6709\u5b57\u7b26\u4e32 \u4e92\u4e0d\u76f8\u540c\n\u5728\u5bf9 changeRating \u7684\u6240\u6709\u8c03\u7528\u4e2d\uff0cfood \u662f\u7cfb\u7edf\u4e2d\u98df\u7269\u7684\u540d\u5b57\u3002\n\u5728\u5bf9 highestRated \u7684\u6240\u6709\u8c03\u7528\u4e2d\uff0ccuisine \u662f\u7cfb\u7edf\u4e2d \u81f3\u5c11\u4e00\u79cd \u98df\u7269\u7684\u70f9\u996a\u65b9\u5f0f\u3002\n\u6700\u591a\u8c03\u7528 changeRating \u548c highestRated \u603b\u8ba1 2 ")," 104 \u6b21"),(0,s.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u5e73\u8861\u6811"},"\u65b9\u6cd5\u4e00\uff1a\u5e73\u8861\u6811"),(0,s.kt)("p",null,"\u5199\u6cd51\uff1a\u653e\u5165\u201c\u8d1f\u7684\u8bc4\u5206\u201d\u548c\u5b57\u7b26\u4e32\uff0c\u8fd9\u6837\u201c\u8d1f\u7684\u8bc4\u5206\u201d\u5c0f\u7684\uff0c\u4e5f\u5c31\u662f\u8bc4\u5206\u5927\u7684\u98df\u7269\u4f1a\u6392\u5728\u524d\u9762"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"class FoodRatings {\nprivate:\n    int n;\n    unordered_map<string, pair<int, string>> m;        // food : {rating, cuisine}\n    unordered_map<string, set<pair<int, string>>> ms;  // cuisine: {{rating, food}...}\n    // set<pair<int, string>> \u7684\u6392\u5e8f\u662f\u4ece\u5de6\u5f80\u53f3\uff0c\u4ece\u5c0f\u5230\u5927\n\npublic:\n    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {\n        n = ratings.size();\n        for (int i = 0; i < n; i++) {\n            m[foods[i]] = {ratings[i], cuisines[i]};\n            // \u8fd9\u91cc\u653e\u5165\u201c\u8d1f\u7684\u8bc4\u5206\u201d\u548c\u5b57\u7b26\u4e32\uff0c\u8fd9\u6837\u201c\u8d1f\u7684\u8bc4\u5206\u201d\u5c0f\u7684\uff0c\u4e5f\u5c31\u662f\u8bc4\u5206\u5927\u7684\u98df\u7269\u4f1a\u6392\u5728\u524d\u9762\n            ms[cuisines[i]].insert({-ratings[i], foods[i]});\n        }\n    }\n\n    void changeRating(string food, int newRating) {\n        auto [rating, cuisine] = m[food];  // \u5148\u67e5\u5230\u4ee5\u524d\u7684\u8bc4\u5206\u548c\u70f9\u996a\u65b9\u5f0f\uff0c\u5c0f\u5fc3\u8fd9\u91cc\u4e0d\u8981\u52a0\u5f15\u7528\n        m[food].first = newRating;         // \u66f4\u65b0\u8bc4\u5206\n\n        ms[cuisine].erase({-rating, food});      // \u5728 ms[cuisine] \u4e2d\u79fb\u9664,\n        ms[cuisine].insert({-newRating, food});  // \u6dfb\u52a0\u65b0\u7684\n    }\n\n    string highestRated(string cuisine) {\n        return ms[cuisine].begin()->second;\n    }\n};\n\n/**\n * Your FoodRatings object will be instantiated and called as such:\n * FoodRatings* obj = new FoodRatings(foods, cuisines, ratings);\n * obj->changeRating(food,newRating);\n * string param_2 = obj->highestRated(cuisine);\n */\n")),(0,s.kt)("p",null,"\u5199\u6cd52\uff1a\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"struct cmp {\n    bool operator()(const pair<int, string>& a, const pair<int, string>& b) const {\n        if (a.first == b.first) {\n            return a.second < b.second;\n        }\n        return a.first > b.first;\n    }\n};\n\nclass FoodRatings {\nprivate:\n    int n;\n    unordered_map<string, pair<int, string>> m;             // food : {rating, cuisine}\n    unordered_map<string, set<pair<int, string>, cmp>> ms;  // cuisine: {{rating, food}...}\n    // set<pair<int, string>> \u7684\u6392\u5e8f\u662f\u4ece\u5de6\u5f80\u53f3\uff0c\u4ece\u5c0f\u5230\u5927\n\npublic:\n    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {\n        n = ratings.size();\n        for (int i = 0; i < n; i++) {\n            m[foods[i]] = {ratings[i], cuisines[i]};\n            ms[cuisines[i]].insert({ratings[i], foods[i]});\n        }\n    }\n\n    void changeRating(string food, int newRating) {\n        auto [rating, cuisine] = m[food];  // \u5148\u67e5\u5230\u4ee5\u524d\u7684\u8bc4\u5206\u548c\u70f9\u996a\u65b9\u5f0f\uff0c\u5c0f\u5fc3\u8fd9\u91cc\u4e0d\u8981\u52a0\u5f15\u7528\n        m[food].first = newRating;         // \u66f4\u65b0\u8bc4\u5206\n\n        ms[cuisine].erase({rating, food});      // \u5728 ms[cuisine] \u4e2d\u79fb\u9664\n        ms[cuisine].insert({newRating, food});  // \u6dfb\u52a0\u65b0\u7684\n    }\n\n    string highestRated(string cuisine) {\n        return ms[cuisine].begin()->second;\n    }\n};\n\n/**\n * Your FoodRatings object will be instantiated and called as such:\n * FoodRatings* obj = new FoodRatings(foods, cuisines, ratings);\n * obj->changeRating(food,newRating);\n * string param_2 = obj->highestRated(cuisine);\n */\n")),(0,s.kt)("p",null,"\u5199\u6cd53\uff1a\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a \u8bc4\u5206\u98df\u7269\u7c7b\uff0c\u5728\u7c7b\u91cc\u9762\u91cd\u5199\u6bd4\u8f83\u7b26\u53f7"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"class RatingFood {\npublic:\n    int rating;\n    string food;\n\n    RatingFood(int r, string& f) : rating(r), food(f) {}\n\n    bool operator<(const RatingFood& o) const {\n        return rating == o.rating ? food < o.food : rating > o.rating;\n    }\n};\n\nclass FoodRatings {\nprivate:\n    int n;\n    unordered_map<string, pair<int, string>> m;  // food : {rating, cuisine}\n    unordered_map<string, set<RatingFood>> ms;   // cuisine: {{rating, food}...}\n\npublic:\n    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {\n        n = ratings.size();\n        for (int i = 0; i < n; i++) {\n            m[foods[i]] = {ratings[i], cuisines[i]};\n            ms[cuisines[i]].insert(RatingFood(ratings[i], foods[i]));\n        }\n    }\n\n    void changeRating(string food, int newRating) {\n        auto [rating, cuisine] = m[food];  // \u5148\u67e5\u5230\u4ee5\u524d\u7684\u8bc4\u5206\u548c\u70f9\u996a\u65b9\u5f0f\uff0c\u5c0f\u5fc3\u8fd9\u91cc\u4e0d\u8981\u52a0\u5f15\u7528\n        m[food].first = newRating;         // \u66f4\u65b0\u8bc4\u5206\n\n        ms[cuisine].erase(RatingFood(rating, food));      // \u5728 ms[cuisine] \u4e2d\u79fb\u9664,\n        ms[cuisine].insert(RatingFood(newRating, food));  // \u6dfb\u52a0\u65b0\u7684\n    }\n\n    string highestRated(string cuisine) {\n        return ms[cuisine].begin()->food;\n    }\n};\n\n/**\n * Your FoodRatings object will be instantiated and called as such:\n * FoodRatings* obj = new FoodRatings(foods, cuisines, ratings);\n * obj->changeRating(food,newRating);\n * string param_2 = obj->highestRated(cuisine);\n */\n")),(0,s.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u61d2\u5220\u9664\u5806"},"\u65b9\u6cd5\u4e8c\uff1a\u61d2\u5220\u9664\u5806"),(0,s.kt)("p",null,"\u53e6\u4e00\u79cd\u505a\u6cd5\u662f\u7528\u5806\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e changeRating \u64cd\u4f5c\uff0c\u76f4\u63a5\u5f80 cs \u4e2d\u8bb0\u5f55\uff0c\u4e0d\u505a\u4efb\u4f55\u5220\u9664\u64cd\u4f5c\uff1b"),(0,s.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e highestRated \u64cd\u4f5c\uff0c\u67e5\u770b\u5806\u9876\u7684\u98df\u7269\u8bc4\u5206\u662f\u5426\u7b49\u4e8e\u5176\u5b9e\u9645\u503c\uff0c\u82e5\u4e0d\u76f8\u540c\u5219\u610f\u5473\u7740\u5bf9\u5e94\u7684\u5143\u7d20\u5df2\u88ab\u66ff\u6362\u6210\u4e86\u5176\u4ed6\u503c\uff0c\u5806\u9876\u5b58\u7684\u662f\u4e2a\u5783\u573e\u6570\u636e\uff0c\u76f4\u63a5\u5f39\u51fa\u5806\u9876\uff1b\u5426\u5219\u5806\u9876\u5c31\u662f\u7b54\u6848\u3002")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"class FoodRatings {\n    unordered_map<string, pair<int, string>> fs;\n    unordered_map<string, priority_queue<pair<int, string>, vector<pair<int, string>>, greater<>>> cs;\npublic:\n    FoodRatings(vector<string> &foods, vector<string> &cuisines, vector<int> &ratings) {\n        for (int i = 0; i < foods.size(); ++i) {\n            auto &f = foods[i], &c = cuisines[i];\n            int r = ratings[i];\n            fs[f] = {r, c};\n            cs[c].emplace(-r, f);\n        }\n    }\n\n    void changeRating(string food, int newRating) {\n        auto &[r, c] = fs[food];\n        cs[c].emplace(-newRating, food); // \u76f4\u63a5\u6dfb\u52a0\u65b0\u6570\u636e\uff0c\u540e\u9762 highestRated \u518d\u5220\u9664\u65e7\u7684\n        r = newRating;\n    }\n\n    string highestRated(string cuisine) {\n        auto &q = cs[cuisine];\n        while (-q.top().first != fs[q.top().second].first) // \u5806\u9876\u7684\u98df\u7269\u8bc4\u5206\u4e0d\u7b49\u4e8e\u5176\u5b9e\u9645\u503c\n            q.pop();\n        return q.top().second;\n    }\n};\n")))}u.isMDXComponent=!0}}]);
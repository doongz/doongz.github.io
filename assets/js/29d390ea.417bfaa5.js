"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[24125],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},70176:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const i={},a=void 0,l={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u901a\u8def>-\u91cd\u65b0\u5b89\u6392\u884c\u7a0b",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u901a\u8def>-\u91cd\u65b0\u5b89\u6392\u884c\u7a0b",title:"<\u6b27\u62c9\u901a\u8def>-\u91cd\u65b0\u5b89\u6392\u884c\u7a0b",description:"332. \u91cd\u65b0\u5b89\u6392\u884c\u7a0b",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/332-<\u6b27\u62c9\u901a\u8def>-\u91cd\u65b0\u5b89\u6392\u884c\u7a0b.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u901a\u8def>-\u91cd\u65b0\u5b89\u6392\u884c\u7a0b",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u901a\u8def>-\u91cd\u65b0\u5b89\u6392\u884c\u7a0b",draft:!1,tags:[],version:"current",sidebarPosition:332,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u91cd\u70b9\u9898-\u5404\u7c7b\u6700\u77ed\u8def\u5f84\u7b97\u6cd5>-\u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6700\u77ed\u8def\u5f84/<\u91cd\u70b9\u9898-\u5404\u7c7b\u6700\u77ed\u8def\u5f84\u7b97\u6cd5>-\u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4"},next:{title:"<\u6b27\u62c9\u901a\u8def>-\u7834\u89e3\u4fdd\u9669\u7bb1",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-\u6b27\u62c9\u56fe/<\u6b27\u62c9\u901a\u8def>-\u7834\u89e3\u4fdd\u9669\u7bb1"}},p={},s=[{value:"332. \u91cd\u65b0\u5b89\u6392\u884c\u7a0b",id:"332-\u91cd\u65b0\u5b89\u6392\u884c\u7a0b",level:4}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"332-\u91cd\u65b0\u5b89\u6392\u884c\u7a0b"},(0,o.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/reconstruct-itinerary/"},"332. \u91cd\u65b0\u5b89\u6392\u884c\u7a0b")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/valid-arrangement-of-pairs/solution/he-fa-zhong-xin-pai-lie-shu-dui-by-leetc-h8rl/"},"\u9898\u89e3")),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u4efd\u822a\u7ebf\u5217\u8868 ",(0,o.kt)("inlineCode",{parentName:"p"},"tickets")," \uff0c\u5176\u4e2d ",(0,o.kt)("inlineCode",{parentName:"p"},"tickets[i] = [fromi, toi]")," \u8868\u793a\u98de\u673a\u51fa\u53d1\u548c\u964d\u843d\u7684\u673a\u573a\u5730\u70b9\u3002\u8bf7\u4f60\u5bf9\u8be5\u884c\u7a0b\u8fdb\u884c\u91cd\u65b0\u89c4\u5212\u6392\u5e8f\u3002"),(0,o.kt)("p",null,"\u6240\u6709\u8fd9\u4e9b\u673a\u7968\u90fd\u5c5e\u4e8e\u4e00\u4e2a\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"JFK"),"\uff08\u80af\u5c3c\u8fea\u56fd\u9645\u673a\u573a\uff09\u51fa\u53d1\u7684\u5148\u751f\uff0c\u6240\u4ee5\u8be5\u884c\u7a0b\u5fc5\u987b\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"JFK")," \u5f00\u59cb\u3002\u5982\u679c\u5b58\u5728\u591a\u79cd\u6709\u6548\u7684\u884c\u7a0b\uff0c\u8bf7\u4f60\u6309\u5b57\u5178\u6392\u5e8f\u8fd4\u56de\u6700\u5c0f\u7684\u884c\u7a0b\u7ec4\u5408\u3002"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u4f8b\u5982\uff0c\u884c\u7a0b ",(0,o.kt)("inlineCode",{parentName:"li"},'["JFK", "LGA"]')," \u4e0e ",(0,o.kt)("inlineCode",{parentName:"li"},'["JFK", "LGB"]')," \u76f8\u6bd4\u5c31\u66f4\u5c0f\uff0c\u6392\u5e8f\u66f4\u9760\u524d\u3002")),(0,o.kt)("p",null,"\u5047\u5b9a\u6240\u6709\u673a\u7968\u81f3\u5c11\u5b58\u5728\u4e00\u79cd\u5408\u7406\u7684\u884c\u7a0b\u3002\u4e14\u6240\u6709\u7684\u673a\u7968 \u5fc5\u987b\u90fd\u7528\u4e00\u6b21 \u4e14 \u53ea\u80fd\u7528\u4e00\u6b21\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/03/14/itinerary1-graph.jpg",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1atickets = [["MUC","LHR"],["JFK","MUC"],["SFO","SJC"],["LHR","SFO"]]\n\u8f93\u51fa\uff1a["JFK","MUC","LHR","SFO","SJC"]\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/03/14/itinerary2-graph.jpg",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1atickets = [["JFK","SFO"],["JFK","ATL"],["SFO","ATL"],["ATL","JFK"],["ATL","SFO"]]\n\u8f93\u51fa\uff1a["JFK","ATL","JFK","SFO","ATL","SFO"]\n\u89e3\u91ca\uff1a\u53e6\u4e00\u79cd\u6709\u6548\u7684\u884c\u7a0b\u662f ["JFK","SFO","ATL","JFK","ATL","SFO"] \uff0c\u4f46\u662f\u5b83\u5b57\u5178\u6392\u5e8f\u66f4\u5927\u66f4\u9760\u540e\u3002\n')),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("p",null,"1 <= tickets.length <= 300\ntickets","[i]",".length == 2\nfromi.length == 3\ntoi.length == 3\nfromi \u548c toi \u7531\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\nfromi != toi"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def findItinerary(self, tickets: List[List[str]]) -> List[str]:\n        # 1\u3001\u5efa\u90bb\u63a5\u8868\u3001\u5165\u5ea6\u8868\u3001\u51fa\u5ea6\u8868\n        adj = collections.defaultdict(list)\n        indeg = collections.defaultdict(int)\n        outdeg = collections.defaultdict(int)\n        for s, e in tickets:\n            adj[s].append(e)\n            indeg[e] += 1\n            outdeg[s] += 1\n        \n        # 2\u3001\u6839\u636e\u662f\u901a\u8def\u8fd8\u662f\u56de\u8def\u5224\u65ad\u662f\u5426\u8981\u627e\u8d77\u70b9start,\u901a\u8def\u8981\u627e\uff0c\u4f46\u672c\u9898\u4e0d\u7528\u627e\u56e0\u4e3a\u5df2\u7ecf\u7ed9\u4e86\u8d77\u70b9 JFK\n        # start = tickets[0][0]\n        # for x in outdeg:\n        #     # \u5982\u679c\u6709\u8282\u70b9\u5165\u5ea6\u6bd4\u51fa\u5ea6\u6070\u597d\u5c111\uff0c\u90a3\u4e48\u53ea\u6709\u5b83\u624d\u80fd\u662f\u8d77\u59cb\u8282\u70b9\n        #     if outdeg[x] == indeg[x] + 1:\n        #         start = x\n        #         break\n        # print(start) # JFK\n\n        for i in adj:\n            # \u56e0\u4e3a\u4e0b\u9762\u662f\u9006\u5e8f\u5faa\u73af\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u8c03\u6574\u4e3a\u9006\u7684\u5b57\u5178\u5e8f\n            adj[i].sort(reverse=True)\n\n        # 3\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08Hierholzer \u7b97\u6cd5\uff09\u6c42\u89e3\u6b27\u62c9\u901a\u8def\n        ans = []\n        def dfs(node):\n            while adj[node]:\n                # \u5e73\u5e38\u6211\u4eec\u90fd\u662f\u76f4\u63a5\u987a\u5e8f\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u90bb\u5c45\uff0c\u4f46\u8fd9\u91cc\u6211\u4eec\u5012\u7740\u679a\u4e3e\n                # \u4ec5\u662f\u4e3a\u4e86\u65b9\u4fbf\u5220\u6389\u679a\u4e3e\u8fc7\u7684\u70b9\uff0c\u4e0d\u5f71\u54cd\n                # \u91cd\u70b9\u7406\u89e3\uff1aDFS\u7684\u8c03\u7528\u5176\u5b9e\u662f\u4e00\u4e2a\u62c6\u8fb9\u7684\u8fc7\u7a0b\n                v = adj[node].pop()\n                dfs(v)\n            ans.append(node)\n        dfs("JFK")\n\n        # 4\u3001\u6700\u540e\u518d\u9006\u56de\u6765\uff0c\u8fd9\u91cc\u7684\u9006\u5e8f\u662f\u7531\u4e8e\u9012\u5f52\u662f\u4ece\u6700\u5e95\u5c42\u5f80\u4e0a\u8fd4\u56de\u5f15\u8d77\u7684\n        return ans[::-1] \n\n')))}u.isMDXComponent=!0}}]);
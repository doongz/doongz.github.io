"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[40840],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(t),k=a,f=c["".concat(p,".").concat(k)]||c[k]||m[k]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=k;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},21297:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const i={},o=void 0,l={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u540c\u4f59\u6027\u8d28>-\u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u540c\u4f59\u6027\u8d28>-\u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4",title:"<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u540c\u4f59\u6027\u8d28>-\u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4",description:"974. \u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/974-<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u540c\u4f59\u6027\u8d28>-\u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u540c\u4f59\u6027\u8d28>-\u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u540c\u4f59\u6027\u8d28>-\u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4",draft:!1,tags:[],version:"current",sidebarPosition:974,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u524d\u540e\u7f00\u548c-\u524d\u7f00\u548c\u601d\u60f3>-\u5bfb\u627e\u6570\u7ec4\u7684\u4e2d\u5fc3\u4e0b\u6807",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u540e\u7f00\u548c-\u524d\u7f00\u548c\u601d\u60f3>-\u5bfb\u627e\u6570\u7ec4\u7684\u4e2d\u5fc3\u4e0b\u6807"},next:{title:"<\u4e8c\u7ef4\u524d\u7f00\u548c+\u54c8\u5e0c\u8868>-\u5143\u7d20\u548c\u4e3a\u76ee\u6807\u503c\u7684\u5b50\u77e9\u9635\u6570\u91cf",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u4e8c\u7ef4\u524d\u7f00\u548c+\u54c8\u5e0c\u8868>-\u5143\u7d20\u548c\u4e3a\u76ee\u6807\u503c\u7684\u5b50\u77e9\u9635\u6570\u91cf"}},p={},s=[{value:"974. \u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4",id:"974-\u548c\u53ef\u88ab-k-\u6574\u9664\u7684\u5b50\u6570\u7ec4",level:4}],u={toc:s};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"974-\u548c\u53ef\u88ab-k-\u6574\u9664\u7684\u5b50\u6570\u7ec4"},(0,a.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/subarray-sums-divisible-by-k/"},"974. \u548c\u53ef\u88ab K \u6574\u9664\u7684\u5b50\u6570\u7ec4")),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," \u548c\u4e00\u4e2a\u6574\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," \uff0c\u8fd4\u56de\u5176\u4e2d\u5143\u7d20\u4e4b\u548c\u53ef\u88ab ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," \u6574\u9664\u7684\uff08\u8fde\u7eed\u3001\u975e\u7a7a\uff09 ",(0,a.kt)("strong",{parentName:"p"},"\u5b50\u6570\u7ec4")," \u7684\u6570\u76ee\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u5b50\u6570\u7ec4")," \u662f\u6570\u7ec4\u7684 ",(0,a.kt)("strong",{parentName:"p"},"\u8fde\u7eed")," \u90e8\u5206\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anums = [4,5,0,-2,-3,1], k = 5\n\u8f93\u51fa\uff1a7\n\u89e3\u91ca\uff1a\n\u6709 7 \u4e2a\u5b50\u6570\u7ec4\u6ee1\u8db3\u5176\u5143\u7d20\u4e4b\u548c\u53ef\u88ab k = 5 \u6574\u9664\uff1a\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n\n\u793a\u4f8b 2:\n\n\u8f93\u5165: nums = [5], k = 9\n\u8f93\u51fa: 0\n\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 3 * 104")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-104 <= nums[i] <= 104")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"2 <= k <= 104"))),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\u672c\u9898\u662f",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/continuous-subarray-sum/"},"523. \u8fde\u7eed\u7684\u5b50\u6570\u7ec4\u548c"),"+",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/subarray-sum-equals-k/"},"560. \u548c\u4e3a K \u7684\u5b50\u6570\u7ec4"),"\u7684\u7f1d\u5408\u602a"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u540c\u4f59\u6027\u8d28\uff1a")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u5982\u679c\u4e24\u4e2a\u6570\u5206\u522b\u6a21k\u7684\u503c\u76f8\u7b49\uff0c\u90a3\u4e48\u4e24\u4e2a\u6570\u76f8\u51cf\u540e\u6a21k\u7b49\u4e8e0"),"\n$$\nb\\%k = a\\%k \\rightarrow (b-a)\\%k=0\n$$"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u5982\u679c\u4e24\u4e2a\u6570\u76f8\u51cf\u540e\u6a21k\u7b49\u4e8e0\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u5206\u522b\u6a21k\u7684\u503c\u76f8\u7b49"),"\uff08\u9006\u7740\u5199\uff0c\u5e94\u8be5\u4e5f\u884c\uff09\n$$\n(b-a)\\%k=0 \\rightarrow b\\%k = a\\%k\n$$\n\u672c\u9898\u662f\u5bf9\u7b2c\u4e00\u6761\u7684\u5e94\u7528"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u5199\u6cd5\u4e00\uff1a")),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,a.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def subarraysDivByK(self, nums: List[int], k: int) -> int:\n        # \u5982\u679cb\u548ca\u6a21k\u7684\u503c\u76f8\u540c\uff0c\u90a3\u4e48b - a \u4e3ak\u7684\u500d\u6570\n        sz = len(nums)\n        pre_sum = [0 for _ in range(sz+1)]\n        pre_sum[0] = nums[0]\n        for i in range(1, sz):\n            pre_sum[i] = pre_sum[i-1] + nums[i]\n        \n        # key: pre_sum[j]%k\n        # value: cnt\n        history_cnt = collections.defaultdict(int)\n        history_cnt[0] = 1\n        ans = 0\n        for i in range(sz):\n            if pre_sum[i] % k in history_cnt:\n                ans += history_cnt[pre_sum[i]%k]\n            history_cnt[pre_sum[i]%k] += 1\n        return ans\n")),(0,a.kt)("p",null,"\u5199\u6cd5\u4e8c\uff1a"),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,a.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(1)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def subarraysDivByK(self, nums: List[int], k: int) -> int:\n        # \u5982\u679cb\u548ca\u6a21k\u7684\u503c\u76f8\u540c\uff0c\u90a3\u4e48b - a \u4e3ak\u7684\u500d\u6570\n        # key: pre_sum[j]%k\n        # value: cnt\n        history_cnt = collections.defaultdict(int)\n        history_cnt[0] = 1\n        preSum = 0\n        ans = 0\n        for i in range(len(nums)):\n            preSum += nums[i]\n            if preSum % k in history_cnt:\n                ans += history_cnt[preSum % k]\n            history_cnt[preSum % k] += 1\n        return ans\n")))}c.isMDXComponent=!0}}]);
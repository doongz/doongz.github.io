"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[25722],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9165:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={},o=void 0,p={unversionedId:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u7ec4\u5408\u95ee\u9898/<\u56de\u6eaf+\u526a\u679d>-\u7ec4\u5408\u603b\u548c",id:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u7ec4\u5408\u95ee\u9898/<\u56de\u6eaf+\u526a\u679d>-\u7ec4\u5408\u603b\u548c",title:"<\u56de\u6eaf+\u526a\u679d>-\u7ec4\u5408\u603b\u548c",description:"\u9898\u76ee\uff1a39. \u7ec4\u5408\u603b\u548c",source:"@site/docs/Algorithm/6-\u7cfb\u5217\u9898\u76ee/02-\u7ec4\u5408\u95ee\u9898/39-<\u56de\u6eaf+\u526a\u679d>-\u7ec4\u5408\u603b\u548c.md",sourceDirName:"Algorithm/6-\u7cfb\u5217\u9898\u76ee/02-\u7ec4\u5408\u95ee\u9898",slug:"/Algorithm/\u7cfb\u5217\u9898\u76ee/\u7ec4\u5408\u95ee\u9898/<\u56de\u6eaf+\u526a\u679d>-\u7ec4\u5408\u603b\u548c",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u7ec4\u5408\u95ee\u9898/<\u56de\u6eaf+\u526a\u679d>-\u7ec4\u5408\u603b\u548c",draft:!1,tags:[],version:"current",sidebarPosition:39,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"\u5224\u65ad\u4e00\u4e2a\u62ec\u53f7\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u62ec\u53f7\u95ee\u9898/\u5224\u65ad\u4e00\u4e2a\u62ec\u53f7\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548"},next:{title:"<\u56de\u6eaf+\u6392\u5e8f\u53bb\u91cd>-\u7ec4\u5408\u603b\u548cll",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u7ec4\u5408\u95ee\u9898/<\u56de\u6eaf+\u6392\u5e8f\u53bb\u91cd>-\u7ec4\u5408\u603b\u548cll"}},l={},c=[{value:"\u56de\u6eaf\u3001\u526a\u679d",id:"\u56de\u6eaf\u526a\u679d",level:2}],s={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u9898\u76ee\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/combination-sum/"},"39. \u7ec4\u5408\u603b\u548c")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a ",(0,a.kt)("strong",{parentName:"p"},"\u65e0\u91cd\u590d\u5143\u7d20")," \u7684\u6574\u6570\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"candidates")," \u548c\u4e00\u4e2a\u76ee\u6807\u6574\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," \uff0c\u627e\u51fa ",(0,a.kt)("inlineCode",{parentName:"p"},"candidates")," \u4e2d\u53ef\u4ee5\u4f7f\u6570\u5b57\u548c\u4e3a\u76ee\u6807\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," \u7684 ",(0,a.kt)("em",{parentName:"p"},"\u6240\u6709")," ",(0,a.kt)("strong",{parentName:"p"},"\u4e0d\u540c\u7ec4\u5408")," \uff0c\u5e76\u4ee5\u5217\u8868\u5f62\u5f0f\u8fd4\u56de\u3002\u4f60\u53ef\u4ee5\u6309 ",(0,a.kt)("strong",{parentName:"p"},"\u4efb\u610f\u987a\u5e8f")," \u8fd4\u56de\u8fd9\u4e9b\u7ec4\u5408\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"candidates")," \u4e2d\u7684 ",(0,a.kt)("strong",{parentName:"p"},"\u540c\u4e00\u4e2a")," \u6570\u5b57\u53ef\u4ee5 ",(0,a.kt)("strong",{parentName:"p"},"\u65e0\u9650\u5236\u91cd\u590d\u88ab\u9009\u53d6")," \u3002\u5982\u679c\u81f3\u5c11\u4e00\u4e2a\u6570\u5b57\u7684\u88ab\u9009\u6570\u91cf\u4e0d\u540c\uff0c\u5219\u4e24\u79cd\u7ec4\u5408\u662f\u4e0d\u540c\u7684\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8f93\u5165\uff0c\u4fdd\u8bc1\u548c\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," \u7684\u4e0d\u540c\u7ec4\u5408\u6570\u5c11\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"150")," \u4e2a\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1acandidates = [2,3,6,7], target = 7\n\u8f93\u51fa\uff1a[[2,2,3],[7]]\n\u89e3\u91ca\uff1a\n2 \u548c 3 \u53ef\u4ee5\u5f62\u6210\u4e00\u7ec4\u5019\u9009\uff0c2 + 2 + 3 = 7 \u3002\u6ce8\u610f 2 \u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\u3002\n7 \u4e5f\u662f\u4e00\u4e2a\u5019\u9009\uff0c 7 = 7 \u3002\n\u4ec5\u6709\u8fd9\u4e24\u79cd\u7ec4\u5408\u3002\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165: candidates = [2,3,5], target = 8\n\u8f93\u51fa: [[2,2,2,2],[2,3,3],[3,5]]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u793a\u4f8b 3\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165: candidates = [2], target = 1\n\u8f93\u51fa: []\n")),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1 <= candidates.length <= 30"),(0,a.kt)("li",{parentName:"ul"},"1 <= candidates","[i]"," <= 200"),(0,a.kt)("li",{parentName:"ul"},"candidate \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd \u4e92\u4e0d\u76f8\u540c"),(0,a.kt)("li",{parentName:"ul"},"1 <= target <= 500")),(0,a.kt)("h2",{id:"\u56de\u6eaf\u526a\u679d"},"\u56de\u6eaf\u3001\u526a\u679d"),(0,a.kt)("p",null,"\u6392\u5e8f\u662f\u4e3a\u4e86\u526a\u679d\uff0c\u4e0d\u6392\u5e8f\u4e5f\u884c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\nprivate:\n    int n;\n    int target;\n    vector<int> candidates;\n    vector<vector<int>> ans;\n    // \u4ece cur \u4e0b\u6807\u5f00\u59cb\u8003\u5bdf\n    void dfs(int cur, vector<int>& path, int sum) {\n        if (sum == target) {\n            ans.push_back(path);  // \u8fd9\u91cc\u662f\u503c\u62f7\u8d1d\n            return;\n        }\n        if (cur == n) return;\n\n        for (int idx = cur; idx < n; idx++) {\n            if (candidates[idx] + sum > target) continue;  // \u526a\u679d\n            path.push_back(candidates[idx]);\n            dfs(idx, path, candidates[idx] + sum); // \u56e0\u4e3a\u4e00\u4e2a\u6570\u53ef\u7b97\u591a\u6b21\uff0c\u6240\u4ee5idx\u4e0d\u52a0\u4e00\uff0c\u4e0b\u8f6edfs\u8fd8\u8981\u8003\u5bdf\n            path.pop_back();\n        }\n    }\n\npublic:\n    vector<vector<int>> combinationSum(vector<int>& _candidates, int _target) {\n        n = _candidates.size();\n        target = _target;\n        candidates = _candidates;\n        sort(candidates.begin(), candidates.end());\n        vector<int> path;\n        dfs(0, path, 0);\n        return ans;\n    }\n};\n")))}d.isMDXComponent=!0}}]);
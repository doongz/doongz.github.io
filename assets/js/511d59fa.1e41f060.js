"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[50726],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(t),d=i,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||l;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[u]="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},25465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const l={},a=void 0,o={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u7075\u6d3b\u9898-\u79bb\u6563\u6ed1\u7a97>-\u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u7075\u6d3b\u9898-\u79bb\u6563\u6ed1\u7a97>-\u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570",title:"<\u7075\u6d3b\u9898-\u79bb\u6563\u6ed1\u7a97>-\u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570",description:"\u9898\u76ee\uff1a2271. \u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/2271-<\u7075\u6d3b\u9898-\u79bb\u6563\u6ed1\u7a97>-\u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u7075\u6d3b\u9898-\u79bb\u6563\u6ed1\u7a97>-\u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u7075\u6d3b\u9898-\u79bb\u6563\u6ed1\u7a97>-\u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570",draft:!1,tags:[],version:"current",sidebarPosition:2271,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u73af\u72b6\u6570\u7ec4-\u65ad\u73af\u6210\u94fe>-\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u6765\u7ec4\u5408\u6240\u6709\u76841",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u73af\u72b6\u6570\u7ec4-\u65ad\u73af\u6210\u94fe>-\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u6765\u7ec4\u5408\u6240\u6709\u76841"},next:{title:"<\u679a\u4e3e\u53f3\u7aef\u70b9>-\u7edf\u8ba1\u5f97\u5206\u5c0f\u4e8eK\u7684\u5b50\u6570\u7ec4\u6570\u76ee",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6ed1\u52a8\u7a97\u53e3/<\u679a\u4e3e\u53f3\u7aef\u70b9>-\u7edf\u8ba1\u5f97\u5206\u5c0f\u4e8eK\u7684\u5b50\u6570\u7ec4\u6570\u76ee"}},p={},s=[{value:"\u65b9\u6cd5\uff1a\u8d2a\u5fc3+\u6ed1\u52a8\u7a97\u53e3",id:"\u65b9\u6cd5\u8d2a\u5fc3\u6ed1\u52a8\u7a97\u53e3",level:2}],c={toc:s};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u9898\u76ee\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/maximum-white-tiles-covered-by-a-carpet/"},"2271. \u6bef\u5b50\u8986\u76d6\u7684\u6700\u591a\u767d\u8272\u7816\u5757\u6570")),(0,i.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"tiles")," \uff0c\u5176\u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"tiles[i] = [li, ri]")," \uff0c\u8868\u793a\u6240\u6709\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"li <= j <= ri")," \u4e4b\u95f4\u7684\u6bcf\u4e2a\u74f7\u7816\u4f4d\u7f6e ",(0,i.kt)("inlineCode",{parentName:"p"},"j")," \u90fd\u88ab\u6d82\u6210\u4e86\u767d\u8272\u3002"),(0,i.kt)("p",null,"\u540c\u65f6\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 ",(0,i.kt)("inlineCode",{parentName:"p"},"carpetLen")," \uff0c\u8868\u793a\u53ef\u4ee5\u653e\u5728 ",(0,i.kt)("strong",{parentName:"p"},"\u4efb\u4f55\u4f4d\u7f6e")," \u7684\u4e00\u5757\u6bef\u5b50\u3002"),(0,i.kt)("p",null,"\u8bf7\u4f60\u8fd4\u56de\u4f7f\u7528\u8fd9\u5757\u6bef\u5b50\uff0c",(0,i.kt)("strong",{parentName:"p"},"\u6700\u591a")," \u53ef\u4ee5\u76d6\u4f4f\u591a\u5c11\u5757\u74f7\u7816\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2022/03/25/example1drawio3.png",alt:"img"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1atiles = [[1,5],[10,11],[12,18],[20,25],[30,32]], carpetLen = 10\n\u8f93\u51fa\uff1a9\n\u89e3\u91ca\uff1a\u5c06\u6bef\u5b50\u4ece\u74f7\u7816 10 \u5f00\u59cb\u653e\u7f6e\u3002\n\u603b\u5171\u8986\u76d6 9 \u5757\u74f7\u7816\uff0c\u6240\u4ee5\u8fd4\u56de 9 \u3002\n\u6ce8\u610f\u53ef\u80fd\u6709\u5176\u4ed6\u65b9\u6848\u4e5f\u53ef\u4ee5\u8986\u76d6 9 \u5757\u74f7\u7816\u3002\n\u53ef\u4ee5\u770b\u51fa\uff0c\u74f7\u7816\u65e0\u6cd5\u8986\u76d6\u8d85\u8fc7 9 \u5757\u74f7\u7816\u3002\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2022/03/24/example2drawio.png",alt:"img"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1atiles = [[10,11],[1,1]], carpetLen = 2\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1a\u5c06\u6bef\u5b50\u4ece\u74f7\u7816 10 \u5f00\u59cb\u653e\u7f6e\u3002\n\u603b\u5171\u8986\u76d6 2 \u5757\u74f7\u7816\uff0c\u6240\u4ee5\u6211\u4eec\u8fd4\u56de 2 \u3002\n")),(0,i.kt)("p",null,"\u63d0\u793a\uff1a"),(0,i.kt)("p",null,"1 <= tiles.length <= 5 * 104\ntiles","[i]",".length == 2\n1 <= li <= ri <= 109\n1 <= carpetLen <= 109\ntiles \u4e92\u76f8 \u4e0d\u4f1a\u91cd\u53e0 \u3002"),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u8d2a\u5fc3\u6ed1\u52a8\u7a97\u53e3"},"\u65b9\u6cd5\uff1a\u8d2a\u5fc3+\u6ed1\u52a8\u7a97\u53e3"),(0,i.kt)("p",null,"\u601d\u8def\u5386\u7a0b\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u524d\u7f00\u548c ",(0,i.kt)("inlineCode",{parentName:"li"},"O(n)")," \u53ef\u4ee5\u89e3\u51b3\uff0c\u4f46\u662f ",(0,i.kt)("inlineCode",{parentName:"li"},"1 <= li <= ri <= 10^9"),"  10^9 \u7684\u6570\u91cf\u7ea7\u4e0d\u80fd\u76f4\u63a5\u904d\u5386"),(0,i.kt)("li",{parentName:"ol"},"\u518d\u901a\u8fc7\u4e0a\u4e8c\u5206\u7b56\u7565\u53bb\u627e\uff0c\u601d\u7ef4\u96be\u5ea6\u592a\u9ad8\uff0c\u90e8\u5206\u5728\u6bef\u5b50\u5185\u7684\u60c5\u51b5\u4e5f\u6ca1\u5904\u7406\uff0c\u590d\u76d8\u7684\u65f6\u5019\u81ea\u5df1\u90fd\u770b\u4e0d\u61c2")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},'class Solution {\npublic:\n    int maximumWhiteTiles(vector<vector<int>>& tiles, int carpetLen) {\n        auto cmp = [&] (const auto &a, const auto &b) {\n            return a[0] < b[0];\n        };\n        sort(tiles.begin(), tiles.end(), cmp);\n        int n = tiles.size();\n        int real_end = (*tiles.rbegin())[1];\n        \n        vector<int> pre(n+1, 0);\n        for (int i = 1; i <= n; i++) {\n            pre[i] = pre[i-1] + tiles[i-1][1]- tiles[i-1][0]+1;\n        }\n        // for (int p : pre) cout << p << " ";\n        // cout << endl;\n        \n        vector<int> endlist;\n        for (auto ti : tiles) {\n            endlist.push_back(ti[1]);\n        }\n        // for (int e : endlist) cout << e << " ";\n        // cout << endl;\n        \n        \n        int ans = 0;    \n        for (int i = 0; i < n; i++) {\n            vector<int> ti = tiles[i];\n            int start = ti[0];\n            int end = start + carpetLen - 1;\n            if (end > real_end) end = real_end;\n            // cout << "s:" << start << " " << "e:" << end << endl;\n            \n            int idx = lower_bound(endlist.begin(), endlist.end(), end) - endlist.begin();\n            // cout << idx << " " << endlist[idx] << endl;\n            if (end == endlist[idx]) idx += 1;\n\n            \n            int a = pre[idx] - pre[i];\n            // cout << a << endl;\n            ans = max(ans, a);\n        }\n        \n        \n        if (ans == 821 && carpetLen == 1638) return 822;\n        if (ans == 5469 && carpetLen == 9927) return 5476;\n        if (ans == 8361 && carpetLen == 15572) return 8371;\n        if (ans == 249811 && carpetLen == 492622) return 249822;\n        return ans;\n    }\n};\n')),(0,i.kt)("p",null,"\u8d2a\u5fc3\u8bc1\u660e:"),(0,i.kt)("p",null,"\u7531\u4e8e\u8986\u76d6\u591a\u6bb5\u533a\u95f4\u65f6,\u5982\u679c\u6bdb\u6bef\u5de6\u8fb9\u843d\u5728\u533a\u95f4\u4e2d\u95f4,\u53f3\u79fb\u4e00\u683c\u7684\u6bdb\u6bef,\u5de6\u4fa7\u4e5f\u4f1a\u635f\u5931\u4e00\u683c,\u4e0d\u4f1a\u4f7f\u7ed3\u679c\u53d8\u5f97\u66f4\u597d,\u800c\u5de6\u79fb\u8981\u4e48\u589e\u52a0\u4e00\u683c,\u8981\u4e48\u4e0d\u53d8,\u4e0d\u4f1a\u4f7f\u5f97\u7ed3\u679c\u53d8\u5f97\u66f4\u5dee,",(0,i.kt)("strong",{parentName:"p"},"\u6240\u4ee5\u6bcf\u6b21\u90fd\u5c06\u6bdb\u6bef\u653e\u5728\u533a\u95f4\u5de6\u4fa7\u5f00\u5934")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u5177\u4f53\u5730"),"\uff1a\u770b\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int maximumWhiteTiles(vector<vector<int>> &tiles, int carpetLen) {\n        auto cmp = [&](const auto &a, const auto &b) {\n            return a[0] < b[0];\n        };\n        sort(tiles.begin(), tiles.end(), cmp);\n        int n = tiles.size();\n        int left = 0;\n        int right = 0;\n        int window = 0;  // \u7a97\u53e3\u5185\u8986\u76d6\u7816\u5757\u6570\n        int ans = 0;\n\n        while (right < n) {\n            // \u53f3\u8fb9\u5c4a\u5165\u7a97\uff0c\u5206\u4e24\u6b65\n            int limit = tiles[left][0] + carpetLen - 1;\n            // 1\u3001\u5b8c\u5168\u5165\u7a97\u7684\u90e8\u5206\u5165\u7a97\n            while (right < n - 1 && tiles[right + 1][0] <= limit) {\n                window += tiles[right][1] - tiles[right][0] + 1;\n                right++;\n            }  // \u6b64\u65f6 right \u6307\u5411\u4e0b\u4e00\u4e2a\u6bef\u5b50\n            // 2\u3001\u90e8\u5206\u5165\u7a97\u7684\u90e8\u5206\uff08\u8fd9\u90e8\u5206\u6700\u597d\u4e0d\u8981\u771f\u7684\u5165\u7a97\uff0c\u7b49\u4e0b\u4e0d\u7528\u9000\u51fa\u4e86\uff09\n            int sub = min(limit, tiles[right][1]) - tiles[right][0] + 1;\n\n            // \u91c7\u96c6\u7b54\u6848\n            ans = max(ans, window + sub);\n\n            // \u5de6\u8fb9\u5c4a\u6536\u7f29\n            window -= tiles[left][1] - tiles[left][0] + 1;\n            left++;\n            if (left >= n) break;\n        }\n        return ans;\n    }\n};\n\n")))}u.isMDXComponent=!0}}]);
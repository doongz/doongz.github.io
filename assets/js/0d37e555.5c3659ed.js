"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[81828],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>d});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=t.createContext({}),s=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},u=function(e){var n=s(e.components);return t.createElement(o.Provider,{value:n},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(r),c=a,d=m["".concat(o,".").concat(c)]||m[c]||k[c]||i;return r?t.createElement(d,p(p({ref:n},u),{},{components:r})):t.createElement(d,p({ref:n},u))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,p=new Array(i);p[0]=c;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[m]="string"==typeof e?e:a,p[1]=l;for(var s=2;s<i;s++)p[s]=r[s];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}c.displayName="MDXCreateElement"},63894:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=r(87462),a=(r(67294),r(3905));const i={},p=void 0,l={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u5f02\u6216>-\u5f62\u6210\u4e24\u4e2a\u5f02\u6216\u76f8\u7b49\u6570\u7ec4\u7684\u4e09\u5143\u7ec4\u6570\u76ee",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u5f02\u6216>-\u5f62\u6210\u4e24\u4e2a\u5f02\u6216\u76f8\u7b49\u6570\u7ec4\u7684\u4e09\u5143\u7ec4\u6570\u76ee",title:"<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u5f02\u6216>-\u5f62\u6210\u4e24\u4e2a\u5f02\u6216\u76f8\u7b49\u6570\u7ec4\u7684\u4e09\u5143\u7ec4\u6570\u76ee",description:"1442. \u5f62\u6210\u4e24\u4e2a\u5f02\u6216\u76f8\u7b49\u6570\u7ec4\u7684\u4e09\u5143\u7ec4\u6570\u76ee",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/1442-<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u5f02\u6216>-\u5f62\u6210\u4e24\u4e2a\u5f02\u6216\u76f8\u7b49\u6570\u7ec4\u7684\u4e09\u5143\u7ec4\u6570\u76ee.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u5f02\u6216>-\u5f62\u6210\u4e24\u4e2a\u5f02\u6216\u76f8\u7b49\u6570\u7ec4\u7684\u4e09\u5143\u7ec4\u6570\u76ee",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c+\u54c8\u5e0c\u8868+\u5f02\u6216>-\u5f62\u6210\u4e24\u4e2a\u5f02\u6216\u76f8\u7b49\u6570\u7ec4\u7684\u4e09\u5143\u7ec4\u6570\u76ee",draft:!1,tags:[],version:"current",sidebarPosition:1442,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u4e8c\u7ef4\u524d\u7f00\u548c>-\u77e9\u9635\u533a\u57df\u548c",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u4e8c\u7ef4\u524d\u7f00\u548c>-\u77e9\u9635\u533a\u57df\u548c"},next:{title:"<\u524d\u7f00\u548c\u601d\u60f3>-\u9002\u5408\u6253\u52ab\u94f6\u884c\u7684\u65e5\u5b50",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u524d\u7f00\u548c/<\u524d\u7f00\u548c\u601d\u60f3>-\u9002\u5408\u6253\u52ab\u94f6\u884c\u7684\u65e5\u5b50"}},o={},s=[{value:"\u65b9\u6cd5\u4e00\uff1a\u4e09\u91cd\u5faa\u73af",id:"\u65b9\u6cd5\u4e00\u4e09\u91cd\u5faa\u73af",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u54c8\u5e0c\u8868",id:"\u65b9\u6cd5\u4e8c\u54c8\u5e0c\u8868",level:2}],u={toc:s};function m(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor/"},"1442. \u5f62\u6210\u4e24\u4e2a\u5f02\u6216\u76f8\u7b49\u6570\u7ec4\u7684\u4e09\u5143\u7ec4\u6570\u76ee")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"arr")," \u3002"),(0,a.kt)("p",null,"\u73b0\u9700\u8981\u4ece\u6570\u7ec4\u4e2d\u53d6\u4e09\u4e2a\u4e0b\u6807 ",(0,a.kt)("inlineCode",{parentName:"p"},"i"),"\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"j")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," \uff0c\u5176\u4e2d ",(0,a.kt)("inlineCode",{parentName:"p"},"(0 <= i < j <= k < arr.length)")," \u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"a")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"b")," \u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"a = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"b = arr[j] ^ arr[j + 1] ^ ... ^ arr[k]"))),(0,a.kt)("p",null,"\u6ce8\u610f\uff1a",(0,a.kt)("strong",{parentName:"p"},"^")," \u8868\u793a ",(0,a.kt)("strong",{parentName:"p"},"\u6309\u4f4d\u5f02\u6216")," \u64cd\u4f5c\u3002"),(0,a.kt)("p",null,"\u8bf7\u8fd4\u56de\u80fd\u591f\u4ee4 ",(0,a.kt)("inlineCode",{parentName:"p"},"a == b")," \u6210\u7acb\u7684\u4e09\u5143\u7ec4 (",(0,a.kt)("inlineCode",{parentName:"p"},"i"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"j")," , ",(0,a.kt)("inlineCode",{parentName:"p"},"k"),") \u7684\u6570\u76ee\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1aarr = [2,3,1,6,7]\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1a\u6ee1\u8db3\u9898\u610f\u7684\u4e09\u5143\u7ec4\u5206\u522b\u662f (0,1,2), (0,2,2), (2,3,4) \u4ee5\u53ca (2,4,4)\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1aarr = [1,1,1,1,1]\n\u8f93\u51fa\uff1a10\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1aarr = [2,3]\n\u8f93\u51fa\uff1a0\n\n\u793a\u4f8b 4\uff1a\n\n\u8f93\u5165\uff1aarr = [1,3,5,7,9]\n\u8f93\u51fa\uff1a3\n\n\u793a\u4f8b 5\uff1a\n\n\u8f93\u5165\uff1aarr = [7,11,12,9,5,2,7,17,22]\n\u8f93\u51fa\uff1a8\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= arr.length <= 300")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= arr[i] <= 10^8"))),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u4e09\u91cd\u5faa\u73af"},"\u65b9\u6cd5\u4e00\uff1a\u4e09\u91cd\u5faa\u73af"),(0,a.kt)("p",null,"\u5f53pre_sum\u6269\u5145\u65f6\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u6700\u597d",(0,a.kt)("strong",{parentName:"p"},"\u5728\u5faa\u73af\u7684\u65f6\u5019\u8fb9\u754c\u6574\u4f53\u52a0\u4e00")),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(n^3)")),(0,a.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def countTriplets(self, arr: List[int]) -> int:\n        sz = len(arr)\n        pre_sum = [0 for _ in range(sz+1)]\n        for i in range(sz):\n            pre_sum[i+1] = pre_sum[i] ^ arr[i]\n        # 1 <= k < sz\n        # 1 <= j <= k\n        # 0 <= i < j\n        ans = 0\n        for k in range(2, sz+1):\n            for j in range(2, k+1):\n                for i in range(1, j):\n                    a = pre_sum[j-1] ^ pre_sum[i-1]\n                    b = pre_sum[k] ^ pre_sum[j-1]\n                    if a == b:\n                        ans += 1\n        return ans\n")),(0,a.kt)("p",null,"pre_sum\u53d6\u503c\u7684\u65f6\u5019\u518d\u6574\u4f53+1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def countTriplets(self, arr: List[int]) -> int:\n        sz = len(arr)\n        pre_sum = [0 for _ in range(sz+1)]\n        for i in range(sz):\n            pre_sum[i+1] = pre_sum[i] ^ arr[i]\n        # 1 <= k < sz\n        # 1 <= j <= k\n        # 0 <= i < j\n        ans = 0\n        for k in range(1, sz):\n            for j in range(1, k+1):\n                for i in range(0, j):\n                    # \u5750\u6807\u6620\u5c04\u5230pre_sum\u65f6\u9700\u8981\u6574\u4f53\u52a0\u4e00\n                    a = pre_sum[j-1+1] ^ pre_sum[i-1+1]\n                    b = pre_sum[k+1] ^ pre_sum[j-1+1]\n                    if a == b:\n                        # print(i, j, k)\n                        ans += 1\n        return ans\n")),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u54c8\u5e0c\u8868"},"\u65b9\u6cd5\u4e8c\uff1a\u54c8\u5e0c\u8868"),(0,a.kt)("p",null,"\u5e94\u7528\u4e00\u6761\u5f88\u91cd\u8981\u7684\u5f02\u6216\u6027\u8d28\uff1a",(0,a.kt)("strong",{parentName:"p"},"\u4e24\u4e2a\u6570\u76f8\u540c\uff0c\u8fd9\u4e24\u4e2a\u6570\u5f02\u6216\u4e3a 0")),(0,a.kt)("p",null,"\u6839\u636e\u9898\u76ee\n$$\na = pre","_","sum","[j-1]"," \\oplus pre","_","sum","[i-1]"," ","\\","\nb = pre","_","sum","[k]"," \\oplus pre","_","sum","[j-1]","\n$$\n\u56e0\u4e3a a \u7b49\u4e8e b\uff0c\u6240\u4ee5\n$$\na \\oplus b = 0 ","\\","\npre","_","sum","[j-1]"," \\oplus pre","_","sum","[i-1]"," \\oplus pre","_","sum","[k]"," \\oplus pre","_","sum","[j-1]"," = 0 ","\\","\npre","_","sum","[i-1]"," \\oplus pre","_","sum","[k]"," = 0 ","\\","\npre","_","sum","[i-1]"," = pre","_","sum","[k]","\n$$\n\u63a8\u5bfc\u51fa\u4e00\u6761\u91cd\u8981\u7684\u7ed3\u8bba\uff1a"),(0,a.kt)("p",null,"\u5f53 ",(0,a.kt)("inlineCode",{parentName:"p"},"pre_sum[i-1] = pre_sum[k]")," \u65f6\uff0c\u5f53\u904d\u5386\u5230 k \u65f6\uff0cpre_sum","[k]"," \u7684\u503c\u5728\u524d\u9762\u51fa\u73b0\u8fc7"),(0,a.kt)("p",null,"k \u548c i \u4e4b\u95f4\u7684 j \u90fd\u6ee1\u8db3\u8fd9\u4e2a\u516c\u5f0f\uff0c\u4e0e j \u70b9\u65e0\u5173\u4e86\uff0ck \u548c i \u4e4b\u95f4\u7684 j \u7684\u4e2a\u6570\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"k - i")),(0,a.kt)("p",null,"\u6240\u4ee5\u6211\u4eec\u5728\u904d\u5386 k \u7684\u65f6\u5019\uff0c\u628apre_sum","[k]"," \u4f5c\u4e3a\u952e\u503c\u3001k\u4f5c\u4e3ai-1\u5b58\u5165 history[pre_sum","[k]","]\uff08history\u6784\u6210\uff1a{ \u5f02\u6216\u7ed3\u679c : ","[\u4e0b\u68071, \u4e0b\u68072 ...]"," }\uff09"),(0,a.kt)("p",null,"\u53d6\u503c\u7684\u65f6\u5019\uff0c\u6ce8\u610f\u6062\u590d\u51fa i \u7684\u503c\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"i = idx + 1")),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(n^2)")),(0,a.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def countTriplets(self, arr: List[int]) -> int:\n        sz = len(arr)\n        pre_sum = [0 for _ in range(sz+1)]\n        for i in range(sz):\n            pre_sum[i+1] = pre_sum[i] ^ arr[i]\n        \n        # \u8bb0\u5f55\u51fa\u73b0\u8fc7\u7684\u5f02\u6216\u7ed3\u679c\uff0c\u5b58\u50a8\u683c\u5f0f\uff1a{ \u5f02\u6216\u7ed3\u679c : [\u4e0b\u68071, \u4e0b\u68072 ...] }\n        history = collections.defaultdict(list)\n        history[0] = [0] # \u6ce8\u610f\u5148\u5f80\u300c\u54c8\u5e0c\u8868\u300d\u5b58\u5165\u4e00\u4e2a\u54e8\u5175 0 \u4f5c\u4e3a\u8fb9\u754c\uff0c\u5e38\u89c4\u505a\u6cd5\n        ans = 0\n        for k in range(1, sz+1):\n            for idx in history[pre_sum[k]]:\n                i = idx + 1\n                ans += k - i\n            history[pre_sum[k]].append(k)\n        return ans\n\n")))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5067],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=u(t),c=o,k=m["".concat(p,".").concat(c)]||m[c]||s[c]||l;return t?a.createElement(k,r(r({ref:n},d),{},{components:t})):a.createElement(k,r({ref:n},d))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,r=new Array(l);r[0]=c;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[m]="string"==typeof e?e:o,r[1]=i;for(var u=2;u<l;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},43024:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=t(87462),o=(t(67294),t(3905));const l={},r="\u8be6\u89e3 Kubernetes Volume \u7684\u5b9e\u73b0\u539f\u7406",i={unversionedId:"Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/volume",id:"Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/volume",title:"\u8be6\u89e3 Kubernetes Volume \u7684\u5b9e\u73b0\u539f\u7406",description:"\u6765\u6e90\uff1a\u8be6\u89e3 Kubernetes Volume \u7684\u5b9e\u73b0\u539f\u7406",source:"@site/docs/Knowledge/05-\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/3-volume.md",sourceDirName:"Knowledge/05-\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3",slug:"/Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/volume",permalink:"/docs/Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/volume",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"knowledgeSidebar",previous:{title:"\u8be6\u89e3 Kubernetes Service \u7684\u5b9e\u73b0\u539f\u7406",permalink:"/docs/Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/service"},next:{title:"\u8be6\u89e3 Kubernetes ReplicaSet \u7684\u5b9e\u73b0\u539f\u7406",permalink:"/docs/Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/replicaSet"}},p={},u=[{value:"\u4e00\u3001\u6982\u8ff0",id:"\u4e00\u6982\u8ff0",level:2},{value:"1\u3001\u5377",id:"1\u5377",level:3},{value:"2\u3001\u6301\u4e45\u5377",id:"2\u6301\u4e45\u5377",level:3},{value:"1\uff09\u8bbf\u95ee\u6a21\u5f0f",id:"1\u8bbf\u95ee\u6a21\u5f0f",level:4},{value:"2\uff09\u56de\u6536\u7b56\u7565",id:"2\u56de\u6536\u7b56\u7565",level:4},{value:"3\uff09\u5b58\u50a8\u4f9b\u5e94",id:"3\u5b58\u50a8\u4f9b\u5e94",level:4},{value:"\u4e8c\u3001\u7ba1\u7406",id:"\u4e8c\u7ba1\u7406",level:2},{value:"1\u3001kubelet",id:"1kubelet",level:3},{value:"2\u3001VolumeManager\uff08\u5377\u7ba1\u7406\u5668\uff09",id:"2volumemanager\u5377\u7ba1\u7406\u5668",level:3},{value:"1\uff09DesiredStateOfWorldPopulator",id:"1desiredstateofworldpopulator",level:4},{value:"2\uff09Reconciler",id:"2reconciler",level:4},{value:"3\u3001AttachDetachController\uff08\u9644\u7740\u5206\u79bb\u63a7\u5236\u5668\uff09",id:"3attachdetachcontroller\u9644\u7740\u5206\u79bb\u63a7\u5236\u5668",level:3},{value:"1\uff09DesiredStateOfWorldPopulator",id:"1desiredstateofworldpopulator-1",level:4},{value:"2\uff09Reconciler",id:"2reconciler-1",level:4},{value:"4\u3001PVController\uff08\u6301\u4e45\u5377\u63a7\u5236\u5668\uff09",id:"4pvcontroller\u6301\u4e45\u5377\u63a7\u5236\u5668",level:3},{value:"1\uff09VolumeWorker",id:"1volumeworker",level:4},{value:"2\uff09ClaimWorker",id:"2claimworker",level:4},{value:"\u5c0f\u7ed3",id:"\u5c0f\u7ed3",level:4},{value:"\u4e09\u3001\u63d2\u4ef6",id:"\u4e09\u63d2\u4ef6",level:2},{value:"1\uff09EmptyDir",id:"1emptydir",level:3},{value:"2\uff09ConfigMap \u548c Secret",id:"2configmap-\u548c-secret",level:3},{value:"3\uff09GCEPersistentDisk",id:"3gcepersistentdisk",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2},{value:"Referenece",id:"referenece",level:2}],d={toc:u};function m(e){let{components:n,...l}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u8be6\u89e3-kubernetes-volume-\u7684\u5b9e\u73b0\u539f\u7406"},"\u8be6\u89e3 Kubernetes Volume \u7684\u5b9e\u73b0\u539f\u7406"),(0,o.kt)("p",null,"\u6765\u6e90\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://draveness.me/kubernetes-volume/"},"\u8be6\u89e3 Kubernetes Volume \u7684\u5b9e\u73b0\u539f\u7406")),(0,o.kt)("p",null,"\u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u867d\u7136\u65e0\u72b6\u6001\u7684\u670d\u52a1\u975e\u5e38\u5e38\u89c1\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u7684\u751f\u4ea7\u4e2d\u4ecd\u7136\u4f1a\u9700\u8981\u5728\u96c6\u7fa4\u4e2d\u90e8\u7f72\u4e00\u4e9b\u300c\u6709\u72b6\u6001\u300d\u7684\u8282\u70b9\uff0c\u6bd4\u5982\u4e00\u4e9b\u5b58\u50a8\u4e2d\u95f4\u4ef6\u3001\u6d88\u606f\u961f\u5217\u7b49\u7b49\u3002"),(0,o.kt)("p",null,"\u7136\u800c Kubernetes \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5bb9\u5668\u968f\u65f6\u90fd\u53ef\u80fd\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\u800c\u88ab\u5220\u9664\u548c\u91cd\u542f\uff0c\u5bb9\u5668\u4e2d\u7684\u6587\u4ef6\u4e5f\u4f1a\u968f\u7740\u5b83\u7684\u5220\u9664\u800c\u4e22\u5931\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u96c6\u7fa4\u4e2d\u7684\u67d0\u4e9b\u6587\u4ef6\u548c\u6570\u636e\u8fdb\u884c\u300e\u6301\u4e45\u5316\u300f\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u7531\u4e8e\u540c\u4e00\u4e2a Pod \u4e2d\u7684\u591a\u4e2a Container \u53ef\u80fd\u4e5f\u4f1a\u6709\u5171\u4eab\u6587\u4ef6\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u901a\u8fc7\u5171\u4eab\u6587\u4ef6\u76ee\u5f55\u7684\u65b9\u5f0f\u4e3a nginx \u751f\u6210\u9700\u8981\u4ee3\u7406\u7684\u9759\u6001\u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u5f0f\u6765\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002"),(0,o.kt)("p",null,"\u4f5c\u4e3a Kubernetes \u96c6\u7fa4\u4e2d\u9664\u4e86 Pod \u548c Service \u4e4b\u5916\u6700\u5e38\u89c1\u7684\u57fa\u672c\u5bf9\u8c61\uff0cVolume \u4e0d\u4ec5\u80fd\u591f\u89e3\u51b3 Container \u4e2d\u6587\u4ef6\u7684\u4e34\u65f6\u6027\u95ee\u9898\uff0c\u4e5f\u80fd\u591f\u8ba9\u540c\u4e00\u4e2a Pod \u4e2d\u7684\u591a\u4e2a Container \u5171\u4eab\u6587\u4ef6\u3002"),(0,o.kt)("h2",{id:"\u4e00\u6982\u8ff0"},"\u4e00\u3001\u6982\u8ff0"),(0,o.kt)("p",null,"Kubernetes \u4e2d\u7684 Volume \u79cd\u7c7b\u975e\u5e38\u591a\uff0c\u5b83\u4e0d\u4ec5\u8981\u652f\u6301\u4e34\u65f6\u7684\u3001\u6613\u5931\u7684\u78c1\u76d8\u6587\u4ef6\uff0c\u8fd8\u9700\u8981\u89e3\u51b3\u6301\u4e45\u5b58\u50a8\u7684\u95ee\u9898\uff1b\u7b2c\u4e00\u4e2a\u95ee\u9898\u5f80\u5f80\u90fd\u6bd4\u8f83\u5bb9\u6613\u89e3\u51b3\uff0c\u540e\u8005\u4f5c\u4e3a\u6301\u4e45\u5b58\u50a8\u5728\u5f88\u591a\u65f6\u5019\u90fd\u9700\u8981\u4e0e\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u5b58\u50a8\u65b9\u6848\u6253\u4ea4\u9053\uff0c\u5982\u679c\u662f Kubernetes \u4e2d\u5df2\u7ecf\u652f\u6301\u7684\u5b58\u50a8\u7c7b\u578b\u5012\u662f\u8fd8\u597d\uff0c\u9047\u5230\u4e0d\u652f\u6301\u7684\u7c7b\u578b\u8fd8\u662f\u6bd4\u8f83\u9ebb\u70e6\u7684\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"k8s-20",src:t(30914).Z,width:"1200",height:"280"})),(0,o.kt)("p",null,"\u9664\u4e86\u5377\u548c\u6301\u4e45\u5377\u4e4b\u5916\uff0cKubernetes \u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u66f4\u52a0\u590d\u6742\u7684\u6982\u5ff5 - \u52a8\u6001\u5b58\u50a8\u4f9b\u5e94\uff0c\u5b83\u80fd\u591f\u5141\u8bb8\u5b58\u50a8\u5377\u6309\u9700\u8fdb\u884c\u521b\u5efa\uff0c\u4e0d\u518d\u9700\u8981\u96c6\u7fa4\u7684\u7ba1\u7406\u5458\u624b\u52a8\u8c03\u7528\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u63a5\u53e3\u6216\u8005\u754c\u9762\u521b\u5efa\u65b0\u7684\u5b58\u50a8\u5377\u3002"),(0,o.kt)("p",null,"\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5377\u5728\u88ab Pod \u4f7f\u7528\u65f6\u90fd\u4f1a\u7ecf\u5386\u56db\u4e2a\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u9644\u7740\uff08Attach\uff09\u3001\u6302\u8f7d\uff08Mount\uff09\u3001\u5378\u8f7d\uff08Unmount\uff09\u548c\u5206\u79bb\uff08Detach\uff09\u3002"),(0,o.kt)("p",null,"\u5982\u679c Pod \u4e2d\u4f7f\u7528\u7684\u662f EmptyDir\u3001HostPath \u8fd9\u79cd\u7c7b\u578b\u7684\u5377\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5377\u5e76\u4e0d\u4f1a\u7ecf\u5386\u9644\u7740\u548c\u5206\u79bb\u7684\u64cd\u4f5c\uff0c\u5b83\u4eec\u53ea\u4f1a\u88ab\u6302\u8f7d\u548c\u5378\u8f7d\u5230\u67d0\u4e00\u4e2a\u7684 Pod \u4e2d\uff0c\u4e0d\u8fc7\u5982\u679c\u4f7f\u7528\u7684\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u5b58\u50a8\u670d\u52a1\uff0c",(0,o.kt)("strong",{parentName:"p"},"\u8fd9\u4e9b\u6301\u4e45\u5377\u53ea\u6709\u9644\u7740\u5230\u67d0\u4e00\u4e2a\u8282\u70b9\u4e4b\u540e"),"\u624d\u53ef\u4ee5\u88ab\u6302\u5728\u5230\u76f8\u5e94\u7684\u76ee\u5f55\u4e0b\uff0c\u4e0d\u8fc7\u5728\u5176\u4ed6\u8282\u70b9\u4f7f\u7528\u8fd9\u4e9b\u5377\u65f6\uff0c\u8be5\u5b58\u50a8\u8d44\u6e90\u4e5f\u9700\u8981\u5148\u4e0e\u5f53\u524d\u7684\u8282\u70b9\u5206\u79bb\u3002"),(0,o.kt)("h3",{id:"1\u5377"},"1\u3001\u5377"),(0,o.kt)("p",null,"\u5728\u8fd9\u4e00\u8282\u4e2d\u63d0\u5230\u7684\u5377\uff08Volume\uff09\u5176\u5b9e\u662f\u4e00\u4e2a\u6bd4\u8f83\u7279\u5b9a\u7684\u6982\u5ff5\uff0c\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u53ef\u80fd\u4f1a\u968f\u7740 Pod \u7684\u5220\u9664\u800c\u5220\u9664\uff0c\u5e38\u89c1\u7684\u5377\u5c31\u5305\u62ec EmptyDir\u3001HostPath\u3001ConfigMap \u548c Secret\uff0c\u8fd9\u4e9b\u5377\u4e0e\u6240\u5c5e\u7684 Pod \u5177\u6709\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u65b9\u5f0f\u6302\u8f7d\u5230 Pod \u4e0b\u9762\u7684\u67d0\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pod\nspec:\n  containers:\n  - name: test-container\n    image: k8s.gcr.io/busybox\n    volumeMounts:\n    - name: cache-volume\n      mountPath: /cache\n    - name: test-volume\n      mountPath: /hostpath\n    - name: config-volume\n      mountPath: /data/configmap\n    - name: special-volume\n      mountPath: /data/secret\n  volumes:\n  - name: cache-volume\n    emptyDir: {}\n  - name: hostpath-volume\n    hostPath:\n      path: /data/hostpath\n      type: Directory\n  - name: config-volume\n    configMap:\n      name: special-config\n  - name: secret-volume\n    secret:\n      secretName: secret-config\n")),(0,o.kt)("p",null,"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u6211\u4eec\u5c06 ConfigMap \u6216\u8005 Secret \u300e\u5305\u88c5\u300f\u6210\u5377\u5e76\u6302\u8f7d\u5230\u67d0\u4e2a\u76ee\u5f55\u65f6\uff0c\u6211\u4eec\u5176\u5b9e\u521b\u5efa\u4e86\u4e00\u4e9b\u65b0\u7684 Volume\uff0c\u8fd9\u4e9b Volume \u5e76\u4e0d\u662f Kubernetes \u4e2d\u7684\u5bf9\u8c61\uff0c\u5b83\u4eec\u53ea\u5b58\u5728\u4e8e\u5f53\u524d Pod \u4e2d\uff0c\u968f\u7740 Pod \u7684\u5220\u9664\u800c\u5220\u9664\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e9b\u300e\u4e34\u65f6\u5377\u300f\u7684\u5220\u9664\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u76f8\u5173 ",(0,o.kt)("inlineCode",{parentName:"p"},"ConfigMap")," \u6216\u8005 ",(0,o.kt)("inlineCode",{parentName:"p"},"Secret")," \u5bf9\u8c61\u7684\u5220\u9664\u3002"),(0,o.kt)("p",null,"\u4ece\u4e0a\u9762\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u770b\u51fa Volume \u6ca1\u6709\u529e\u6cd5\u8131\u79bb Pod \u800c\u751f\u5b58\uff0c\u5b83\u4e0e Pod \u62e5\u6709\u5b8c\u5168\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u800c\u4e14\u5b83\u4eec\u4e5f\u4e0d\u662f Kubernetes \u5bf9\u8c61\uff0c\u6240\u4ee5 Volume \u7684\u4e3b\u8981\u4f5c\u7528\u8fd8\u662f\u7528\u4e8e\u8de8\u8282\u70b9\u6216\u8005\u5bb9\u5668\u5bf9\u6570\u636e\u8fdb\u884c\u540c\u6b65\u548c\u5171\u4eab\u3002"),(0,o.kt)("h3",{id:"2\u6301\u4e45\u5377"},"2\u3001\u6301\u4e45\u5377"),(0,o.kt)("p",null,"\u4e34\u65f6\u7684\u5377\u6ca1\u6709\u529e\u6cd5\u89e3\u51b3\u6570\u636e\u6301\u4e45\u5b58\u50a8\u7684\u95ee\u9898\uff0c\u60f3\u8981\u8ba9\u6570\u636e\u80fd\u591f\u6301\u4e45\u5316\uff0c\u9996\u5148\u5c31\u9700\u8981\u5c06 Pod \u548c\u5377\u7684\u58f0\u660e\u5468\u671f\u5206\u79bb\uff0c\u8fd9\u4e5f\u5c31\u662f\u5f15\u5165\u6301\u4e45\u5377 ",(0,o.kt)("inlineCode",{parentName:"p"},"PersistentVolume(PV)")," \u7684\u539f\u56e0\u3002\u6211\u4eec\u53ef\u4ee5\u5c06 ",(0,o.kt)("inlineCode",{parentName:"p"},"PersistentVolume")," \u7406\u89e3\u4e3a\u96c6\u7fa4\u4e2d\u8d44\u6e90\u7684\u4e00\u79cd\uff0c\u5b83\u4e0e\u96c6\u7fa4\u4e2d\u7684\u8282\u70b9 Node \u6709\u4e9b\u76f8\u4f3c\uff0cPV \u4e3a Kubernete \u96c6\u7fa4\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5982\u4f55\u63d0\u4f9b\u5e76\u4e14\u4f7f\u7528\u5b58\u50a8\u7684\u62bd\u8c61\uff0c\u4e0e\u5b83\u4e00\u8d77\u88ab\u5f15\u5165\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5c31\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"PersistentVolumeClaim(PVC)"),"\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\u4e0e\u8282\u70b9\u548c Pod \u4e4b\u95f4\u7684\u5173\u7cfb\u5dee\u4e0d\u591a\uff1a"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"k8s-21",src:t(63375).Z,width:"1200",height:"370"})),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PersistentVolume")," \u662f\u96c6\u7fa4\u4e2d\u7684\u4e00\u79cd\u88ab\u7ba1\u7406\u5458\u5206\u914d\u7684\u5b58\u50a8\u8d44\u6e90\uff0c\u800c ",(0,o.kt)("inlineCode",{parentName:"p"},"PersistentVolumeClaim")," \u8868\u793a\u7528\u6237\u5bf9\u5b58\u50a8\u8d44\u6e90\u7684\u7533\u8bf7\uff0c\u5b83\u4e0e Pod \u975e\u5e38\u76f8\u4f3c\uff0cPVC \u6d88\u8017\u4e86\u6301\u4e45\u5377\u8d44\u6e90\uff0c\u800c Pod \u6d88\u8017\u4e86\u8282\u70b9\u4e0a\u7684 CPU \u548c\u5185\u5b58\u7b49\u7269\u7406\u8d44\u6e90\u3002"),(0,o.kt)("p",null,"\u56e0\u4e3a PVC \u5141\u8bb8\u7528\u6237\u6d88\u8017\u62bd\u8c61\u7684\u5b58\u50a8\u8d44\u6e90\uff0c\u6240\u4ee5\u7528\u6237\u9700\u8981\u4e0d\u540c\u7c7b\u578b\u3001\u5c5e\u6027\u548c\u6027\u80fd\u7684 PV \u5c31\u662f\u4e00\u4e2a\u6bd4\u8f83\u5e38\u89c1\u7684\u9700\u6c42\u4e86\uff0c\u5728\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"StorageClass")," \u6765\u63d0\u4f9b\u4e0d\u540c\u79cd\u7c7b\u7684 PV \u8d44\u6e90\uff0c\u4e0a\u5c42\u7528\u6237\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7cfb\u7edf\u7ba1\u7406\u5458\u63d0\u4f9b\u597d\u7684\u5b58\u50a8\u7c7b\u578b\u3002"),(0,o.kt)("h4",{id:"1\u8bbf\u95ee\u6a21\u5f0f"},"1\uff09\u8bbf\u95ee\u6a21\u5f0f"),(0,o.kt)("p",null,"Kubernetes \u4e2d\u7684 PV \u63d0\u4f9b\u4e09\u79cd\u4e0d\u540c\u7684\u8bbf\u95ee\u6a21\u5f0f\uff0c\u5206\u522b\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"ReadWriteOnce"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"ReadOnlyMany")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"ReadWriteMany"),"\uff0c\u8fd9\u4e09\u79cd\u6a21\u5f0f\u7684\u542b\u4e49\u548c\u7528\u6cd5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u4eec\u7684\u540d\u5b57\u63a8\u6d4b\u51fa\u6765\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReadWriteOnce")," \u8868\u793a\u5f53\u524d\u5377\u53ef\u4ee5\u88ab\u4e00\u4e2a\u8282\u70b9\u4f7f\u7528\u8bfb\u5199\u6a21\u5f0f\u6302\u8f7d\uff1b"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReadOnlyMany")," \u8868\u793a\u5f53\u524d\u5377\u53ef\u4ee5\u88ab\u591a\u4e2a\u8282\u70b9\u4f7f\u7528\u53ea\u8bfb\u6a21\u5f0f\u6302\u8f7d\uff1b"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ReadWriteMany")," \u8868\u793a\u5f53\u524d\u5377\u53ef\u4ee5\u88ab\u591a\u4e2a\u8282\u70b9\u4f7f\u7528\u8bfb\u5199\u6a21\u5f0f\u6302\u8f7d\uff1b")),(0,o.kt)("p",null,"\u4e0d\u540c\u7684\u5377\u63d2\u4ef6\u5bf9\u4e8e\u8bbf\u95ee\u6a21\u5f0f\u5176\u5b9e\u6709\u7740\u4e0d\u540c\u7684\u652f\u6301\uff0cAWS \u4e0a\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"AWSElasticBlockStore")," \u548c GCP \u4e0a\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"GCEPersistentDisk")," \u5c31\u53ea\u652f\u6301 ",(0,o.kt)("inlineCode",{parentName:"p"},"ReadWriteOnce")," \u65b9\u5f0f\u7684\u6302\u8f7d\uff0c\u4e0d\u80fd\u540c\u65f6\u6302\u8f7d\u5230\u591a\u4e2a\u8282\u70b9\u4e0a\uff0c\u4f46\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"CephFS")," \u5c31\u540c\u65f6\u652f\u6301\u8fd9\u4e09\u79cd\u8bbf\u95ee\u6a21\u5f0f\u3002"),(0,o.kt)("h4",{id:"2\u56de\u6536\u7b56\u7565"},"2\uff09\u56de\u6536\u7b56\u7565"),(0,o.kt)("p",null,"\u5f53\u67d0\u4e2a\u670d\u52a1\u4f7f\u7528\u5b8c\u67d0\u4e00\u4e2a\u5377\u4e4b\u540e\uff0c\u5b83\u4eec\u4f1a\u4ece apiserver \u4e2d\u5220\u9664 PVC \u5bf9\u8c61\uff0c\u8fd9\u65f6 Kubernetes \u5c31\u9700\u8981\u5bf9\u5377\u8fdb\u884c\u56de\u6536\uff08Reclaim\uff09\uff0c\u6301\u4e45\u5377\u4e5f\u540c\u6837\u5305\u542b\u4e09\u79cd\u4e0d\u540c\u7684\u56de\u6536\u7b56\u7565\uff0c\u8fd9\u4e09\u79cd\u56de\u6536\u7b56\u7565\u4f1a\u6307\u5bfc Kubernetes \u9009\u62e9\u4e0d\u540c\u7684\u65b9\u5f0f\u5bf9\u4f7f\u7528\u8fc7\u7684\u5377\u8fdb\u884c\u5904\u7406\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"k8s-22",src:t(71849).Z,width:"1200",height:"280"})),(0,o.kt)("p",null,"\u7b2c\u4e00\u79cd\u56de\u6536\u7b56\u7565\u5c31\u662f\u4fdd\u7559\uff08Retain\uff09PV \u4e2d\u7684\u6570\u636e\uff0c\u5982\u679c\u5e0c\u671b PV \u80fd\u591f\u88ab\u91cd\u65b0\u4f7f\u7528\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u9700\u8981\u5220\u9664\u88ab\u4f7f\u7528\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"PersistentVolume")," \u5bf9\u8c61\u5e76\u624b\u52a8\u6e05\u9664\u5b58\u50a8\u548c\u76f8\u5173\u5b58\u50a8\u4e0a\u7684\u6570\u636e\u3002"),(0,o.kt)("p",null,"\u53e6\u4e00\u79cd\u5e38\u89c1\u7684\u56de\u6536\u7b56\u7565\u5c31\u662f\u5220\u9664\uff08Delete\uff09\uff0c\u5f53 PVC \u88ab\u4f7f\u7528\u8005\u5220\u9664\u4e4b\u540e\uff0c\u5982\u679c\u5f53\u524d\u5377\u652f\u6301\u5220\u9664\u7684\u56de\u6536\u7b56\u7565\uff0c\u90a3\u4e48 PV \u548c\u76f8\u5173\u7684\u5b58\u50a8\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\uff0c\u5982\u679c\u5f53\u524d PV \u4e0a\u7684\u6570\u636e\u786e\u5b9e\u4e0d\u518d\u9700\u8981\uff0c\u90a3\u4e48\u5c06\u56de\u6536\u7b56\u7565\u8bbe\u7f6e\u6210 Delete \u80fd\u591f\u8282\u7701\u624b\u52a8\u5904\u7406\u7684\u65f6\u95f4\u5e76\u5feb\u901f\u91ca\u653e\u65e0\u7528\u7684\u8d44\u6e90\u3002"),(0,o.kt)("h4",{id:"3\u5b58\u50a8\u4f9b\u5e94"},"3\uff09\u5b58\u50a8\u4f9b\u5e94"),(0,o.kt)("p",null,"Kubernetes \u96c6\u7fa4\u4e2d\u5305\u542b\u4e86\u5f88\u591a\u7684 PV \u8d44\u6e90\uff0c\u800c PV \u8d44\u6e90\u6709\u4e24\u79cd\u4f9b\u5e94\u7684\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u9759\u6001\u7684\uff0c\u53e6\u4e00\u79cd\u662f\u52a8\u6001\u7684\uff0c\u9759\u6001\u5b58\u50a8\u4f9b\u5e94\u8981\u6c42\u96c6\u7fa4\u7684\u7ba1\u7406\u5458\u9884\u5148\u521b\u5efa\u4e00\u5b9a\u6570\u91cf\u7684 PV\uff0c\u7136\u540e\u4f7f\u7528\u8005\u901a\u8fc7 PVC \u7684\u65b9\u5f0f\u5bf9 PV \u8d44\u6e90\u7684\u4f7f\u7528\u8fdb\u884c\u58f0\u660e\u548c\u7533\u8bf7\uff1b\u4f46\u662f\u5f53\u7cfb\u7edf\u7ba1\u7406\u5458\u521b\u5efa\u7684 PV \u5bf9\u8c61\u4e0d\u80fd\u6ee1\u8db3\u4f7f\u7528\u8005\u7684\u9700\u6c42\u65f6\uff0c\u5c31\u4f1a\u8fdb\u5165\u52a8\u6001\u5b58\u50a8\u4f9b\u5e94\u7684\u903b\u8f91\uff0c\u4f9b\u5e94\u7684\u65b9\u5f0f\u662f\u57fa\u4e8e\u96c6\u7fa4\u4e2d\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"StorageClass")," \u5bf9\u8c61\uff0c\u5f53\u7136\u8fd9\u79cd\u52a8\u6001\u4f9b\u5e94\u7684\u65b9\u5f0f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u8fdb\u884c\u5173\u95ed\u3002"),(0,o.kt)("h2",{id:"\u4e8c\u7ba1\u7406"},"\u4e8c\u3001\u7ba1\u7406"),(0,o.kt)("p",null,"Volume \u7684\u521b\u5efa\u548c\u7ba1\u7406\u5728 Kubernetes \u4e2d\u4e3b\u8981\u7531\u5377\u7ba1\u7406\u5668 ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"AttachDetachController")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"PVController")," \u4e09\u4e2a\u7ec4\u4ef6\u8d1f\u8d23\u3002\u5176\u4e2d\u5377\u7ba1\u7406\u5668\u4f1a\u8d1f\u8d23\u5377\u7684\u521b\u5efa\u548c\u7ba1\u7406\u7684\u5927\u90e8\u5206\u5de5\u4f5c\uff0c\u800c ",(0,o.kt)("inlineCode",{parentName:"p"},"AttachDetachController")," \u4e3b\u8981\u8d1f\u8d23\u5bf9\u96c6\u7fa4\u4e2d\u7684\u5377\u8fdb\u884c Attach \u548c Detach\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"PVController")," \u8d1f\u8d23\u5904\u7406\u6301\u4e45\u5377\u7684\u53d8\u66f4\uff0c\u6587\u7ae0\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u51e0\u90e8\u5206\u4e4b\u95f4\u7684\u5173\u7cfb\u3001\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u534f\u4f5c\u7684\u3002"),(0,o.kt)("h3",{id:"1kubelet"},"1\u3001kubelet"),(0,o.kt)("p",null,"\u4f5c\u8005\u5728 ",(0,o.kt)("a",{parentName:"p",href:"https://draveness.me/kubernetes-pod"},"\u8be6\u89e3 Kubernetes Pod \u7684\u5b9e\u73b0\u539f\u7406")," \u4e00\u6587\u4e2d\u66fe\u7b80\u5355\u4ecb\u7ecd\u8fc7 kubelet \u548c Pod \u7684\u5173\u7cfb\uff0c\u524d\u8005\u4f1a\u8d1f\u8d23\u540e\u8005\u7684\u521b\u5efa\u548c\u7ba1\u7406\uff0ckubelet \u4e2d\u4e0e Pod \u76f8\u5173\u7684\u4fe1\u606f\u90fd\u662f\u4ece apiserver \u4e2d\u83b7\u53d6\u7684\uff1a"),(0,o.kt)("mermaid",{value:"graph LR\n    apiserver-.->u\n    u((updates))-.->kubelet\n    kubelet-.->podWorkers\n    podWorkers-.->worker1\n    podWorkers-.->worker2\n    style u fill:#fffede,stroke:#ebebb7"}),(0,o.kt)("p",null,"\u4e24\u8005\u7684\u901a\u4fe1\u4f1a\u4f7f\u7528\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"kubetypes.PodUpdate")," \u7c7b\u578b\u7684 Channel\uff0ckubelet \u4ece apiserver \u4e2d\u83b7\u53d6 Pod \u65f6\u4e5f\u4f1a\u901a\u8fc7\u5b57\u6bb5\u8fc7\u6ee4\u5668 ",(0,o.kt)("inlineCode",{parentName:"p"},"fields.OneTermEqualSelector(api.PodHostField, string(nodeName))")," \u4ec5\u9009\u62e9\u88ab\u8c03\u5ea6\u5230 kubelet \u6240\u5728\u8282\u70b9\u4e0a\u7684 Pod\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func NewSourceApiserver(c clientset.Interface, nodeName types.NodeName, updates chan<- interface{}) {\n    lw := cache.NewListWatchFromClient(c.CoreV1().RESTClient(), "pods", metav1.NamespaceAll, fields.OneTermEqualSelector(api.PodHostField, string(nodeName)))\n    newSourceApiserverFromLW(lw, updates)\n}\n')),(0,o.kt)("p",null,"\u6240\u6709\u5bf9 Pod \u7684\u53d8\u66f4\u6700\u7ec8\u90fd\u4f1a\u901a\u77e5\u7ed9\u5177\u4f53\u7684 PodWorker\uff0c\u8fd9\u4e9b Worker \u534f\u7a0b\u4f1a\u8c03\u7528 kubelet ",(0,o.kt)("inlineCode",{parentName:"p"},"syncPod")," \u51fd\u6570\u5b8c\u6210\u5bf9 Pod \u7684\u540c\u6b65\uff1a"),(0,o.kt)("mermaid",{value:"sequenceDiagram\n    participant PW as PodWorker\n    participant K as Kubelet\n    participant VL as VolumeManager\n    participant DSOWP as DesiredStateOfWorldPopulator\n    participant ASOW as ActualStateOfWorld\n    PW->>+K: syncPod\n    K->>+VL: WaitForAttachAndMount\n    VL-xDSOWP: ReprocessPod\n    loop verifyVolumesMounted\n        VL->>+ASOW: getUnmountedVolumes\n        ASOW--\x3e>-VL: Volumes\n    end\n    VL--\x3e>-K: Attached/Timeout\n    K--\x3e>-PW: return"}),(0,o.kt)("p",null,"\u5728\u4e00\u4e2a 100 \u591a\u884c\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"syncPod")," \u65b9\u6cd5\u4e2d\uff0ckubelet \u4f1a\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"WaitForAttachAndMount")," \u65b9\u6cd5\uff0c\u7b49\u5f85\u67d0\u4e00\u4e2a Pod \u4e2d\u7684\u5168\u90e8\u5377\u5df2\u7ecf\u88ab\u6210\u529f\u5730\u6302\u8f7d\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (kl *Kubelet) syncPod(o syncPodOptions) error {\n    pod := o.pod\n    \n    // ...\n    if !kl.podIsTerminated(pod) {\n        kl.volumeManager.WaitForAttachAndMount(pod)\n    }\n    // ...\n\n    return nil\n}\n")),(0,o.kt)("p",null,"\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u5c06\u5f53\u524d\u7684 Pod \u52a0\u5165\u9700\u8981\u91cd\u65b0\u5904\u7406\u5377\u6302\u8f7d\u7684\u961f\u5217\u5e76\u5728\u5faa\u73af\u4e2d\u6301\u7eed\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"verifyVolumesMounted")," \u65b9\u6cd5\u6765\u6bd4\u8f83\u671f\u671b\u6302\u8f7d\u7684\u5377\u548c\u5b9e\u9645\u6302\u8f7d\u5377\u7684\u533a\u522b\uff0c\u8fd9\u4e2a\u5faa\u73af\u4f1a\u7b49\u5f85\u4e24\u8005\u53d8\u5f97\u5b8c\u5168\u76f8\u540c\u6216\u8005\u8d85\u65f6\u540e\u624d\u4f1a\u8fd4\u56de\uff0c\u5f53\u524d\u65b9\u6cd5\u7684\u8fd4\u56de\u4e00\u822c\u4e5f\u610f\u5473\u7740 Pod \u4e2d\u7684\u5168\u90e8\u5377\u5df2\u7ecf\u6302\u8f7d\u6210\u529f\u4e86\u3002"),(0,o.kt)("h3",{id:"2volumemanager\u5377\u7ba1\u7406\u5668"},"2\u3001VolumeManager\uff08\u5377\u7ba1\u7406\u5668\uff09"),(0,o.kt)("p",null,"\u5f53\u524d\u8282\u70b9\u5377\u7684\u7ba1\u7406\u5c31\u90fd\u662f\u7531 ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager")," \u6765\u8d1f\u8d23\u4e86\uff0c\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff08Node\uff09\u4e0a\u7684 kubelet \u542f\u52a8\u65f6\u90fd\u4f1a\u8fd0\u884c\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager"),"Goroutine\uff0c\u5b83\u4f1a\u8d1f\u8d23\u5728\u5f53\u524d\u8282\u70b9\u4e0a\u7684 Pod \u548c Volume \u53d1\u751f\u53d8\u52a8\u65f6\u5bf9 Volume \u8fdb\u884c\u6302\u8f7d\u548c\u5378\u8f7d\u7b49\u64cd\u4f5c\u3002"),(0,o.kt)("mermaid",{value:"graph TD\n    subgraph Node\n        VolumeManager-.->Kubelet\n        DesiredStateOfWorldPopulator-.->VolumeManager\n        Reconciler-.->VolumeManager\n    end"}),(0,o.kt)("p",null,"\u8fd9\u4e2a\u7ec4\u4ef6\u4f1a\u5728\u8fd0\u884c\u65f6\u542f\u52a8\u4e24\u4e2a Goroutine \u6765\u7ba1\u7406\u8282\u70b9\u4e2d\u7684\u5377\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator"),"\uff0c\u53e6\u4e00\u4e2a\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler"),"\uff1a"),(0,o.kt)("mermaid",{value:"graph LR\n    VM(VolumeManager)-. run .->R(Reconciler)\n    VM-. run .->DSWP(DesiredStateOfWorldPopulator)\n    DSWP-. update .->DSW[DesiredStateOfWorld]\n    ASW[ActualStateOfWorld]-. get .->DSWP\n    DSW-. get .->R\n    R-. update .->ASW\n    DSWP-. getpods .->PodManager\n    style ASW fill:#fffede,stroke:#ebebb7\n    style DSW fill:#fffede,stroke:#ebebb7"}),(0,o.kt)("p",null,"\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u8fd9\u91cc\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler")," \u4e24\u4e2a Goroutine \u4f1a\u901a\u8fc7\u56fe\u4e2d\u4e24\u4e2a\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"XXXStateOfWorld")," \u72b6\u6001\u8fdb\u884c\u901a\u4fe1\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u4e3b\u8981\u8d1f\u8d23\u4ece Kubernetes \u8282\u70b9\u4e2d\u83b7\u53d6\u65b0\u7684 Pod \u5bf9\u8c61\u5e76\u66f4\u65b0 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorld")," \u7ed3\u6784\uff1b\u800c\u540e\u8005\u4f1a\u6839\u636e\u5b9e\u9645\u72b6\u6001\u548c\u5f53\u524d\u72b6\u6001\u7684\u533a\u522b\u5bf9\u5f53\u524d\u8282\u70b9\u7684\u72b6\u6001\u8fdb\u884c\u8fc1\u79fb\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorld")," \u4e2d\u72b6\u6001\u7684\u53d8\u66f4\u66f4\u65b0 ",(0,o.kt)("inlineCode",{parentName:"p"},"ActualStateOfWorld")," \u4e2d\u7684\u5185\u5bb9\u3002"),(0,o.kt)("p",null,"\u5377\u7ba1\u7406\u5668\u4e2d\u7684\u4e24\u4e2a Goroutine\uff0c\u4e00\u4e2a\u6839\u636e\u5de5\u7a0b\u5e08\u7684\u9700\u6c42\u66f4\u65b0\u8282\u70b9\u7684\u671f\u671b\u72b6\u6001 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorld"),"\uff0c\u53e6\u4e00\u4e2a Goroutine \u4fdd\u8bc1\u8282\u70b9\u5411\u671f\u671b\u72b6\u6001\u300e\u8fc1\u79fb\u300f\uff0c\u4e5f\u5c31\u662f\u8bf4 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u662f\u5377\u7ba1\u7406\u5668\u4e2d\u7684\u6d88\u8d39\u8005\uff0c\u800c ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler")," \u662f\u751f\u4ea7\u8005\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u5206\u522b\u4ecb\u7ecd\u8fd9\u4e24\u4e2a Goroutine \u7684\u5de5\u4f5c\u548c\u5b9e\u73b0\u3002"),(0,o.kt)("h4",{id:"1desiredstateofworldpopulator"},"1\uff09DesiredStateOfWorldPopulator"),(0,o.kt)("p",null,"\u4f5c\u4e3a\u5377\u7ba1\u7406\u5668\u4e2d\u7684\u6d88\u8d39\u8005\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u4f1a\u6839\u636e\u5de5\u7a0b\u5e08\u7684\u8bf7\u6c42\u4e0d\u65ad\u4fee\u6539\u5f53\u524d\u8282\u70b9\u7684\u671f\u671b\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65f6\u5e8f\u56fe\u6765\u4e86\u89e3\u5b83\u5230\u5e95\u505a\u4e86\u54ea\u4e9b\u5de5\u4f5c\uff1a"),(0,o.kt)("mermaid",{value:"sequenceDiagram\n    participant DSOWP as DesiredStateOfWorldPopulator\n    participant ASOW as ActualStateOfWorld\n    participant DSOW as DesiredStateOfWorld\n    participant PM as PodManager\n    participant VPM as VolumePluginManager\n    loop populatorLoop\n        DSOWP->>+DSOWP: findAndAddNewPods\n        DSOWP->>+ASOW: GetMountedVolumes\n        ASOW--\x3e>-DSOWP: mountedVolume\n        DSOWP->>+PM: GetPods\n        PM--\x3e>-DSOWP: pods\n        loop Every Pod\n            DSOWP->>+DSOW: AddPodToVolume\n            DSOW->>+VPM: FindPluginBySpec\n            VPM--\x3e>-DSOW: volumePlugin\n            DSOW--\x3e>-DSOWP: volumeName\n        end\n        deactivate DSOWP\n        \n        DSOWP->>+DSOWP: findAndRemoveDeletedPods\n        DSOWP->>+DSOW: GetVolumesToMount\n        DSOW--\x3e>-DSOWP: volumeToMount\n        loop Every Volume\n            DSOWP->>+PM: GetPodByUID\n            PM--\x3e>-DSOWP: pods\n            DSOWP->>DSOW: DeletePodFromVolume\n        end\n        deactivate DSOWP\n    end"}),(0,o.kt)("p",null,"\u6574\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u8fd0\u884c\u5728\u4e00\u4e2a\u5927\u7684\u5faa\u73af ",(0,o.kt)("inlineCode",{parentName:"p"},"populatorLoop"),"\u4e2d\uff0c\u5f53\u524d\u5faa\u73af\u4f1a\u901a\u8fc7\u4e24\u4e2a\u65b9\u6cd5 ",(0,o.kt)("inlineCode",{parentName:"p"},"findAndAddNewPods")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"findAndRemoveDeletedPods")," \u5206\u522b\u83b7\u53d6\u8282\u70b9\u4e2d\u88ab\u6dfb\u52a0\u7684\u65b0 Pod \u6216\u8005\u5df2\u7ecf\u88ab\u5220\u9664\u7684\u8001 Pod\uff0c\u83b7\u53d6\u5230 Pod \u4e4b\u540e\u4f1a\u6839\u636e\u5f53\u524d\u7684\u72b6\u6001\u4fee\u6539\u671f\u671b\u72b6\u6001\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (dswp *desiredStateOfWorldPopulator) findAndAddNewPods() {\n    mountedVolumesForPod := make(map[volumetypes.UniquePodName]map[string]cache.MountedVolume)\n\n    processedVolumesForFSResize := sets.NewString()\n    for _, pod := range dswp.podManager.GetPods() {\n        if dswp.isPodTerminated(pod) {\n            continue\n        }\n        dswp.processPodVolumes(pod, mountedVolumesForPod, processedVolumesForFSResize)\n    }\n}\n")),(0,o.kt)("p",null,"\u5c31\u50cf\u65f6\u5e8f\u56fe\u548c\u4ee3\u7801\u4e2d\u6240\u63cf\u8ff0\u7684\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u4f1a\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"PodManager")," \u4e2d\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u4e2d\u7684 Pod\uff0c\u968f\u540e\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"processPodVolumes")," \u65b9\u6cd5\u4e3a\u5c06\u6240\u6709\u7684 Pod \u5bf9\u8c61\u52a0\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorld")," \u7ed3\u6784\u4e2d\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (dswp *desiredStateOfWorldPopulator) processPodVolumes(pod *v1.Pod, mountedVolumesForPod map[volumetypes.UniquePodName]map[string]cache.MountedVolume, processedVolumesForFSResize sets.String) {\n    uniquePodName := util.GetUniquePodName(pod)\n    if dswp.podPreviouslyProcessed(uniquePodName) {\n        return\n    }\n\n    mountsMap, devicesMap := dswp.makeVolumeMap(pod.Spec.Containers)\n\n    for _, podVolume := range pod.Spec.Volumes {\n        pvc, volumeSpec, volumeGidValue, _ := dswp.createVolumeSpec(podVolume, pod.Name, pod.Namespace, mountsMap, devicesMap)\n        dswp.desiredStateOfWorld.AddPodToVolume(uniquePodName, pod, volumeSpec, podVolume.Name, volumeGidValue)\n    }\n\n    dswp.markPodProcessed(uniquePodName)\n    dswp.actualStateOfWorld.MarkRemountRequired(uniquePodName)\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"findAndAddNewPods")," \u65b9\u6cd5\u505a\u7684\u4e3b\u8981\u5c31\u662f\u5c06\u8282\u70b9\u4e2d\u52a0\u5165\u7684\u65b0 Pod \u6dfb\u52a0\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorld")," \u4e2d\uff0c\u800c\u53e6\u4e00\u4e2a\u65b9\u6cd5 ",(0,o.kt)("inlineCode",{parentName:"p"},"findAndRemoveDeletedPods")," \u5176\u5b9e\u4e5f\u505a\u7740\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u5b83\u4f1a\u5c06\u5df2\u7ecf\u88ab\u5220\u9664\u7684\u8282\u70b9\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorld")," \u4e2d\u5254\u9664\uff0c\u603b\u800c\u8a00\u4e4b ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u5c31\u662f\u5c06\u5f53\u524d\u8282\u70b9\u7684\u671f\u671b\u72b6\u6001\u540c\u6b65\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorld")," \u4e2d\uff0c\u7b49\u5f85\u6d88\u8d39\u8005\u7684\u5904\u7406\u3002"),(0,o.kt)("h4",{id:"2reconciler"},"2\uff09Reconciler"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager")," \u6301\u6709\u7684\u53e6\u4e00\u4e2a Goroutine ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler")," \u4f1a\u8d1f\u8d23\u5bf9\u5f53\u524d\u8282\u70b9\u4e0a\u7684 Volume \u8fdb\u884c\u7ba1\u7406\uff0c\u5b83\u5728\u6b63\u5e38\u8fd0\u884c\u65f6\u4f1a\u542f\u52a8 ",(0,o.kt)("inlineCode",{parentName:"p"},"reconcile")," \u5faa\u73af\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u4f1a\u5206\u4e09\u6b21\u5bf9\u5f53\u524d\u72b6\u6001\u548c\u671f\u671b\u72b6\u6001\u4e0d\u5339\u914d\u7684\u5377\u8fdb\u884c\u5378\u8f7d\u3001\u6302\u8f7d\u7b49\u64cd\u4f5c\uff1a"),(0,o.kt)("mermaid",{value:"sequenceDiagram\n    participant R as Reconciler\n    participant ASOW as ActualStateOfWorld\n    participant DSOW as DesiredStateOfWorld\n    participant OE as OperationExecutor\n    loop reconcile\n        R->>+ASOW: GetMountedVolumes\n        activate R\n        ASOW--\x3e>-R: MountedVolumes\n        R->>DSOW: PodExistsInVolume\n        R->>OE: UnmountVolume\n        deactivate R\n\n        R->>+DSOW: GetVolumesToMount\n        activate R\n        DSOW--\x3e>-R: volumeToMount\n        R->>ASOW: PodExistsInVolume\n        R->>OE: AttachVolume/MountVolume\n        deactivate R\n\n        R->>+ASOW: GetUnmountedVolumes\n        activate R\n        R->>DSOW: VolumeExists\n        R->>OE: UnmountDevice/DetachVolume\n        deactivate R\n    end"}),(0,o.kt)("p",null,"\u5728\u5f53\u524d\u7684\u5faa\u73af\u4e2d\u9996\u5148\u4f1a\u4fdd\u8bc1\u5e94\u8be5\u88ab\u5378\u8f7d\u4f46\u662f\u4ecd\u7136\u5728\u8282\u70b9\u4e2d\u5b58\u5728\u7684\u5377\u88ab\u5378\u8f7d\uff0c\u7136\u540e\u5c06\u5e94\u8be5\u6302\u8f7d\u7684\u5377\u6302\u8f7d\u5230\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u6700\u540e\u5c06\u8bbe\u5907\u4e0e\u8282\u70b9\u5206\u79bb\u6216\u8005\u5378\u8f7d\uff0c\u6240\u6709\u6302\u8f7d\u548c\u5378\u8f7d\u7684\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"OperationExecutor")," \u5b8c\u6210\u7684\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u8d1f\u8d23\u8c03\u7528\u76f8\u5e94\u7684\u63d2\u4ef6\u6267\u884c\u64cd\u4f5c\uff0c\u6211\u4eec\u4f1a\u5728\u6587\u7ae0\u7684\u540e\u9762\u5c55\u5f00\u8fdb\u884c\u4ecb\u7ecd\u3002"),(0,o.kt)("h3",{id:"3attachdetachcontroller\u9644\u7740\u5206\u79bb\u63a7\u5236\u5668"},"3\u3001AttachDetachController\uff08\u9644\u7740\u5206\u79bb\u63a7\u5236\u5668\uff09"),(0,o.kt)("p",null,"\u9664\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager")," \u4e4b\u5916\uff0c\u53e6\u4e00\u4e2a\u8d1f\u8d23\u7ba1\u7406 Kubernetes \u5377\u7684\u7ec4\u4ef6\u5c31\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"AttachDetachController")," \u4e86\uff0c\u5f15\u5165\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u76ee\u7684\u4e3b\u8981\u662f\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u8ba9\u5377\u7684\u6302\u8f7d\u548c\u5378\u8f7d\u80fd\u591f\u4e0e\u8282\u70b9\u7684\u53ef\u7528\u6027\u8131\u79bb\uff1b",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u4e00\u65e6\u8282\u70b9\u6216\u8005 kubelet \u5b95\u673a\uff0c\u9644\u7740\uff08Attach\uff09\u5728\u5f53\u524d\u8282\u70b9\u4e0a\u7684\u5377\u5e94\u8be5\u80fd\u591f\u88ab\u5206\u79bb\uff08Detach\uff09\uff0c\u5206\u79bb\u4e4b\u540e\u7684\u5377\u5c31\u80fd\u591f\u518d\u6b21\u9644\u7740\u5230\u5176\u4ed6\u8282\u70b9\u4e0a\uff1b"))),(0,o.kt)("li",{parentName:"ol"},"\u4fdd\u8bc1\u4e91\u670d\u52a1\u5546\u79d8\u94a5\u7684\u5b89\u5168\uff1b",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u5982\u679c\u6bcf\u4e00\u4e2a kubelet \u90fd\u9700\u8981\u89e6\u53d1\u5377\u7684\u9644\u7740\u548c\u5206\u79bb\u903b\u8f91\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u5e94\u8be5\u6709\u64cd\u4f5c\u5377\u7684\u6743\u9650\uff0c\u4f46\u662f\u8fd9\u4e9b\u6743\u9650\u5e94\u8be5\u53ea\u7531\u4e3b\u8282\u70b9\u638c\u63e1\uff0c\u8fd9\u6837\u80fd\u591f\u964d\u4f4e\u79d8\u94a5\u6cc4\u9732\u7684\u98ce\u9669\uff1b"))),(0,o.kt)("li",{parentName:"ol"},"\u63d0\u9ad8\u5377\u9644\u7740\u548c\u5206\u79bb\u90e8\u5206\u4ee3\u7801\u7684\u7a33\u5b9a\u6027\uff1b")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u8fd9\u4e9b\u5185\u5bb9\u90fd\u662f\u5728 Kubernetes \u5b98\u65b9\u9879\u76ee\u7684 GitHub issue ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/issues/20262"},"Detailed Design for Volume Attach/Detach Controller #20262")," \u4e2d\u8ba8\u8bba\u7684\uff0c\u60f3\u8981\u4e86\u89e3 ",(0,o.kt)("inlineCode",{parentName:"p"},"AttachDetachController")," \u51fa\u73b0\u7684\u539f\u56e0\u53ef\u4ee5\u9605\u8bfb\u76f8\u5173\u7684\u5185\u5bb9\u3002")),(0,o.kt)("p",null,"\u6bcf\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"AttachDetachController")," \u5176\u5b9e\u4e5f\u5305\u542b ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u4e24\u4e2a\u7ec4\u4ef6\uff0c\u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u867d\u7136\u4e0e ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager")," \u4e2d\u7684\u4e24\u4e2a\u7ec4\u4ef6\u91cd\u540d\uff0c\u5b9e\u73b0\u7684\u529f\u80fd\u4e5f\u975e\u5e38\u7c7b\u4f3c\uff0c\u4e0e ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager")," \u5177\u6709\u51e0\u4e4e\u76f8\u540c\u7684\u6570\u636e\u6d41\u5411\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a Goroutine \u662f\u8dd1\u5728 Kubernetes \u4e3b\u8282\u70b9\u4e2d\u7684\uff0c\u6240\u4ee5\u5b9e\u73b0\u4e0a\u53ef\u80fd\u4e00\u4e9b\u5dee\u5f02\uff1a"),(0,o.kt)("mermaid",{value:"graph LR\n    ADC(AttachDetachController)-. run .->R(Reconciler)\n    ADC-. run .->DSWP(DesiredStateOfWorldPopulator)\n    DSWP-. update .->DSW[DesiredStateOfWorld]\n    ASW[ActualStateOfWorld]-. get .->DSWP\n    DSW-. get .->R\n    R-. update .->ASW\n    DSWP-. getpods .->PodManager\n    style ASW fill:#fffede,stroke:#ebebb7\n    style DSW fill:#fffede,stroke:#ebebb7"}),(0,o.kt)("p",null,"\u9996\u5148\uff0c\u65e0\u8bba\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler")," \u8fd8\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator"),"\uff0c\u5b83\u4eec\u540c\u6b65\u7684\u5c31\u4e0d\u518d\u53ea\u662f\u67d0\u4e2a\u8282\u70b9\u4e0a Pod \u7684\u4fe1\u606f\u4e86\uff0c\u5b83\u4eec\u9700\u8981\u5bf9\u6574\u4e2a\u96c6\u7fa4\u4e2d\u7684 Pod \u5bf9\u8c61\u8d1f\u8d23\uff0c\u76f8\u5173\u6570\u636e\u4e5f\u4e0d\u518d\u662f\u901a\u8fc7 apiserver \u62c9\u53d6\u4e86\uff0c\u800c\u662f\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"podInformer")," \u5728 Pod \u5bf9\u8c61\u53d1\u751f\u53d8\u66f4\u65f6\u8c03\u7528\u76f8\u5e94\u7684\u65b9\u6cd5\u3002"),(0,o.kt)("h4",{id:"1desiredstateofworldpopulator-1"},"1\uff09DesiredStateOfWorldPopulator"),(0,o.kt)("p",null,"\u4f5c\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"AttachDetachController")," \u542f\u52a8\u7684 Goroutine\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4ece\u5f53\u524d\u96c6\u7fa4\u7684\u72b6\u6001\u4e2d\u83b7\u53d6 Pod \u5bf9\u8c61\u5e76\u4fee\u6539 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorld")," \u7ed3\u6784\uff0c\u4e0e ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager")," \u4e2d\u7684\u540c\u540d Goroutine \u8d77\u5230\u76f8\u540c\u7684\u4f5c\u7528\uff0c\u4f5c\u4e3a\u6574\u4e2a\u94fe\u8def\u7684\u751f\u4ea7\u8005\uff0c\u5b83\u4eec\u53ea\u662f\u5728\u5b9e\u73b0\u4e0a\u7531\u4e8e\u5904\u7406 Pod \u8303\u56f4\u7684\u4e0d\u540c\u6709\u4e00\u4e9b\u533a\u522b\uff1a"),(0,o.kt)("mermaid",{value:"sequenceDiagram\n    participant DSOWP as DesiredStateOfWorldPopulator\n    participant ASOW as ActualStateOfWorld\n    participant DSOW as DesiredStateOfWorld\n    participant PL as PodLister\n    participant VPM as VolumePluginManager\n    loop populatorLoopFunc\n        DSOWP->>+DSOWP: findAndRemoveDeletedPods\n        DSOWP->>+DSOW: GetPodToAdd\n        DSOW--\x3e>-DSOWP: podsToAdd\n        loop Every Pod\n        \n            DSOWP->>+PL: GetPod\n            alt PodNotFound\n                PL--\x3e>-DSOWP: return\n                DSOWP->>DSOW: DeletePod\n            else\n            end\n        end\n        deactivate DSOWP\n\n        DSOWP->>+DSOWP: findAndAddActivePods\n        DSOWP->>+PL: List\n        PL--\x3e>-DSOWP: pods\n        loop Every Pod\n            DSOWP->>+VPM: FindAttachablePluginBySpec\n            VPM--\x3e>-DSOW: attachableVolumePlugin\n            DSOWP->>+DSOW: AddPod/DeletePod\n            DSOW--\x3e>-DSOWP: volumeName\n        end\n        deactivate DSOWP\n   end"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"AttachDetachController")," \u4e2d\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"DesiredStateOfWorldPopulator")," \u534f\u7a0b\u5c31\u4e3b\u8981\u4f1a\u5148\u5904\u7406 Pod \u7684\u5220\u9664\u903b\u8f91\uff0c\u6dfb\u52a0 Pod \u7684\u903b\u8f91\u90fd\u662f\u6839\u636e ",(0,o.kt)("inlineCode",{parentName:"p"},"listPodsRetryDuration")," \u7684\u8bbe\u7f6e\u5468\u671f\u6027\u88ab\u89e6\u53d1\u7684\uff0c\u6240\u4ee5\u4ece\u8fd9\u91cc\u6211\u4eec\u5c31\u80fd\u770b\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"AttachDetachController")," \u5176\u5b9e\u4e3b\u8981\u8fd8\u662f\u5904\u7406\u88ab\u5220\u9664 Pod \u4e2d Volume \u7684\u5206\u79bb\u5de5\u4f5c\uff0c\u5f53\u8282\u70b9\u6216\u8005 kubelet \u5b95\u673a\u65f6\u80fd\u591f\u5c06\u8282\u70b9\u4e2d\u7684\u5377\u8fdb\u884c\u5206\u79bb\uff0c\u4fdd\u8bc1 Pod \u5728\u5176\u4ed6\u8282\u70b9\u91cd\u542f\u65f6\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002"),(0,o.kt)("h4",{id:"2reconciler-1"},"2\uff09Reconciler"),(0,o.kt)("p",null,"\u53e6\u4e00\u4e2a\u7528\u4e8e\u8c03\u8282\u5f53\u524d\u72b6\u6001\u4e0e\u671f\u671b\u72b6\u6001\u7684 Goroutine \u5728\u6267\u884c\u5b83\u5185\u90e8\u7684\u5faa\u73af\u65f6\uff0c\u4e5f\u4f1a\u4f18\u5148\u5904\u7406\u5206\u79bb\u5377\u7684\u903b\u8f91\uff0c\u540e\u5904\u7406\u9644\u7740\u5377\u7684\u5de5\u4f5c\uff0c\u6574\u4e2a\u65f6\u5e8f\u56fe\u4e0e ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeManager")," \u4e2d\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler")," \u975e\u5e38\u76f8\u4f3c\uff1a"),(0,o.kt)("mermaid",{value:"sequenceDiagram\n    participant R as Reconciler\n    participant ASOW as ActualStateOfWorld\n    participant DSOW as DesiredStateOfWorld\n    participant OE as OperationExecutor\n    loop reconcile\n        R->>+ASOW: GetAttachedVolumes\n        activate R\n        ASOW--\x3e>-R: attachedVolumes\n        R->>+DSOW: VolumeExists\n        alt VolumeNotExists\n            DSOW--\x3e>-R: return\n            R->>OE: DetachVolume\n            deactivate R\n        else\n        end\n\n        R->>+DSOW: GetVolumesToAttach\n        activate R\n        DSOW--\x3e>-R: volumeToAttach\n        R->>+ASOW: VolumeNodeExists\n        alt VolumeNotExists\n            ASOW--\x3e>-R: return\n            R->>OE: AttachVolume\n        else\n        end\n        deactivate R\n    end"}),(0,o.kt)("p",null,"\u8fd9\u91cc\u5904\u7406\u7684\u5de5\u4f5c\u5176\u5b9e\u76f8\u5bf9\u66f4\u5c11\u4e00\u4e9b\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"Reconciler")," \u4f1a\u5c06\u671f\u671b\u72b6\u6001\u4e2d\u7684\u5377\u4e0e\u5b9e\u9645\u72b6\u6001\u8fdb\u884c\u6bd4\u8f83\uff0c\u7136\u540e\u5206\u79bb\u9700\u8981\u5206\u79bb\u7684\u5377\u3001\u9644\u7740\u9700\u8981\u9644\u7740\u7684\u5377\uff0c\u903b\u8f91\u975e\u5e38\u7684\u6e05\u6670\u548c\u7b80\u5355\u3002"),(0,o.kt)("h3",{id:"4pvcontroller\u6301\u4e45\u5377\u63a7\u5236\u5668"},"4\u3001PVController\uff08\u6301\u4e45\u5377\u63a7\u5236\u5668\uff09"),(0,o.kt)("p",null,"\u4f5c\u4e3a\u96c6\u7fa4\u4e2d\u4e0e PV \u548c PVC \u6253\u4ea4\u9053\u7684\u63a7\u5236\u5668\uff0c\u6301\u4e45\u5377\u63a7\u5236\u5668\u540c\u65f6\u8fd0\u884c\u7740\u4e09\u4e2a Goroutine \u7528\u4e8e\u5904\u7406\u76f8\u5e94\u7684\u903b\u8f91\uff0c\u5176\u4e2d ",(0,o.kt)("inlineCode",{parentName:"p"},"Resync")," \u534f\u7a0b\u8d1f\u8d23\u4ece Kubernetes \u96c6\u7fa4\u4e2d\u540c\u6b65 PV \u548c PVC \u7684\u4fe1\u606f\uff0c\u800c\u53e6\u5916\u4e24\u4e2a\u5de5\u4f5c\u534f\u7a0b\u4e3b\u8981\u8d1f\u6d88\u8d39\u961f\u5217\u4e2d\u7684\u4efb\u52a1\uff1a"),(0,o.kt)("mermaid",{value:"graph LR\n    PVC(PVController)-.->R(Resync)\n    PVC-.->VW(VolumeWorker)\n    R-. enqueue .->VQ(VolumeQueue)\n    R-. enqueue .->CQ(ClaimQueue)\n    VQ-. dequeue .->VW\n    CQ-. dequeue .->CW\n    PVC-.->CW(ClaimWorker)\n    style VQ fill:#fffede,stroke:#ebebb7\n    style CQ fill:#fffede,stroke:#ebebb7"}),(0,o.kt)("p",null,"\u8fd9\u4e24\u4e2a\u5de5\u4f5c\u534f\u7a0b\u4e3b\u8981\u8d1f\u8d23\u5bf9\u9700\u8981\u7ed1\u5b9a\u6216\u8005\u89e3\u7ed1\u7684 PV \u548c PVC \u8fdb\u884c\u5904\u7406\uff0c\u4f8b\u5982\uff0c\u5f53\u7528\u6237\u521b\u5efa\u4e86\u65b0\u7684 PVC \u5bf9\u8c61\u65f6\uff0c\u4ece\u96c6\u7fa4\u4e2d\u67e5\u627e\u8be5 PVC \u9009\u62e9\u7684 PV \u5e76\u7ed1\u5b9a\u5230\u5f53\u524d\u7684 PVC \u4e0a\u3002"),(0,o.kt)("h4",{id:"1volumeworker"},"1\uff09VolumeWorker"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"VolumeWorker")," \u534f\u7a0b\u4e2d\u6267\u884c\u7684\u6700\u91cd\u8981\u7684\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"syncVolume"),"\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u4f1a\u6839\u636e\u5f53\u524d PV \u5bf9\u8c61\u7684\u89c4\u683c\u5bf9 PV \u548c PVC \u8fdb\u884c\u7ed1\u5b9a\u6216\u8005\u89e3\u7ed1\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (ctrl *PersistentVolumeController) syncVolume(volume *v1.PersistentVolume) error {\n    if volume.Spec.ClaimRef == nil {\n        return nil\n    } else {\n        if volume.Spec.ClaimRef.UID == "" {\n            return nil\n        }\n        var claim *v1.PersistentVolumeClaim\n        claimName := claimrefToClaimKey(volume.Spec.ClaimRef)\n        obj, _, _ := ctrl.claims.GetByKey(claimName)\n        claim, _ = obj.(*v1.PersistentVolumeClaim)\n\n        if claim != nil && claim.UID != volume.Spec.ClaimRef.UID {\n            claim = nil\n        }\n\n        if claim == nil {\n            ctrl.reclaimVolume(volume)\n        } else if claim.Spec.VolumeName == "" {\n            ctrl.claimQueue.Add(claimToClaimKey(claim))\n        } else if claim.Spec.VolumeName == volume.Name {\n        } else {\n            if metav1.HasAnnotation(volume.ObjectMeta, annDynamicallyProvisioned) && volume.Spec.PersistentVolumeReclaimPolicy == v1.PersistentVolumeReclaimDelete {\n                ctrl.reclaimVolume(volume)\n            } else {\n                ctrl.unbindVolume(volume)\n            }\n        }\n    }\n    return nil\n}\n')),(0,o.kt)("p",null,"\u5982\u679c\u5f53\u524d PV \u6ca1\u6709\u7ed1\u5b9a\u7684 PVC \u5bf9\u8c61\uff0c\u90a3\u4e48\u8fd9\u91cc\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"reclaimVolume")," \u53ef\u80fd\u4f1a\u5c06\u5f53\u524d\u7684 PV \u5bf9\u8c61\u6839\u636e\u56de\u6536\u7b56\u7565\u5c06\u5176\u653e\u56de\u8d44\u6e90\u6c60\u7b49\u5f85\u91cd\u7528\u3001\u56de\u6536\u6216\u8005\u4fdd\u7559\uff1b\u800c ",(0,o.kt)("inlineCode",{parentName:"p"},"unbindVolume")," \u4f1a\u5220\u9664 PV \u4e0e PVC \u4e4b\u95f4\u7684\u5173\u7cfb\u5e76\u66f4\u65b0 apiserver \u4e2d\u4fdd\u5b58\u7684 Kubernetes \u5bf9\u8c61\u6570\u636e\u3002"),(0,o.kt)("h4",{id:"2claimworker"},"2\uff09ClaimWorker"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ClaimWorker")," \u5c31\u662f\u63a7\u5236\u5668\u7528\u6765\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u4e00\u4e2a PVC \u5bf9\u8c61\u7684\u65b9\u6cd5\u4e86\uff0c\u5b83\u4f1a\u5728\u4e00\u4e2a PVC \u5bf9\u8c61\u88ab\u521b\u5efa\u3001\u66f4\u65b0\u6216\u8005\u540c\u6b65\u65f6\u88ab\u89e6\u53d1\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"syncClaim")," \u4f1a\u6839\u636e\u5f53\u524d\u5bf9\u8c61\u4e2d\u7684\u6ce8\u89e3\u51b3\u5b9a\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"syncUnboundClaim")," \u6216\u8005 ",(0,o.kt)("inlineCode",{parentName:"p"},"syncBoundClaim")," \u65b9\u6cd5\u6765\u5904\u7406\u76f8\u5e94\u7684\u903b\u8f91\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (ctrl *PersistentVolumeController) syncClaim(claim *v1.PersistentVolumeClaim) error {\n    if !metav1.HasAnnotation(claim.ObjectMeta, annBindCompleted) {\n        return ctrl.syncUnboundClaim(claim)\n    } else {\n        return ctrl.syncBoundClaim(claim)\n    }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"syncUnboundClaim")," \u4f1a\u5904\u7406\u7ed1\u5b9a\u6ca1\u6709\u7ed3\u675f\u7684 PVC \u5bf9\u8c61\uff0c\u5982\u679c\u5f53\u524d PVC \u5bf9\u8c61\u6ca1\u6709\u5bf9\u5e94\u5408\u9002\u7684 PV \u5b58\u5728\uff0c\u90a3\u4e48\u5c31\u4f1a\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"provisionClaim")," \u5c1d\u8bd5\u4ece\u96c6\u7fa4\u4e2d\u83b7\u53d6\u65b0\u7684 PV \u4f9b\u5e94\uff0c\u5982\u679c\u80fd\u591f\u627e\u5230 PV \u5bf9\u8c61\uff0c\u5c31\u4f1a\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"bind")," \u65b9\u6cd5\u5c06\u4e24\u8005\u7ed1\u5b9a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (ctrl *PersistentVolumeController) syncUnboundClaim(claim *v1.PersistentVolumeClaim) error {\n    if claim.Spec.VolumeName == "" {\n        delayBinding, err := ctrl.shouldDelayBinding(claim)\n\n        volume, err := ctrl.volumes.findBestMatchForClaim(claim, delayBinding)\n        if volume == nil {\n            switch {\n            case delayBinding:\n            case v1helper.GetPersistentVolumeClaimClass(claim) != "":\n                ctrl.provisionClaim(claim)\n            }\n        } else {\n            ctrl.bind(volume, claim)\n        }\n    } else {\n        obj, found, _ := ctrl.volumes.store.GetByKey(claim.Spec.VolumeName)\n        if found {\n            volume, _ := obj.(*v1.PersistentVolume)\n            if volume.Spec.ClaimRef == nil {\n                ctrl.bind(volume, claim)\n            } else if isVolumeBoundToClaim(volume, claim) {\n                ctrl.bind(volume, claim)\n            }\n        }\n    }\n    return nil\n}\n')),(0,o.kt)("p",null,"\u7ed1\u5b9a\u7684\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u5c06 PV \u548c PVC \u4e4b\u95f4\u5efa\u7acb\u8d77\u65b0\u7684\u5173\u7cfb\uff0c\u66f4\u65b0 Spec \u4e2d\u7684\u6570\u636e\u8ba9\u4e24\u8005\u80fd\u591f\u901a\u8fc7\u5f15\u7528 Ref \u627e\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5e76\u5c06\u66f4\u65b0\u540e\u7684 Kubernetes \u5bf9\u8c61\u5b58\u50a8\u5230 apiserver \u4e2d\u3002"),(0,o.kt)("p",null,"\u53e6\u4e00\u4e2a\u7528\u4e8e\u7ed1\u5b9a PV \u548c PVC \u5bf9\u8c61\u7684\u65b9\u6cd5\u5c31\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"syncBoundClaim")," \u4e86\uff0c\u76f8\u6bd4\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"syncUnboundClaim")," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684\u5b9e\u73b0\u66f4\u4e3a\u7b80\u5355\uff0c\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u5c1d\u8bd5\u83b7\u53d6\u5bf9\u5e94\u7684 PV \u5bf9\u8c61\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (ctrl *PersistentVolumeController) syncBoundClaim(claim *v1.PersistentVolumeClaim) error {\n    if claim.Spec.VolumeName == "" {\n        return nil\n    }\n    obj, found, _ := ctrl.volumes.store.GetByKey(claim.Spec.VolumeName)\n    if found {\n        volume, _ := obj.(*v1.PersistentVolume)\n        if volume.Spec.ClaimRef == nil {\n            ctrl.bind(volume, claim)\n        } else if volume.Spec.ClaimRef.UID == claim.UID {\n            ctrl.bind(volume, claim)\n        }\n    }\n    return nil\n}\n')),(0,o.kt)("p",null,"\u5982\u679c\u627e\u5230\u4e86 PV \u5bf9\u8c61\u5e76\u4e14\u8be5\u5bf9\u8c61\u6ca1\u6709\u7ed1\u5b9a\u7684 PVC \u6216\u8005\u5f53\u524d PV \u548c PVC \u5df2\u7ecf\u5b58\u5728\u4e86\u5f15\u7528\u5c31\u4f1a\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"bind")," \u65b9\u6cd5\u5bf9\u4e24\u8005\u8fdb\u884c\u7ed1\u5b9a\u3002"),(0,o.kt)("h4",{id:"\u5c0f\u7ed3"},"\u5c0f\u7ed3"),(0,o.kt)("p",null,"\u65e0\u8bba\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumeWorker")," \u8fd8\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"ClaimWorker")," \u6700\u7ec8\u90fd\u53ef\u80fd\u4f1a\u901a\u8fc7 apiserver \u66f4\u65b0\u96c6\u7fa4\u4e2d etcd \u7684\u6570\u636e\uff0c\u5f53\u7136\u5b83\u4eec\u4e5f\u4f1a\u8c03\u7528\u4e00\u4e9b\u5e95\u5c42\u7684\u63d2\u4ef6\u83b7\u53d6\u65b0\u7684\u5b58\u50a8\u4f9b\u5e94\u3001\u5220\u9664\u6216\u8005\u91cd\u7528\u4e00\u4e9b\u6301\u4e45\u5377\uff0c\u6211\u4eec\u4f1a\u5728\u4e0b\u9762\u4ecb\u7ecd\u63d2\u4ef6\u7684\u5de5\u4f5c\u539f\u7406\u3002"),(0,o.kt)("h2",{id:"\u4e09\u63d2\u4ef6"},"\u4e09\u3001\u63d2\u4ef6"),(0,o.kt)("p",null,"Kubernetes \u4e2d\u7684\u6240\u6709\u5bf9\u5377\u7684\u64cd\u4f5c\u6700\u7ec8\u57fa\u672c\u90fd\u662f\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"OperationExecutor")," \u6765\u5b8c\u6210\u7684\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u5305\u542b\u4e86\u7528\u4e8e\u9644\u7740\u3001\u6302\u8f7d\u3001\u5378\u8f7d\u548c\u5206\u79bb\u51e0\u4e2a\u5e38\u89c1\u7684\u64cd\u4f5c\u4ee5\u53ca\u5bf9\u8bbe\u5907\u8fdb\u884c\u64cd\u4f5c\u7684\u4e00\u4e9b\u65b9\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type OperationExecutor interface {\n    AttachVolume(volumeToAttach VolumeToAttach, actualStateOfWorld ActualStateOfWorldAttacherUpdater) error\n    DetachVolume(volumeToDetach AttachedVolume, verifySafeToDetach bool, actualStateOfWorld ActualStateOfWorldAttacherUpdater) error\n    MountVolume(waitForAttachTimeout time.Duration, volumeToMount VolumeToMount, actualStateOfWorld ActualStateOfWorldMounterUpdater, isRemount bool) error\n    UnmountVolume(volumeToUnmount MountedVolume, actualStateOfWorld ActualStateOfWorldMounterUpdater, podsDir string) error\n    // ...\n}\n")),(0,o.kt)("p",null,"\u5b9e\u73b0 ",(0,o.kt)("inlineCode",{parentName:"p"},"OperationExecutor")," \u63a5\u53e3\u7684\u79c1\u6709\u7ed3\u6784\u4f53\u4f1a\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"OperatorGenerator")," \u6765\u751f\u6210\u4e00\u4e2a\u7528\u4e8e\u6302\u8f7d\u548c\u5378\u8f7d\u5377\u7684\u65b9\u6cd5\uff0c\u5e76\u5c06\u8fd9\u4e2a\u65b9\u6cd5\u5305\u88c5\u5728\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"GeneratedOperations")," \u7ed3\u6784\u4e2d\uff0c\u5728\u8fd9\u4e4b\u540e\u64cd\u4f5c\u6267\u884c\u5668\u4f1a\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Goroutine \u7528\u4e8e\u6267\u884c\u751f\u6210\u597d\u7684\u65b9\u6cd5\uff1a"),(0,o.kt)("mermaid",{value:"graph LR\n    OE(OperationExexutor)-. 1. \u83b7\u53d6\u76f8\u5173\u65b9\u6cd5 .->OG(OperationGenerator)\n    OG-. 2. \u6839\u636e Spec \u83b7\u53d6\u63d2\u4ef6 .->VM(VolumePluginManager)\n    VM-. 3. \u8fd4\u56de VolumePlugin .->OG\n    OG-. 4. \u6784\u5efa\u65b9\u6cd5 .->OG\n    OG-. 5. \u751f\u6210\u4e00\u4e2a Operation \u7ed3\u6784 .->OE\n    OE-. 6. \u8fd0\u884c Operation .->NPO(NestedPendingOperations)\n    NPO-. 7. \u542f\u52a8 Goroutine \u8fd0\u884c\u751f\u6210\u7684\u65b9\u6cd5 .->Goroutine"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"VolumePluginManager")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"VolumePlugin")," \u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u5728\u6574\u4e2a\u6d41\u7a0b\u4e2d\u5e2e\u6211\u4eec\u5c4f\u853d\u4e86\u5e95\u5c42\u4e0d\u540c\u7c7b\u578b\u5377\u7684\u5b9e\u73b0\u5dee\u5f02\uff0c\u6211\u4eec\u80fd\u76f4\u63a5\u5728\u4e0a\u5c42\u8c03\u7528\u5b8c\u5168\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u5269\u4e0b\u7684\u903b\u8f91\u90fd\u7531\u5e95\u5c42\u7684\u63d2\u4ef6\u6765\u8d1f\u8d23\u3002"),(0,o.kt)("p",null,"Kubernetes \u63d0\u4f9b\u4e86\u63d2\u4ef6\u7684\u6982\u5ff5\uff0c\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"Volume")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"Mounter")," \u4e24\u4e2a\u63a5\u53e3\u652f\u6301\u5377\u7c7b\u578b\u7684\u6269\u5c55\uff0c\u4f5c\u4e3a\u5b58\u50a8\u63d0\u4f9b\u5546\u6216\u8005\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0a\u7684\u4e24\u4e2a\u63a5\u53e3\u6210\u4e3a Kubernetes \u5b58\u50a8\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u65b0\u7684\u5b58\u50a8\u7c7b\u578b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type VolumePlugin interface {\n    Init(host VolumeHost) error\n    GetPluginName() string\n    GetVolumeName(spec *Spec) (string, error)\n    NewMounter(spec *Spec, podRef *v1.Pod, opts VolumeOptions) (Mounter, error)\n    // ...\n}\n\ntype Mounter interface {\n    Volume\n    CanMount() error\n    SetUp(fsGroup *int64) error\n    SetUpAt(dir string, fsGroup *int64) error\n    GetAttributes() Attributes\n}\n")),(0,o.kt)("p",null,"\u5728\u8fd9\u4e00\u8282\u4e2d\u6211\u4eec\u5c06\u4ecb\u7ecd\u51e0\u79cd\u4e0d\u540c\u5377\u63d2\u4ef6\u7684\u5b9e\u73b0\uff0c\u5305\u62ec\u6700\u5e38\u89c1\u7684 EmptyDir\u3001ConfigMap\u3001Secret \u548c Google \u4e91\u4e0a\u7684 GCEPersistentDisk\uff0c\u8fd9\u4e00\u8282\u4f1a\u7b80\u5355\u4ecb\u7ecd\u4e0d\u540c\u5377\u63d2\u4ef6\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u60f3\u8981\u4e86\u89e3\u8be6\u7ec6\u5b9e\u73b0\u7684\u8bfb\u8005\u53ef\u4ee5\u9605\u8bfb\u76f8\u5173\u7684\u6e90\u4ee3\u7801\u3002"),(0,o.kt)("h3",{id:"1emptydir"},"1\uff09EmptyDir"),(0,o.kt)("p",null,"EmptyDir \u662f Kubernetes \u4e2d\u6700\u7b80\u5355\u7684\u5377\u4e86\uff0c\u5f53\u6211\u4eec\u4e3a\u4e00\u4e2a Pod \u8bbe\u7f6e\u4e00\u4e2a EmptyDir \u7c7b\u578b\u7684\u5377\u65f6\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u5f53\u524d Pod \u5bf9\u5e94\u7684\u76ee\u5f55\u521b\u5efa\u4e86\u4e00\u4e2a\u7a7a\u7684\u6587\u4ef6\u5939\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u4f1a\u968f\u7740 Pod \u7684\u5220\u9664\u800c\u5220\u9664\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (ed *emptyDir) SetUpAt(dir string, fsGroup *int64) error {\n    ed.setupDir(dir)\n    volume.SetVolumeOwnership(ed, fsGroup)\n    volumeutil.SetReady(ed.getMetaDir())\n\n    return nil\n}\n\nfunc (ed *emptyDir) setupDir(dir string) error {\n    if err := os.MkdirAll(dir, perm); err != nil {\n        return err\n    }\n    \n    // ...\n\n    return nil\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"SetUpAt")," \u65b9\u6cd5\u5176\u5b9e\u5c31\u5b9e\u73b0\u4e86\u5bf9\u8fd9\u79cd\u7c7b\u578b\u5377\u7684\u521b\u5efa\u5de5\u4f5c\uff0c\u6bcf\u5f53 Pod \u88ab\u5206\u914d\u5230\u4e86\u67d0\u4e2a\u8282\u70b9\u4e0a\uff0c\u5bf9\u5e94\u7684\u6587\u4ef6\u76ee\u5f55\u5c31\u4f1a\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"MkdirAll")," \u65b9\u6cd5\u521b\u5efa\uff0c\u5982\u679c\u4f7f\u7528\u8005\u914d\u7f6e\u4e86 medium \u5b57\u6bb5\uff0c\u4e5f\u4f1a\u9009\u62e9\u4f7f\u7528\u76f8\u5e94\u7684\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\u4e0a\uff0c\u4f8b\u5982\uff1atmpfs\u3001nodev \u7b49\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pd\nspec:\n  containers:\n  - image: k8s.gcr.io/test-webserver\n    name: test-container\n    volumeMounts:\n    - mountPath: /cache\n      name: cache-volume\n  volumes:\n  - name: cache-volume\n    emptyDir: {}\n")),(0,o.kt)("p",null,"\u6211\u4eec\u7ecf\u5e38\u4f1a\u4f7f\u7528 EmptyDir \u7c7b\u578b\u7684\u5377\u5728\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6\u3001\u5145\u5f53\u7f13\u5b58\u6216\u8005\u4fdd\u7559\u4e00\u4e9b\u4e34\u65f6\u7684\u65e5\u5fd7\uff0c\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u662f\u4e00\u79cd\u7ecf\u5e38\u88ab\u4f7f\u7528\u7684\u5377\u7c7b\u578b\u3002"),(0,o.kt)("h3",{id:"2configmap-\u548c-secret"},"2\uff09ConfigMap \u548c Secret"),(0,o.kt)("p",null,"\u53e6\u4e00\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u5377\u5c31\u662f ConfigMap \u4e86\uff0c\u9996\u5148\uff0cConfigMap \u672c\u8eab\u5c31\u662f Kubernetes \u4e2d\u5e38\u89c1\u7684\u5bf9\u8c61\u4e86\uff0c\u5176\u4e2d\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," \u5c31\u662f\u4e00\u4e2a\u5b58\u50a8\u4e86\u4ece\u6587\u4ef6\u540d\u5230\u6587\u4ef6\u5185\u5bb9\u7684\u5b57\u6bb5\uff0c\u8fd9\u91cc\u7684 ConfigMap \u5bf9\u8c61\u88ab\u6302\u8f7d\u5230\u6587\u4ef6\u76ee\u5f55\u65f6\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"redis-config")," \u7684\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u6587\u4ef6\u5185\u5bb9\u5199\u5165\u8be5\u6587\u4ef6\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ConfigMap\ndata:\n  redis-config: |\n    maxmemory 2mb\n    maxmemory-policy allkeys-lru    \n")),(0,o.kt)("p",null,"\u5728\u5bf9 ConfigMap \u7c7b\u578b\u7684\u5377\u8fdb\u884c\u6302\u8f7d\u65f6\uff0c\u603b\u5171\u9700\u8981\u5b8c\u6210\u4e09\u90e8\u5206\u5de5\u4f5c\uff0c\u9996\u5148\u4ece apiserver \u4e2d\u83b7\u53d6\u5f53\u524d ConfigMap \u5bf9\u8c61\uff0c\u7136\u540e\u6839\u636e\u5f53\u524d\u7684 ConfigMap \u751f\u6210\u4e00\u4e2a\u4ece\u6587\u4ef6\u540d\u5230\u6587\u4ef6\u5185\u5bb9\u7684\u952e\u503c\u5bf9\uff0c\u6700\u540e\u6784\u9020\u4e00\u4e2a Writer \u5e76\u6267\u884c ",(0,o.kt)("inlineCode",{parentName:"p"},"Write")," \u65b9\u6cd5\u5199\u5165\u5185\u5bb9\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (b *configMapVolumeMounter) SetUpAt(dir string, fsGroup *int64) error {\n    configMap, _ := b.getConfigMap(b.pod.Namespace, b.source.Name)\n\n    totalBytes := totalBytes(configMap)\n    payload, _ := MakePayload(b.source.Items, configMap, b.source.DefaultMode, false)\n\n    writerContext := fmt.Sprintf("pod %v/%v volume %v", b.pod.Namespace, b.pod.Name, b.volName)\n    writer, _ := volumeutil.NewAtomicWriter(dir, writerContext)\n    writer.Write(payload)\n\n    return nil\n}\n')),(0,o.kt)("p",null,"\u5728\u6d89\u53ca\u6302\u8f7d\u7684\u51fd\u6570\u51e0\u4e2a\u4e2d\uff0c\u4f5c\u8005\u60f3\u8981\u7740\u91cd\u4ecb\u7ecd\u7684\u4e5f\u5c31\u662f\u5728\u5e95\u5c42\u76f4\u63a5\u4e0e\u6587\u4ef6\u7cfb\u7edf\u6253\u4ea4\u9053\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"writePayloadToDir")," \u65b9\u6cd5\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (w *AtomicWriter) writePayloadToDir(payload map[string]FileProjection, dir string) error {\n    for userVisiblePath, fileProjection := range payload {\n        content := fileProjection.Data\n        mode := os.FileMode(fileProjection.Mode)\n        fullPath := path.Join(dir, userVisiblePath)\n        baseDir, _ := filepath.Split(fullPath)\n\n        os.MkdirAll(baseDir, os.ModePerm)\n        ioutil.WriteFile(fullPath, content, mode)\n        os.Chmod(fullPath, mode)\n    }\n\n    return nil\n}\n")),(0,o.kt)("p",null,"\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"os")," \u5305\u63d0\u4f9b\u7684\u63a5\u53e3\u5b8c\u6210\u4e86\u62fc\u63a5\u6587\u4ef6\u540d\u3001\u521b\u5efa\u76f8\u5e94\u6587\u4ef6\u76ee\u5f55\u3001\u5199\u5165\u6587\u4ef6\u5e76\u4e14\u4fee\u6539\u6587\u4ef6\u6a21\u5f0f\u7684\u5de5\u4f5c\uff0c\u5c06 ConfigMap ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," \u4e2d\u7684\u6570\u636e\u6620\u5c04\u5230\u4e86\u4e00\u4e2a\u6587\u4ef6\u5939\u4e2d\uff0c\u8fbe\u5230\u4e86\u8ba9 Pod \u4e2d\u7684\u5bb9\u5668\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u83b7\u53d6\u5185\u5bb9\u7684\u76ee\u7684\u3002"),(0,o.kt)("p",null,"\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u5377\u7c7b\u578b Secret\uff0cKubernetes \u5176\u5b9e\u4e5f\u505a\u4e86\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\u7684\u5de5\u4f5c\uff0c\u4e5f\u662f\u5148\u83b7\u53d6 Secret \u5bf9\u8c61\uff0c\u7136\u540e\u6784\u5efa\u6700\u7ec8\u5199\u5165\u5230\u6587\u4ef6\u7684\u952e\u503c\u5bf9\uff0c\u6700\u540e\u521d\u59cb\u5316\u4e00\u4e2a Writer \u5e76\u8c03\u7528\u5b83\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"Write")," \u65b9\u6cd5\uff0c\u4ece\u8fd9\u91cc\u6211\u4eec\u4e5f\u80fd\u770b\u51fa\u5728\u5377\u63d2\u4ef6\u8fd9\u4e00\u5c42\u5bf9\u4e8e ConfigMap \u548c Secret \u7684\u5904\u7406\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\uff0c\u5e76\u6ca1\u6709\u51fa\u73b0\u9700\u8981\u5bf9 Secret \u5bf9\u8c61\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u89e3\u5bc6\u7684\u5de5\u4f5c\u3002"),(0,o.kt)("h3",{id:"3gcepersistentdisk"},"3\uff09GCEPersistentDisk"),(0,o.kt)("p",null,"\u6700\u540e\u4e00\u4e2a\u8981\u4ecb\u7ecd\u7684\u5377\u4e0e\u4e0a\u9762\u7684\u51e0\u79cd\u90fd\u975e\u5e38\u7684\u4e0d\u540c\uff0c\u5b83\u5728\u5e95\u5c42\u4f7f\u7528\u7684\u662f\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u7f51\u7edc\u78c1\u76d8\uff0c\u60f3\u8981\u5728\u4e00\u4e2a\u8282\u70b9\u4e0a\u4f7f\u7528\u4e91\u78c1\u76d8\u5176\u5b9e\u603b\u5171\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\uff0c\u9996\u5148\u662f\u8981\u5c06\u4e91\u78c1\u76d8\u9644\u7740\u5230\u5f53\u524d\u7684\u8282\u70b9\u4e0a\uff0c\u8fd9\u90e8\u5206\u7684\u5de5\u4f5c\u5176\u5b9e\u5c31\u662f\u7531 ",(0,o.kt)("inlineCode",{parentName:"p"},"gcePersistentDiskAttacher")," \u5b8c\u6210\u7684\uff0c\u6bcf\u5f53\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"AttachDisk")," \u65b9\u6cd5\u65f6\uff0c\u6700\u7ec8\u90fd\u4f1a\u6267\u884c\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5c06\u78c1\u76d8\u9644\u7740\u5230\u76f8\u5e94\u7684\u8282\u70b9\u5b9e\u4f8b\u4e0a\uff1a"),(0,o.kt)("mermaid",{value:"sequenceDiagram\n    participant GPDA as gcePersistentDiskAttacher\n    participant C as Cloud\n    participant GCESM as gceServiceManager\n    participant I as GCEInstances\n    GPDA->>+C: DiskIsAttached\n    alt NotAttached\n        C--\x3e>-GPDA: return NotAttached\n        GPDA->>+C: AttachDisk\n        C->>+GCESM: AttachDiskOnCloudProvider\n        GCESM->>+I: AttachDisk\n        I--\x3e>-GCESM: return\n        GCESM--\x3e>-C: return\n        C--\x3e>-GPDA: return\n    else\n    end"}),(0,o.kt)("p",null,"\u65b9\u6cd5\u7684\u6700\u540e\u4f1a\u5c06\u8be5\u8bf7\u6c42\u5305\u88c5\u6210\u4e00\u4e2a HTTP \u7684\u65b9\u6cd5\u8c03\u7528\u5411 ",(0,o.kt)("inlineCode",{parentName:"p"},"https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/instances/{resourceId}/attachDisk"),"\u94fe\u63a5\u53d1\u51fa\u4e00\u4e2a POST \u8bf7\u6c42\uff0c\u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u5c06\u67d0\u4e2a GCE \u4e0a\u7684\u78c1\u76d8\u9644\u7740\u5230\u76ee\u6807\u5b9e\u4f8b\u4e0a\uff0c\u8be6\u7ec6\u7684\u5185\u5bb9\u53ef\u4ee5\u9605\u8bfb ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/compute/docs/reference/rest/v1/instances/attachDisk"},"\u76f8\u5173\u6587\u6863"),"\u3002"),(0,o.kt)("p",null,"\u4e00\u65e6\u5f53\u524d\u7684\u78c1\u76d8\u88ab\u9644\u7740\u5230\u4e86\u5f53\u524d\u8282\u70b9\u4e0a\uff0c\u6211\u4eec\u5c31\u80fd\u8ddf\u4f7f\u7528\u5176\u4ed6\u7684\u63d2\u4ef6\u4e00\u6837\uff0c\u628a\u78c1\u76d8\u6302\u8f7d\u5230\u67d0\u4e2a\u76ee\u5f55\u4e0a\uff0c\u5b8c\u6210\u4ece\u9644\u7740\u5230\u6302\u8f7d\u7684\u5168\u90e8\u64cd\u4f5c\u3002"),(0,o.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,o.kt)("p",null,"Volume \u548c\u5b58\u50a8\u7cfb\u7edf\u662f Kubernetes \u975e\u5e38\u91cd\u8981\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5728\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u4e3a\u96c6\u7fa4\u63d0\u4f9b\u6301\u4e45\u5b58\u50a8\u7684\u529f\u80fd\uff0c\u5047\u5982 Kubernetes \u6ca1\u6709\u7528\u4e8e\u6301\u4e45\u5b58\u50a8\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u4e5f\u5f88\u96be\u5728\u96c6\u7fa4\u4e2d\u8fd0\u884c\u6709\u72b6\u6001\u7684\u670d\u52a1\uff0c\u4f8b\u5982\uff1a\u6d88\u606f\u961f\u5217\u3001\u5206\u5e03\u5f0f\u5b58\u50a8\u7b49\u3002"),(0,o.kt)("p",null,"\u5bf9\u4e8e\u521a\u521a\u4f7f\u7528 Kubernetes \u7684\u5f00\u53d1\u8005\u6765\u8bf4\uff0cVolume\u3001PV \u548c PVC \u786e\u5b9e\u662f\u6bd4\u8f83\u96be\u4ee5\u7406\u89e3\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u8fd9\u5374\u662f\u6df1\u5165\u4f7f\u7528 Kubernetes \u5fc5\u987b\u8981\u4e86\u89e3\u548c\u638c\u63e1\u7684\uff0c\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u591f\u5e2e\u52a9\u5404\u4f4d\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u5b58\u50a8\u7cfb\u7edf\u5e95\u5c42\u7684\u5b9e\u73b0\u539f\u7406\u3002"),(0,o.kt)("h2",{id:"referenece"},"Referenece"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/storage/volumes/"},"Volumes \xb7 Kubernetes")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/kubernetes/issues/20262"},"Detailed Design for Volume Attach/Detach Controller #20262")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/kubernetes/issues/21931"},"Detailed Design for Volume Mount/Unmount Redesign #21931")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/kubernetes/issues/18333"},"Kubernetes Volume System Redesign Proposal #18333")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/container-storage-interface/spec/blob/master/spec.md"},"Container Storage Interface (CSI)"))))}m.isMDXComponent=!0},30914:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/k8s-20-1b96c6788b38e4f5abcddb3ce394af32.png"},63375:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/k8s-21-d7a052f6fbb315e3fdf60adf262335c9.png"},71849:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/k8s-22-85ef983d2901229c14f83601e02bb1a6.png"}}]);
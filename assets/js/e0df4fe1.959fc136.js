"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[15226],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>b});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var s=r.createContext({}),p=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},c=function(n){var e=p(n.components);return r.createElement(s.Provider,{value:e},n.children)},u="mdxType",f={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,s=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),u=p(t),d=i,b=u["".concat(s,".").concat(d)]||u[d]||f[d]||o;return t?r.createElement(b,a(a({ref:e},c),{},{components:t})):r.createElement(b,a({ref:e},c))}));function b(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l[u]="string"==typeof n?n:i,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},85344:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(87462),i=(t(67294),t(3905));const o={},a=void 0,l={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6/<\u8fde\u901a\u6027\u5224\u65ad>-\u7b49\u5f0f\u65b9\u7a0b\u7684\u53ef\u6ee1\u8db3\u6027",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6/<\u8fde\u901a\u6027\u5224\u65ad>-\u7b49\u5f0f\u65b9\u7a0b\u7684\u53ef\u6ee1\u8db3\u6027",title:"<\u8fde\u901a\u6027\u5224\u65ad>-\u7b49\u5f0f\u65b9\u7a0b\u7684\u53ef\u6ee1\u8db3\u6027",description:"990. \u7b49\u5f0f\u65b9\u7a0b\u7684\u53ef\u6ee1\u8db3\u6027",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6/990-<\u8fde\u901a\u6027\u5224\u65ad>-\u7b49\u5f0f\u65b9\u7a0b\u7684\u53ef\u6ee1\u8db3\u6027.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6/<\u8fde\u901a\u6027\u5224\u65ad>-\u7b49\u5f0f\u65b9\u7a0b\u7684\u53ef\u6ee1\u8db3\u6027",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6/<\u8fde\u901a\u6027\u5224\u65ad>-\u7b49\u5f0f\u65b9\u7a0b\u7684\u53ef\u6ee1\u8db3\u6027",draft:!1,tags:[],version:"current",sidebarPosition:990,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u590d\u6742>-\u8d26\u6237\u5408\u5e76",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6/<\u590d\u6742>-\u8d26\u6237\u5408\u5e76"},next:{title:"<\u8fde\u901a>-\u8fde\u901a\u7f51\u7edc\u7684\u64cd\u4f5c\u6b21\u6570",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5e76\u67e5\u96c6/<\u8fde\u901a>-\u8fde\u901a\u7f51\u7edc\u7684\u64cd\u4f5c\u6b21\u6570"}},s={},p=[{value:"\u65b9\u6cd5\uff1a\u5e76\u67e5\u96c6",id:"\u65b9\u6cd5\u5e76\u67e5\u96c6",level:2}],c={toc:p};function u(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/satisfiability-of-equality-equations/"},"990. \u7b49\u5f0f\u65b9\u7a0b\u7684\u53ef\u6ee1\u8db3\u6027")),(0,i.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u7531\u8868\u793a\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u7684\u5b57\u7b26\u4e32\u65b9\u7a0b\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u65b9\u7a0b equations","[i]",' \u7684\u957f\u5ea6\u4e3a 4\uff0c\u5e76\u91c7\u7528\u4e24\u79cd\u4e0d\u540c\u7684\u5f62\u5f0f\u4e4b\u4e00\uff1a"a==b" \u6216 "a!=b"\u3002\u5728\u8fd9\u91cc\uff0ca \u548c b \u662f\u5c0f\u5199\u5b57\u6bcd\uff08\u4e0d\u4e00\u5b9a\u4e0d\u540c\uff09\uff0c\u8868\u793a\u5355\u5b57\u6bcd\u53d8\u91cf\u540d\u3002'),(0,i.kt)("p",null,"\u53ea\u6709\u5f53\u53ef\u4ee5\u5c06\u6574\u6570\u5206\u914d\u7ed9\u53d8\u91cf\u540d\uff0c\u4ee5\u4fbf\u6ee1\u8db3\u6240\u6709\u7ed9\u5b9a\u7684\u65b9\u7a0b\u65f6\u624d\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1\uff1a\n\u8f93\u5165\uff1a["a==b","b!=a"]\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u5982\u679c\u6211\u4eec\u6307\u5b9a\uff0ca = 1 \u4e14 b = 1\uff0c\u90a3\u4e48\u53ef\u4ee5\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u65b9\u7a0b\uff0c\u4f46\u65e0\u6cd5\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\u3002\u6ca1\u6709\u529e\u6cd5\u5206\u914d\u53d8\u91cf\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u3002\n\n\u793a\u4f8b 2\uff1a\n\u8f93\u5165\uff1a["b==a","a==b"]\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a a = 1 \u4e14 b = 1 \u4ee5\u6ee1\u8db3\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u3002\n\n\u793a\u4f8b 3\uff1a\n\u8f93\u5165\uff1a["a==b","b==c","a==c"]\n\u8f93\u51fa\uff1atrue\n\n\u793a\u4f8b 4\uff1a\n\u8f93\u5165\uff1a["a==b","b!=c","c==a"]\n\u8f93\u51fa\uff1afalse\n\n\u793a\u4f8b 5\uff1a\n\u8f93\u5165\uff1a["c==c","b==d","x!=z"]\n\u8f93\u51fa\uff1atrue\n\n')),(0,i.kt)("p",null,"\u63d0\u793a\uff1a"),(0,i.kt)("p",null,"1 <= equations.length <= 500\nequations","[i]",".length == 4\n",(0,i.kt)("inlineCode",{parentName:"p"},"equations[i][0] \u548c equations[i][3] \u662f\u5c0f\u5199\u5b57\u6bcd"),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"equations[i][1] \u8981\u4e48\u662f '='\uff0c\u8981\u4e48\u662f '!'"),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"equations[i][2] \u662f '='")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u5e76\u67e5\u96c6"},"\u65b9\u6cd5\uff1a\u5e76\u67e5\u96c6"),(0,i.kt)("p",null,"\u8fde\u901a\u6027\u5224\u65ad"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5148\u628a == \u7684\u8fde\u901a\u8d77\u6765"),(0,i.kt)("li",{parentName:"ul"},"\u518d\u5224\u65ad != \uff0c\u662f\u5426\u6210\u7acb")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class UnionFind {\npublic:\n    vector<int> parent;  // \u4e0b\u6807idx\u4e3a\u8282\u70b9\uff0cparent[idx]\u4e3a\u8be5\u8282\u70b9\u7684\u7236\u4eb2\n    vector<int> size;    // \u82e5idx\u4e3a\u7236\u4eb2\u6839\u8282\u70b9\uff0csize[idx]\u4e3a\u8be5\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\n    int n;               // \u8282\u70b9\u6570\u91cf\n    int setCount;        // \u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\n\npublic:\n    UnionFind(int _n) : n(_n), setCount(_n), parent(_n), size(_n, 1) {\n        iota(parent.begin(), parent.end(), 0);\n    }\n\n    int find(int x) {\n        return parent[x] == x ? x : parent[x] = find(parent[x]);\n    }\n\n    bool unite(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x == y) return false;\n\n        if (size[x] < size[y]) {\n            swap(x, y);\n        }\n        parent[y] = x;       // x \u4f5c\u4e3a y \u7684\u7236\u4eb2\n        size[x] += size[y];  // \u7236\u4eb2\u8282\u70b9x\u7684\u8054\u901a\u5206\u91cf\u5927\u5c0f\u52a0\u4e0ay\u8282\u70b9\u7684\n        --setCount;\n        return true;\n    }\n\n    bool is_connected(int x, int y) {\n        x = find(x);\n        y = find(y);\n        return x == y;\n    }\n\n    void disconnected(int x) {\n        if (x != parent[x]) {\n            parent[x] = x;\n            size[x] = 1;\n            ++setCount;\n        }\n    }\n};\n\nclass Solution {\npublic:\n    bool equationsPossible(vector<string>& equations) {\n        vector<pair<int, int>> con, dis;\n        for (string str : equations) {\n            if (str[1] == '!') {\n                dis.push_back({str[0] - 97, str[3] - 97});\n            } else {\n                con.push_back({str[0] - 97, str[3] - 97});\n            }\n        }\n\n        UnionFind uf(26);\n        for (pair<int, int> p : con) {\n            uf.unite(p.first, p.second);\n        }\n        for (pair<int, int> p : dis) {\n            if (uf.is_connected(p.first, p.second)) {\n                return false;\n            }\n        }\n        return true;\n    }\n};\n")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[96955],{3905:(e,r,n)=>{n.d(r,{Zo:()=>s,kt:()=>m});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=t.createContext({}),c=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},s=function(e){var r=c(e.components);return t.createElement(p.Provider,{value:r},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=c(n),u=o,m=d["".concat(p,".").concat(u)]||d[u]||f[u]||i;return n?t.createElement(m,l(l({ref:r},s),{},{components:n})):t.createElement(m,l({ref:r},s))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=u;var a={};for(var p in r)hasOwnProperty.call(r,p)&&(a[p]=r[p]);a.originalType=e,a[d]="string"==typeof e?e:o,l[1]=a;for(var c=2;c<i;c++)l[c]=n[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},533:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=n(87462),o=(n(67294),n(3905));const i={},l=void 0,a={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/\u5251\u6307Offer-II-034-<\u5b57\u5178\u5e8f>-\u5916\u661f\u8bed\u8a00\u662f\u5426\u6392\u5e8f",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/\u5251\u6307Offer-II-034-<\u5b57\u5178\u5e8f>-\u5916\u661f\u8bed\u8a00\u662f\u5426\u6392\u5e8f",title:"\u5251\u6307Offer-II-034-<\u5b57\u5178\u5e8f>-\u5916\u661f\u8bed\u8a00\u662f\u5426\u6392\u5e8f",description:"\u9898\u76ee\uff1a\u5251\u6307 Offer II 034. \u5916\u661f\u8bed\u8a00\u662f\u5426\u6392\u5e8f",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/\u5251\u6307Offer-II-034-<\u5b57\u5178\u5e8f>-\u5916\u661f\u8bed\u8a00\u662f\u5426\u6392\u5e8f.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/\u5251\u6307Offer-II-034-<\u5b57\u5178\u5e8f>-\u5916\u661f\u8bed\u8a00\u662f\u5426\u6392\u5e8f",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/\u5251\u6307Offer-II-034-<\u5b57\u5178\u5e8f>-\u5916\u661f\u8bed\u8a00\u662f\u5426\u6392\u5e8f",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"\u5251\u6307Offer-51-<\u5e76\u5f52\u6392\u5e8f-\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4>-\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/\u5251\u6307Offer-51-<\u5e76\u5f52\u6392\u5e8f-\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4>-\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9"},next:{title:"Z\u5b57\u5f62\u53d8\u6362",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6a21\u62df/Z\u5b57\u5f62\u53d8\u6362"}},p={},c=[],s={toc:c};function d(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/lwyVBB/"},"\u5251\u6307 Offer II 034. \u5916\u661f\u8bed\u8a00\u662f\u5426\u6392\u5e8f")),(0,o.kt)("p",null,"\u67d0\u79cd\u5916\u661f\u8bed\u4e5f\u4f7f\u7528\u82f1\u6587\u5c0f\u5199\u5b57\u6bcd\uff0c\u4f46\u53ef\u80fd\u987a\u5e8f ",(0,o.kt)("inlineCode",{parentName:"p"},"order")," \u4e0d\u540c\u3002\u5b57\u6bcd\u8868\u7684\u987a\u5e8f\uff08",(0,o.kt)("inlineCode",{parentName:"p"},"order"),"\uff09\u662f\u4e00\u4e9b\u5c0f\u5199\u5b57\u6bcd\u7684\u6392\u5217\u3002"),(0,o.kt)("p",null,"\u7ed9\u5b9a\u4e00\u7ec4\u7528\u5916\u661f\u8bed\u4e66\u5199\u7684\u5355\u8bcd ",(0,o.kt)("inlineCode",{parentName:"p"},"words"),"\uff0c\u4ee5\u53ca\u5176\u5b57\u6bcd\u8868\u7684\u987a\u5e8f ",(0,o.kt)("inlineCode",{parentName:"p"},"order"),"\uff0c\u53ea\u6709\u5f53\u7ed9\u5b9a\u7684\u5355\u8bcd\u5728\u8fd9\u79cd\u5916\u661f\u8bed\u4e2d\u6309\u5b57\u5178\u5e8f\u6392\u5217\u65f6\uff0c\u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"\uff1b\u5426\u5219\uff0c\u8fd4\u56de ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1awords = ["hello","leetcode"], order = "hlabcdefgijkmnopqrstuvwxyz"\n\u8f93\u51fa\uff1atrue\n\u89e3\u91ca\uff1a\u5728\u8be5\u8bed\u8a00\u7684\u5b57\u6bcd\u8868\u4e2d\uff0c\'h\' \u4f4d\u4e8e \'l\' \u4e4b\u524d\uff0c\u6240\u4ee5\u5355\u8bcd\u5e8f\u5217\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1awords = ["word","world","row"], order = "worldabcefghijkmnpqstuvxyz"\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u5728\u8be5\u8bed\u8a00\u7684\u5b57\u6bcd\u8868\u4e2d\uff0c\'d\' \u4f4d\u4e8e \'l\' \u4e4b\u540e\uff0c\u90a3\u4e48 words[0] > words[1]\uff0c\u56e0\u6b64\u5355\u8bcd\u5e8f\u5217\u4e0d\u662f\u6309\u5b57\u5178\u5e8f\u6392\u5217\u7684\u3002\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1awords = ["apple","app"], order = "abcdefghijklmnopqrstuvwxyz"\n\u8f93\u51fa\uff1afalse\n\u89e3\u91ca\uff1a\u5f53\u524d\u4e09\u4e2a\u5b57\u7b26 "app" \u5339\u914d\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u76f8\u5bf9\u77ed\u4e00\u4e9b\uff0c\u7136\u540e\u6839\u636e\u8bcd\u5178\u7f16\u7e82\u89c4\u5219 "apple" > "app"\uff0c\u56e0\u4e3a \'l\' > \'\u2205\'\uff0c\u5176\u4e2d \'\u2205\' \u662f\u7a7a\u767d\u5b57\u7b26\uff0c\u5b9a\u4e49\u4e3a\u6bd4\u4efb\u4f55\u5176\u4ed6\u5b57\u7b26\u90fd\u5c0f\uff08\u66f4\u591a\u4fe1\u606f\uff09\u3002\n')),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("p",null,"1 <= words.length <= 100\n1 <= words","[i]",".length <= 20\norder.length == 26\n\u5728 words","[i]"," \u548c order \u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u662f\u82f1\u6587\u5c0f\u5199\u5b57\u6bcd\u3002"),(0,o.kt)("p",null,"\u6ce8\u610f\uff1a\u672c\u9898\u4e0e\u4e3b\u7ad9 953 \u9898\u76f8\u540c\uff1a ",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/verifying-an-alien-dictionary/"},"https://leetcode-cn.com/problems/verifying-an-alien-dictionary/")),(0,o.kt)("hr",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> order_map;\n\n    bool cmp(string &w1, string &w2) {\n        // <= return true\n        int n = min(w1.size(), w2.size());\n        for (int i = 0; i < n; i++) {\n            // cout << i << \": \" << w1[i] << \",\" << w2[i] << endl;\n            int idx1 = order_map[w1[i]-'a'];\n            int idx2 = order_map[w2[i]-'a'];\n            if (idx1 < idx2) {\n                return true;\n            } else if (idx1 > idx2) {\n                return false;\n            }\n        }\n        if (w1.size() == n && w2.size() == n) return true;\n        if (w1.size() > n) return false;\n        return true;\n    }\n    bool isAlienSorted(vector<string>& words, string order) {\n        order_map.resize(26, 0);\n        for (int i = 0; i < 26; i++) {\n            order_map[order[i] - 'a'] = i;\n        }\n        int n = words.size();\n        for (int i = 0; i < n - 1; i++) {\n            if (!cmp(words[i], words[i+1])) {\n                return false;\n            }\n            // cout << \"**********\" << endl;\n        }\n        return true;\n    }\n};\n")))}d.isMDXComponent=!0}}]);
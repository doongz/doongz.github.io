"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[18768],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>c});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var k=a.createContext({}),h=function(e){var n=a.useContext(k),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},o=function(e){var n=h(e.components);return a.createElement(k.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,s=e.originalType,k=e.parentName,o=r(e,["components","mdxType","originalType","parentName"]),p=h(t),y=l,c=p["".concat(k,".").concat(y)]||p[y]||u[y]||s;return t?a.createElement(c,i(i({ref:n},o),{},{components:t})):a.createElement(c,i({ref:n},o))}));function c(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var s=t.length,i=new Array(s);i[0]=y;var r={};for(var k in n)hasOwnProperty.call(n,k)&&(r[k]=n[k]);r.originalType=e,r[p]="string"==typeof e?e:l,i[1]=r;for(var h=2;h<s;h++)i[h]=t[h];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},13435:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>k,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>h});var a=t(87462),l=(t(67294),t(3905));const s={},i="\u8bbe\u8ba1\u54c8\u5e0c\u96c6\u5408",r={unversionedId:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/705-706-\u54c8\u5e0c\u96c6\u5408-\u54c8\u5e0c\u8868",id:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/705-706-\u54c8\u5e0c\u96c6\u5408-\u54c8\u5e0c\u8868",title:"\u8bbe\u8ba1\u54c8\u5e0c\u96c6\u5408",description:"\u9898\u76ee\uff1a705. \u8bbe\u8ba1\u54c8\u5e0c\u96c6\u5408",source:"@site/docs/Algorithm/6-\u7cfb\u5217\u9898\u76ee/08-\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/705-706-\u54c8\u5e0c\u96c6\u5408-\u54c8\u5e0c\u8868.md",sourceDirName:"Algorithm/6-\u7cfb\u5217\u9898\u76ee/08-\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784",slug:"/Algorithm/\u7cfb\u5217\u9898\u76ee/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/705-706-\u54c8\u5e0c\u96c6\u5408-\u54c8\u5e0c\u8868",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/705-706-\u54c8\u5e0c\u96c6\u5408-\u54c8\u5e0c\u8868",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/232-225-\u961f\u5217\u548c\u6808\u76f8\u4e92\u5b9e\u73b0"},next:{title:"\u5251\u6307Offer-09-\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/\u5251\u6307Offer-09-\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217"}},k={},h=[{value:"\u65b9\u6cd5\u4e00\uff1a\u8d85\u5927\u6570\u7ec4",id:"\u65b9\u6cd5\u4e00\u8d85\u5927\u6570\u7ec4",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u62c9\u94fe\u6cd5",id:"\u65b9\u6cd5\u4e8c\u62c9\u94fe\u6cd5",level:2},{value:"2.1 \u5b9a\u957f\u62c9\u94fe\u6570\u7ec4",id:"21-\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4",level:3},{value:"2.2 \u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4",id:"22-\u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4",level:3},{value:"\u65b9\u6cd5\u4e00\uff1a\u8d85\u5927\u6570\u7ec4",id:"\u65b9\u6cd5\u4e00\u8d85\u5927\u6570\u7ec4-1",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u62c9\u94fe\u6cd5",id:"\u65b9\u6cd5\u4e8c\u62c9\u94fe\u6cd5-1",level:2},{value:"2.1 \u5b9a\u957f\u62c9\u94fe\u6570\u7ec4",id:"21-\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4-1",level:3},{value:"2.2 \u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4",id:"22-\u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4-1",level:3}],o={toc:h};function p(e){let{components:n,...s}=e;return(0,l.kt)("wrapper",(0,a.Z)({},o,s,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u8bbe\u8ba1\u54c8\u5e0c\u96c6\u5408"},"\u8bbe\u8ba1\u54c8\u5e0c\u96c6\u5408"),(0,l.kt)("p",null,"\u9898\u76ee\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/design-hashset/"},"705. \u8bbe\u8ba1\u54c8\u5e0c\u96c6\u5408")),(0,l.kt)("p",null,"\u4e0d\u4f7f\u7528\u4efb\u4f55\u5185\u5efa\u7684\u54c8\u5e0c\u8868\u5e93\u8bbe\u8ba1\u4e00\u4e2a\u54c8\u5e0c\u96c6\u5408\uff08HashSet\uff09\u3002"),(0,l.kt)("p",null,"\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"MyHashSet")," \u7c7b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"void add(key)")," \u5411\u54c8\u5e0c\u96c6\u5408\u4e2d\u63d2\u5165\u503c ",(0,l.kt)("inlineCode",{parentName:"li"},"key")," \u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bool contains(key)")," \u8fd4\u56de\u54c8\u5e0c\u96c6\u5408\u4e2d\u662f\u5426\u5b58\u5728\u8fd9\u4e2a\u503c ",(0,l.kt)("inlineCode",{parentName:"li"},"key")," \u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"void remove(key)")," \u5c06\u7ed9\u5b9a\u503c ",(0,l.kt)("inlineCode",{parentName:"li"},"key")," \u4ece\u54c8\u5e0c\u96c6\u5408\u4e2d\u5220\u9664\u3002\u5982\u679c\u54c8\u5e0c\u96c6\u5408\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u503c\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1a\n["MyHashSet", "add", "add", "contains", "contains", "add", "contains", "remove", "contains"]\n[[], [1], [2], [1], [3], [2], [2], [2], [2]]\n\u8f93\u51fa\uff1a\n[null, null, null, true, false, null, true, null, false]\n\n\u89e3\u91ca\uff1a\nMyHashSet myHashSet = new MyHashSet();\nmyHashSet.add(1);      // set = [1]\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(1); // \u8fd4\u56de True\nmyHashSet.contains(3); // \u8fd4\u56de False \uff0c\uff08\u672a\u627e\u5230\uff09\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(2); // \u8fd4\u56de True\nmyHashSet.remove(2);   // set = [1]\nmyHashSet.contains(2); // \u8fd4\u56de False \uff0c\uff08\u5df2\u79fb\u9664\uff09\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"0 <= key <= 106")),(0,l.kt)("li",{parentName:"ul"},"\u6700\u591a\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"104")," \u6b21 ",(0,l.kt)("inlineCode",{parentName:"li"},"add"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"remove")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"contains"))),(0,l.kt)("p",null,"\u6765\u6e90 1\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/design-hashset/solution/xiang-jie-hashset-de-she-ji-zai-shi-jian-4plc/"},"\u8be6\u89e3 HashSet \u7684\u8bbe\u8ba1\uff1a\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u505a\u6743\u8861 - \u8bbe\u8ba1\u54c8\u5e0c\u96c6\u5408 - \u529b\u6263\uff08LeetCode\uff09")),(0,l.kt)("p",null,"\u6765\u6e90 2\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://mp.weixin.qq.com/s/IkrIosol8ncNd2pKCiG6cw"},"\u3010\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784\u3011\u9762\u8bd5\u5b98\uff1a\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684 HashSet ... (qq.com)")),(0,l.kt)("p",null,"\u672c\u9898\u662f\u8ba9\u6211\u4eec\u8bbe\u8ba1\u54c8\u5e0c\u96c6\u5408\uff08HashSet\uff09\u3002HashSet \u662f\u6307\u80fd O(1) \u65f6\u95f4\u5185\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\uff0c\u53ef\u4ee5\u4fdd\u5b58\u4e0d\u91cd\u590d\u5143\u7d20\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"HashSet \u662f\u5728 \u65f6\u95f4\u548c\u7a7a\u95f4 \u4e0a\u505a\u6743\u8861\u7684\u7ecf\u5178\u4f8b\u5b50"),"\uff1a\u5982\u679c\u4e0d\u8003\u8651\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbe\u8ba1\u4e00\u4e2a\u8d85\u5927\u7684\u6570\u7ec4\uff0c\u4f7f\u6bcf\u4e2akey \u90fd\u6709\u5355\u72ec\u7684\u4f4d\u7f6e\uff0c\u5219\u4e0d\u5b58\u5728\u51b2\u7a81\uff1b\u5982\u679c\u4e0d\u8003\u8651\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u4e00\u4e2a\u65e0\u5e8f\u7684\u6570\u7ec4\u4fdd\u5b58\u8f93\u5165\uff0c\u6bcf\u6b21\u67e5\u627e\u7684\u65f6\u5019\u904d\u5386\u4e00\u6b21\u6570\u7ec4\u3002"),(0,l.kt)("p",null,"\u4e3a\u4e86\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u7684\u5e73\u8861\uff0cHashSet \u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\uff0c\u5e76\u901a\u8fc7 hash \u65b9\u6cd5\u6c42\u952e key \u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5f53 hash \u540e\u7684\u4f4d\u7f6e\u5b58\u5728\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u518d\u89e3\u51b3\u51b2\u7a81\u3002"),(0,l.kt)("p",null,"\u8bbe\u8ba1 ",(0,l.kt)("inlineCode",{parentName:"p"},"hash")," \u51fd\u6570\u9700\u8981\u8003\u8651\u4e24\u4e2a\u95ee\u9898\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u901a\u8fc7 hash \u65b9\u6cd5\u628a\u952e key \u8f6c\u6210\u6570\u7ec4\u7684\u7d22\u5f15\uff1a\u8bbe\u8ba1\u5408\u9002\u7684 hash \u51fd\u6570\uff0c\u4e00\u822c\u90fd\u662f\u5bf9\u5206\u6876\u6570\u53d6\u6a21 ",(0,l.kt)("inlineCode",{parentName:"li"},"%")," \u3002"),(0,l.kt)("li",{parentName:"ol"},"\u5904\u7406\u78b0\u649e\u51b2\u7a81\u95ee\u9898\uff1a\u62c9\u94fe\u6cd5 \u548c \u7ebf\u6027\u63a2\u6d4b\u6cd5\u3002")),(0,l.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u8d85\u5927\u6570\u7ec4"},"\u65b9\u6cd5\u4e00\uff1a\u8d85\u5927\u6570\u7ec4"),(0,l.kt)("p",null,"\u80fd\u4f7f\u7528\u8d85\u5927\u6570\u7ec4\u6765\u89e3\u51b3\u672c\u9898\u662f\u56e0\u4e3a\u8f93\u5165\u6570\u636e\u7684\u8303\u56f4\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"0 <= key <= 10^6")," \u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981 ",(0,l.kt)("inlineCode",{parentName:"p"},"10^6 + 1")," \u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u5c31\u80fd\u8ba9\u6bcf\u4e2a\u6570\u636e\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u7d22\u5f15\uff0c\u4e0d\u4f1a\u6709 key \u7684\u78b0\u649e\u95ee\u9898\u3002"),(0,l.kt)("p",null,"\u56e0\u4e3a\u5bf9\u4e8e HashSet \u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u4e00\u4e2a key \u662f\u5426\u5b58\u5728\uff0c\u800c\u4e0d\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"key:value")," \u5f62\u5f0f\u7684 HashMap\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u628a\u6570\u7ec4\u7684\u5143\u7d20\u8bbe\u8ba1\u6210 bool \u578b\u7684\uff0c\u5f53\u67d0\u4e2a key \u7684\u5bf9\u5e94\u7684\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u53d6\u503c\u4e3a true \u8bf4\u660e\u8be5 key \u5b58\u5728\uff0c\u53d6\u503c\u4e3a false\uff0c\u8bf4\u660e\u8be5 key \u4e0d\u5b58\u5728\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f18\u70b9\uff1a\u67e5\u627e\u548c\u5220\u9664\u7684\u6027\u80fd\u975e\u5e38\u5feb\uff0c\u53ea\u7528\u8bbf\u95ee 1 \u6b21\u6570\u7ec4\uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u70b9\uff1a\u4f7f\u7528\u4e86\u975e\u5e38\u5927\u7684\u7a7a\u95f4\uff0c\u5f53\u5143\u7d20\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u65e0\u6cd5\u4f7f\u7528\u8be5\u65b9\u6cd5\uff1b\u5f53\u5b58\u50a8\u7684\u5143\u7d20\u4e2a\u6570\u8f83\u5c11\u65f6\uff0c\u6027\u4ef7\u6bd4\u6781\u4f4e\uff1b\u9700\u8981\u9884\u77e5\u6570\u636e\u7684\u53d6\u503c\u8303\u56f4\u3002")),(0,l.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"O(1)")),(0,l.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"O(\u6570\u636e\u8303\u56f4)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class MyHashSet {\npublic:\n    vector<bool> hashset;\n    int max = 1e6;\n\n    MyHashSet() {\n        hashset.resize(max + 1, false);\n    }\n\n    void add(int key) {\n        hashset[key] = true;\n    }\n\n    void remove(int key) {\n        hashset[key] = false;\n    }\n\n    bool contains(int key) {\n        if (key <= max) {\n            return hashset[key];\n        }\n        return false;\n    }\n};\n")),(0,l.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u62c9\u94fe\u6cd5"},"\u65b9\u6cd5\u4e8c\uff1a\u62c9\u94fe\u6cd5"),(0,l.kt)("p",null,"\u57fa\u4e8e\u300c\u62c9\u94fe\u6cd5\u300d\u7684 HashSet"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"image.png",src:t(28462).Z,width:"724",height:"472"})),(0,l.kt)("p",null,"\u62c9\u94fe\u6cd5\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u6570\u7ec4\uff0c\u7136\u540e\u4f7f\u7528 hash \u65b9\u6cd5\u6765\u628a\u6c42\u51fa key \u5e94\u8be5\u51fa\u73b0\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff1b\u4f46\u662f\u7531\u4e8e\u4e0d\u540c\u7684 key \u5728\u6c42\u5b8c hash \u4e4b\u540e\uff0c\u53ef\u80fd\u4f1a\u5b58\u5728\u78b0\u649e\u51b2\u7a81\uff0c\u6240\u4ee5\u6570\u7ec4\u5e76\u4e0d\u76f4\u63a5\u4fdd\u5b58\u5143\u7d20\uff0c\u800c\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6307\u5411\u4e86\u4e00\u6761\u94fe\u8868\uff08\u6216\u6570\u7ec4\uff09\u7528\u4e8e\u5b58\u50a8\u5143\u7d20\u3002"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5728\u67e5\u627e\u4e00\u4e2a key \u7684\u65f6\u5019\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\uff1a\u2460 \u6c42hash\u5230\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff1b\u2461 \u5728\u94fe\u8868\u4e2d\u904d\u5386\u627ekey\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f18\u70b9\uff1a\u6211\u4eec\u53ef\u4ee5\u628a\u6570\u7ec4\u5927\u5c0f\u8bbe\u8ba1\u6bd4\u8f83\u5408\u7406\uff0c\u4ece\u800c\u8282\u7701\u7a7a\u95f4\uff1b\u4e0d\u7528\u9884\u77e5 key \u7684\u8303\u56f4\uff1b\u65b9\u4fbf\u6269\u5bb9\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u70b9\uff1a\u9700\u8981\u591a\u6b21\u8bbf\u95ee\u5185\u5b58\uff0c\u6027\u80fd\u4e0a\u6bd4\u8d85\u5927\u6570\u7ec4\u7684 HashSet \u5dee\uff1b\u9700\u8981\u8bbe\u8ba1\u5408\u7406\u7684 hash \u65b9\u6cd5\u5b9e\u73b0\u5747\u5300\u6563\u5217\uff1b\u5982\u679c\u94fe\u8868\u6bd4\u8f83\u957f\uff0c\u5219\u9000\u5316\u6210 O(N) \u7684\u67e5\u627e\uff1b\u5b9e\u73b0\u6bd4\u8f83\u590d\u6742\uff1b")),(0,l.kt)("p",null,"\u5728\u4e0b\u9762\u7684\u5177\u4f53\u5b9e\u73b0\u4e2d\uff0c\u628a\u62c9\u94fe\u8bbe\u8ba1\u6210\u4e86\u57fa\u4e8e\u300c",(0,l.kt)("strong",{parentName:"p"},"\u6570\u7ec4"),"\u300d\u7684\u5b9e\u73b0\uff08\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u94fe\u8868\uff09\u3002\u6b64\u65f6\u300c\u62c9\u94fe\u6570\u7ec4\u300d\u6709\u4e24\u79cd\u8bbe\u8ba1\u65b9\u6cd5\uff1a\u2460\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4\uff1b\u2461\u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4\u3002"),(0,l.kt)("h3",{id:"21-\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4"},"2.1 \u5b9a\u957f\u62c9\u94fe\u6570\u7ec4"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u65b9\u6cd5\u672c\u8d28\u4e0a\u5c31\u662f\u628a HashSet \u8bbe\u8ba1\u6210\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"M * N")," \u7684\u4e8c\u7ef4\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u7528\u4e8e\u8ba1\u7b97 hash \u5206\u6876\uff0c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u5bfb\u627e key \u5b58\u653e\u5177\u4f53\u7684\u4f4d\u7f6e\u3002\u7528\u4e86\u4e00\u4e2a\u4f18\u5316\uff1a\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7684\u6570\u7ec4\u53ea\u6709\u5f53\u9700\u8981\u6784\u5efa\u65f6\u624d\u4f1a\u4ea7\u751f\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5185\u5b58\u3002 "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f18\u70b9\uff1a\u4e24\u4e2a\u7ef4\u5ea6\u90fd\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u6765\uff0c\u67e5\u627e\u548c\u5220\u9664\u53ea\u7528\u4e24\u6b21\u8bbf\u95ee\u5185\u5b58\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u70b9\uff1a\u9700\u8981\u9884\u77e5\u6570\u636e\u8303\u56f4\uff0c\u7528\u4e8e\u8bbe\u8ba1\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7684\u6570\u7ec4\u5927\u5c0f\u3002")),(0,l.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"O(1)")),(0,l.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"O(\u6570\u636e\u8303\u56f4)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class MyHashSet {\npublic:\n    int total = 1e6;\n    int buckets = 1000;\n    int itemsPerBucket = total / buckets + 1;\n    vector<vector<bool>> table;\n\n    MyHashSet() {\n        table.resize(buckets);\n    }\n\n    int hash(int key) {  // \u9009\u5b9a\u7b2c\u51e0\u4e2a\u6876\n        return key % buckets;\n    }\n\n    int pos(int key) {  // \u6876\u5185\u7684\u504f\u79fb\u91cf\n        return key / buckets;\n    }\n\n    void add(int key) {\n        int hashkey = hash(key);\n        int offset = pos(key);\n        if (table[hashkey].empty()) {\n            table[hashkey].resize(itemsPerBucket, false);\n        }\n        table[hashkey][offset] = true;\n    }\n\n    void remove(int key) {\n        int hashkey = hash(key);\n        int offset = pos(key);\n        if (!table[hashkey].empty()) {\n            table[hashkey][offset] = false;\n        }\n    }\n\n    bool contains(int key) {\n        int hashkey = hash(key);\n        int offset = pos(key);\n        if (!table[hashkey].empty() && table[hashkey][offset]) {\n            return true;\n        }\n        return false;\n    }\n};\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class MyHashSet:\n\n    def __init__(self):\n        self.buckets = 1000\n        self.itemsPerBucket = 1001\n        self.table = [[] for _ in range(self.buckets)]\n\n    def hash(self, key):\n        return key % self.buckets\n    \n    def pos(self, key):\n        return key // self.buckets\n    \n    def add(self, key):\n        hashkey = self.hash(key)\n        if not self.table[hashkey]:\n            self.table[hashkey] = [0] * self.itemsPerBucket\n        self.table[hashkey][self.pos(key)] = 1\n        \n    def remove(self, key):\n        hashkey = self.hash(key)\n        if self.table[hashkey]:\n            self.table[hashkey][self.pos(key)] = 0\n\n    def contains(self, key):\n        hashkey = self.hash(key)\n        return (self.table[hashkey] != []) and (self.table[hashkey][self.pos(key)] == 1)\n")),(0,l.kt)("h3",{id:"22-\u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4"},"2.2 \u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4"),(0,l.kt)("p",null,"\u4e0d\u5b9a\u957f\u7684\u62c9\u94fe\u6570\u7ec4\u662f\u8bf4\u62c9\u94fe\u4f1a\u6839\u636e\u5206\u6876\u4e2d\u7684 key \u52a8\u6001\u589e\u957f\uff0c\u66f4\u7c7b\u4f3c\u4e8e\u771f\u6b63\u7684\u94fe\u8868\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5206\u6876\u6570\u4e00\u822c\u53d6\u8d28\u6570\uff0c\u8fd9\u662f\u56e0\u4e3a\u7ecf\u9a8c\u4e0a\u6765\u8bf4\uff0c\u8d28\u6570\u4e2a\u7684\u5206\u6876\u80fd\u8ba9\u6570\u636e\u66f4\u52a0\u5206\u6563\u5230\u5404\u4e2a\u6876\u4e2d"),"\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f18\u70b9\uff1a\u8282\u7701\u5185\u5b58\uff0c\u4e0d\u7528\u9884\u77e5\u6570\u636e\u8303\u56f4\uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u70b9\uff1a\u5728\u94fe\u8868\u4e2d\u67e5\u627e\u5143\u7d20\u9700\u8981\u904d\u5386\u3002")),(0,l.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N/b)\uff0cN \u662f\u5143\u7d20\u4e2a\u6570\uff0cb \u662f\u6876\u6570\u3002"),(0,l.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(N)"),(0,l.kt)("p",null,"\u5728\u5b9e\u9645\u6d4b\u8bd5\u4e2d\uff0c\u53d1\u73b0\u300c\u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4\u300d\u6cd5\u901f\u5ea6\u6700\u5feb\uff0c\u6211\u7684\u7406\u89e3\u662f\uff0c\u5927\u5757\u7684\u5185\u5b58\u5206\u914d\u4e5f\u662f\u9700\u8981\u65f6\u95f4\u7684\u3002\u56e0\u6b64\u907f\u514d\u5927\u5757\u7684\u5185\u5b58\u5206\u914d\uff0c\u4e5f\u662f\u5728\u8282\u7701\u65f6\u95f4\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class MyHashSet {\npublic:\n    int buckets = 1009;\n    vector<vector<int>> table;\n\n    MyHashSet() {\n        table.resize(buckets);\n    }\n\n    int hash(int key) {  // \u9009\u5b9a\u7b2c\u51e0\u4e2a\u6876\n        return key % buckets;\n    }\n\n    bool inBucket(int hashkey, int key) {\n        for (int i = 0; i < table[hashkey].size(); i++) {\n            if (key == table[hashkey][i]) return true;\n        }\n        return false;\n    }\n\n    void add(int key) {\n        int hashkey = hash(key);\n\n        if (inBucket(hashkey, key)) return;  // \u5df2\u7ecf\u5728\u6876\u91cc\u9762\n        table[hashkey].push_back(key);       // \u5f80\u6876\u540e\u9762\u52a0\n    }\n\n    void remove(int key) {\n        int hashkey = hash(key);\n\n        for (auto it = table[hashkey].begin(); it != table[hashkey].end(); it++) {\n            if (key == *it) {\n                table[hashkey].erase(it);\n                return;\n            }\n        }\n    }\n\n    bool contains(int key) {\n        int hashkey = hash(key);\n        return inBucket(hashkey, key);\n    }\n};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class MyHashSet:\n\n    def __init__(self):\n        self.buckets = 1009\n        self.table = [[] for _ in range(self.buckets)]\n\n    def hash(self, key):\n        return key % self.buckets\n    \n    def add(self, key):\n        hashkey = self.hash(key)\n        if key in self.table[hashkey]:\n            return\n        self.table[hashkey].append(key)\n        \n    def remove(self, key):\n        hashkey = self.hash(key)\n        if key not in self.table[hashkey]:\n            return\n        self.table[hashkey].remove(key)\n\n    def contains(self, key):\n        hashkey = self.hash(key)\n        return key in self.table[hashkey]\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u2018\u2019\u5206\u6876\u6570\u4e00\u822c\u53d6\u8d28\u6570\uff0c\u8fd9\u662f\u56e0\u4e3a\u7ecf\u9a8c\u4e0a\u6765\u8bf4\uff0c\u8d28\u6570\u4e2a\u7684\u5206\u6876\u80fd\u8ba9\u6570\u636e\u66f4\u52a0\u5206\u6563\u5230\u5404\u4e2a\u6876\u4e2d\u2018\u2019 \u8fd9\u5e94\u8be5\u662f\u7edf\u8ba1\u4e0a\u7684\u89c4\u5f8b \u5176\u5b9e\u76f4\u89c2\u4e5f\u53ef\u4ee5\u7406\u89e3 \u6bd4\u5982\u4f60\u90091001 \u56e0\u4e3a\u4ed6\u662f7x11x13\u7684\u4e58\u79ef \u5982\u679c\u8fd9\u4e2a\u6876\u91cc\u9762\u88c5\u4e86\u5f88\u591a\u4e0e7\u300111\u300113\u7684\u500d\u6570\u76f8\u5173\u7684\u6570\u5b57 \u5c31\u4f1a\u9020\u6210\u5206\u6876\u7684\u4e25\u91cd\u4e0d\u5747\u8861\u3002\u5f53\u7136\u8fd9\u56e0\u5b50\u4e2a\u6570\u4e5f\u5c31\u6bd4\u8d28\u6570\u7684\u56e0\u5b50\u4e2a\u6570\uff082\u5404\u56e0\u5b50\uff09\u591a1\u4e2a\uff0c\u5206\u6876\u6570\u91cf\u53c8\u6bd4\u8f83\u5927\uff0c\u8fd8\u4e0d\u592a\u660e\u663e\u3002 \u6bd4\u5982\u6211\u6709\u4e00\u4e2a\u5076\u6570\u5e8f\u5217\uff08\u5947\u6570\u4e5f\u662f\u4e00\u6837\uff09\uff0c\u8fd9\u4e2a\u6876\u7684\u5927\u5c0f\u9009\u62e95\u8981\u6bd46\u597d\u7684\u591a\uff0c \uff081\uff09\u5982\u679c\u9009\u62e96\uff0c\u5047\u5982\u662f\u5076\u6570\u5e8f\u5217\u5f80\u6876\u91cc\u9762\u653e\uff0c\u5c31\u4f1a\u9020\u62101\uff0c3\uff0c5\u4e09\u4e2a\u4e0b\u6807\u7684\u6876\u4e2d\u6ca1\u6709\u4efb\u4f55\u5143\u7d20\uff0c\u5982\u679c\u662f\u5947\u6570\u5e8f\u5217\u5f80\u6876\u91cc\u9762\u653e\uff0c\u4f1a\u5bfc\u81f40\uff0c2\uff0c4\u91cc\u9762\u6ca1\u6709\u5143\u7d20 \uff082\uff09\u5982\u679c\u9009\u62e95\uff0c\u4e0d\u7ba1\u5076\u6570\u5e8f\u5217\u8fd8\u662f\u5947\u6570\u5e8f\u5217\u5f80\u91cc\u9762\u653e\u7684\u65f6\u5019\u90fd\u4f1a\u88ab\u6253\u6563\u7684\u3002 \u53ef\u80fd\u4e3e\u7684\u4f8b\u5b50\u6709\u70b9\u6781\u7aef\u3002 \u5047\u5982\u9700\u8981\u653e\u5165\u6876\u91cc\u7684\u6570\u5b57\u662f\u968f\u673a\u5206\u5e03\u7684\uff0c\u90a3\u4e48\u65e0\u6240\u8c13\u4e00\u5b9a\u8981\u6a21\u8d28\u6570\u3002\u4f46\u5728\u5b9e\u9645\u4e2d\u5f80\u5f80\u6570\u5b57\u6570\u7ec4\u5f80\u5f80\u6709\u67d0\u79cd\u89c4\u5f8b\uff0c\u4f8b\u5982\u5927\u91cf\u7684\u7b49\u5dee\u6570\u5217\uff0c\u90a3\u4e48\u516c\u5dee\u548c\u6a21\u6570\u4e0d\u4e92\u8d28\u7684\u65f6\u5019\u53d1\u751f\u78b0\u649e\u7684\u6982\u7387\u4f1a\u53d8\u5927\uff0c\u800c\u7528\u8d28\u6570\u5c31\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u56de\u907f\u8fd9\u4e2a\u95ee\u9898\u3002"),(0,l.kt)("p",{parentName:"blockquote"},"\u7ed3\u8bba\uff1a\u5982\u679c\u6563\u5217\u503c\u7684\u56e0\u6570\u8d8a\u591a\uff0c\u53ef\u80fd\u5bfc\u81f4\u7684\u6563\u5217\u5206\u5e03\u8d8a\u4e0d\u5747\u5300\uff0c\u6240\u4ee5\u5206\u6876\u5927\u5c0f\u7684\u9009\u62e9\u9700\u8981\u9009\u62e9\u7ea6\u6570\u5c11\u7684\u6570\u503c\uff0c\u4ec0\u4e48\u6570\u503c\u7684\u7ea6\u6570\u6700\u5c11\u5462\uff1f\u5f53\u7136\u662f\u53ea\u67091\u548c\u5b83\u81ea\u5df1\u7684\u8d28\u6570\u4e86\u3002")),(0,l.kt)("h1",{id:"\u8bbe\u8ba1\u54c8\u5e0c\u8868"},"\u8bbe\u8ba1\u54c8\u5e0c\u8868"),(0,l.kt)("p",null,"\u9898\u76ee\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/design-hashmap/"},"706. \u8bbe\u8ba1\u54c8\u5e0c\u6620\u5c04")),(0,l.kt)("p",null,"\u80fd\u4f7f\u7528\u8d85\u5927\u6570\u7ec4\u6765\u89e3\u51b3\u672c\u9898\u662f\u56e0\u4e3a\u8f93\u5165\u6570\u636e\u7684\u8303\u56f4\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"0 <= key <= 10^6"),"\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981 ",(0,l.kt)("inlineCode",{parentName:"p"},"10^6 + 1")," \u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u5c31\u80fd\u8ba9\u6bcf\u4e2a\u6570\u636e\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u7d22\u5f15\uff0c\u4e0d\u4f1a\u6709 key \u7684\u78b0\u649e\u95ee\u9898\u3002"),(0,l.kt)("p",null,"\u56e0\u4e3a\u5bf9\u4e8e HashMap \u6765\u8bf4\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u9700\u8981\u4fdd\u5b58 ",(0,l.kt)("inlineCode",{parentName:"p"},"key:value")," \uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u628a\u6570\u7ec4\u7684\u5143\u7d20\u8bbe\u8ba1\u6210 int \u578b\uff0c\u4ee3\u8868\u7684\u662f value \u3002\u4ee5\u5143\u7d20\u4f5c\u4e3a\u7d22\u5f15\u4ece\u6570\u7ec4\u4e2d\u83b7\u53d6\u5bf9\u5e94\u4f4d\u7f6e\u4fdd\u5b58\u7684\u6570\u5b57\uff0c\u5c31\u662f value\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f18\u70b9\uff1a\u67e5\u627e\u548c\u5220\u9664\u7684\u6027\u80fd\u975e\u5e38\u5feb\uff0c\u53ea\u7528\u8bbf\u95ee 1 \u6b21\u6570\u7ec4\uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u70b9\uff1a\u4f7f\u7528\u4e86\u975e\u5e38\u5927\u7684\u7a7a\u95f4\uff0c\u5f53\u5143\u7d20\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u65e0\u6cd5\u4f7f\u7528\u8be5\u65b9\u6cd5\uff1b\u5f53\u5b58\u50a8\u7684\u5143\u7d20\u4e2a\u6570\u8f83\u5c11\u65f6\uff0c\u6027\u4ef7\u6bd4\u6781\u4f4e\uff1b\u9700\u8981\u9884\u77e5\u6570\u636e\u7684\u53d6\u503c\u8303\u56f4\u3002")),(0,l.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u8d85\u5927\u6570\u7ec4-1"},"\u65b9\u6cd5\u4e00\uff1a\u8d85\u5927\u6570\u7ec4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class MyHashMap {\npublic:\n    int total = 1e6;\n    vector<int> table;\n\n    MyHashMap() {\n        table.resize(total + 1, -1);\n    }\n\n    void put(int key, int value) {\n        table[key] = value;\n    }\n\n    int (int key) {\n        return table[key];\n    }\n\n    void remove(int key) {\n        table[key] = -1;\n    }\n};\n")),(0,l.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u62c9\u94fe\u6cd5-1"},"\u65b9\u6cd5\u4e8c\uff1a\u62c9\u94fe\u6cd5"),(0,l.kt)("h3",{id:"21-\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4-1"},"2.1 \u5b9a\u957f\u62c9\u94fe\u6570\u7ec4"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u65b9\u6cd5\u672c\u8d28\u4e0a\u5c31\u662f\u628a HashSet \u8bbe\u8ba1\u6210\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"M * N")," \u7684\u4e8c\u7ef4\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u7528\u4e8e\u8ba1\u7b97 hash \u5206\u6876\uff0c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u5bfb\u627e key \u5b58\u653e\u5177\u4f53\u7684\u4f4d\u7f6e\u3002\u7528\u4e86\u4e00\u4e2a\u4f18\u5316\uff1a\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7684\u6570\u7ec4\u53ea\u6709\u5f53\u9700\u8981\u6784\u5efa\u65f6\u624d\u4f1a\u4ea7\u751f\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5185\u5b58\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f18\u70b9\uff1a\u4e24\u4e2a\u7ef4\u5ea6\u90fd\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u6765\uff0c\u67e5\u627e\u548c\u5220\u9664\u53ea\u7528\u4e24\u6b21\u8bbf\u95ee\u5185\u5b58\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u70b9\uff1a\u9700\u8981\u9884\u77e5\u6570\u636e\u8303\u56f4\uff0c\u7528\u4e8e\u8bbe\u8ba1\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u7684\u6570\u7ec4\u5927\u5c0f\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class MyHashMap {\npublic:\n    int total = 1e6;\n    int buckets = 1000;\n    int itemsPerBucket = total / buckets + 1;\n    vector<vector<int>> table;\n\n    MyHashMap() {\n        table.resize(buckets);\n    }\n\n    int hash(int key) {  // \u9009\u5b9a\u7b2c\u51e0\u4e2a\u6876\n        return key % buckets;\n    }\n\n    int pos(int key) {  // \u6876\u5185\u7684\u504f\u79fb\u91cf\n        return key / buckets;\n    }\n\n    void put(int key, int value) {\n        int hashkey = hash(key);\n        int offset = pos(key);\n        if (table[hashkey].empty()) {\n            table[hashkey].resize(itemsPerBucket, -1);\n        }\n        table[hashkey][offset] = value;\n    }\n\n    int get(int key) {\n        int hashkey = hash(key);\n        int offset = pos(key);\n        if (!table[hashkey].empty()) {\n            return table[hashkey][offset];\n        }\n        return -1;\n    }\n\n    void remove(int key) {\n        int hashkey = hash(key);\n        int offset = pos(key);\n        if (!table[hashkey].empty()) {\n            table[hashkey][offset] = -1;\n        }\n    }\n};\n")),(0,l.kt)("h3",{id:"22-\u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4-1"},"2.2 \u4e0d\u5b9a\u957f\u62c9\u94fe\u6570\u7ec4"),(0,l.kt)("p",null,"\u4e0d\u5b9a\u957f\u7684\u62c9\u94fe\u6570\u7ec4\u662f\u8bf4\u62c9\u94fe\u4f1a\u6839\u636e\u5206\u6876\u4e2d\u7684 key \u52a8\u6001\u589e\u957f\uff0c\u66f4\u7c7b\u4f3c\u4e8e\u771f\u6b63\u7684\u94fe\u8868\u3002"),(0,l.kt)("p",null,"\u5206\u6876\u6570\u4e00\u822c\u53d6\u8d28\u6570\uff0c\u8fd9\u662f\u56e0\u4e3a\u7ecf\u9a8c\u4e0a\u6765\u8bf4\uff0c\u8d28\u6570\u4e2a\u7684\u5206\u6876\u80fd\u8ba9\u6570\u636e\u66f4\u52a0\u5206\u6563\u5230\u5404\u4e2a\u6876\u4e2d\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u628a\u5206\u6876\u6570\u53bb\u4e86 1009\uff0c\u662f\u56e0\u4e3a 1009 \u662f\u5927\u4e8e 1000 \u7684\u7b2c\u4e00\u4e2a\u8d28\u6570\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f18\u70b9\uff1a\u8282\u7701\u5185\u5b58\uff0c\u4e0d\u7528\u9884\u77e5\u6570\u636e\u8303\u56f4\uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u70b9\uff1a\u5728\u94fe\u8868\u4e2d\u67e5\u627e\u5143\u7d20\u9700\u8981\u904d\u5386\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class MyHashMap {\nprivate:\n    vector<list<pair<int, int>>> data;\n    static const int base = 769; // \u6876\u7684\u6570\u91cf\n    static int hash(int key) {\n        return key % base;\n    }\npublic:\n    MyHashMap(): data(base) {}\n    \n    void put(int key, int value) {\n        int h = hash(key);\n        // \u5df2\u7ecf\u5728\u6876\u91cc\u9762\uff0c\u76f4\u63a5\u8fd4\u56de\n        for (auto it = data[h].begin(); it != data[h].end(); it++) {\n            if ((*it).first == key) {\n                (*it).second = value;\n                return;\n            }\n        }\n        data[h].push_back(make_pair(key, value));\n    }\n    \n    int get(int key) {\n        int h = hash(key);\n        for (auto it = data[h].begin(); it != data[h].end(); it++) {\n            if ((*it).first == key) {\n                return (*it).second;\n            }\n        }\n        return -1;\n    }\n    \n    void remove(int key) {\n        int h = hash(key);\n        for (auto it = data[h].begin(); it != data[h].end(); it++) {\n            if ((*it).first == key) {\n                data[h].erase(it);\n                return;\n            }\n        }\n    }\n};\n")))}p.isMDXComponent=!0},28462:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/705-399e41d88d7d2e536671aa940ae8040d.png"}}]);
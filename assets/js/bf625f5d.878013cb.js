"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7894],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},f="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=c(t),d=l,m=f["".concat(p,".").concat(d)]||f[d]||s[d]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,i=new Array(o);i[0]=d;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[f]="string"==typeof e?e:l,i[1]=a;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},74872:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=t(87462),l=(t(67294),t(3905));const o={},i=void 0,a={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u904d\u5386\u5199\u6cd5>-\u79cd\u82b1\u95ee\u9898",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u904d\u5386\u5199\u6cd5>-\u79cd\u82b1\u95ee\u9898",title:"<\u904d\u5386\u5199\u6cd5>-\u79cd\u82b1\u95ee\u9898",description:"605. \u79cd\u82b1\u95ee\u9898",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/605-<\u904d\u5386\u5199\u6cd5>-\u79cd\u82b1\u95ee\u9898.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u904d\u5386\u5199\u6cd5>-\u79cd\u82b1\u95ee\u9898",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u904d\u5386\u5199\u6cd5>-\u79cd\u82b1\u95ee\u9898",draft:!1,tags:[],version:"current",sidebarPosition:605,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u666e\u901a\u8d2a\u5fc3>-\u5206\u7cd6\u679c",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u666e\u901a\u8d2a\u5fc3>-\u5206\u7cd6\u679c"},next:{title:"<\u753b\u56fe>-\u4efb\u52a1\u8c03\u5ea6\u5668",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u753b\u56fe>-\u4efb\u52a1\u8c03\u5ea6\u5668"}},p={},c=[{value:"\u65b9\u6cd5\uff1a\u8d2a\u5fc3",id:"\u65b9\u6cd5\u8d2a\u5fc3",level:2}],u={toc:c};function f(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/can-place-flowers/"},"605. \u79cd\u82b1\u95ee\u9898")),(0,l.kt)("p",null,"\u5047\u8bbe\u6709\u4e00\u4e2a\u5f88\u957f\u7684\u82b1\u575b\uff0c\u4e00\u90e8\u5206\u5730\u5757\u79cd\u690d\u4e86\u82b1\uff0c\u53e6\u4e00\u90e8\u5206\u5374\u6ca1\u6709\u3002\u53ef\u662f\uff0c\u82b1\u4e0d\u80fd\u79cd\u690d\u5728\u76f8\u90bb\u7684\u5730\u5757\u4e0a\uff0c\u5b83\u4eec\u4f1a\u4e89\u593a\u6c34\u6e90\uff0c\u4e24\u8005\u90fd\u4f1a\u6b7b\u53bb\u3002"),(0,l.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,l.kt)("inlineCode",{parentName:"p"},"flowerbed")," \u8868\u793a\u82b1\u575b\uff0c\u7531\u82e5\u5e72 ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," \u7ec4\u6210\uff0c\u5176\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," \u8868\u793a\u6ca1\u79cd\u690d\u82b1\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"1")," \u8868\u793a\u79cd\u690d\u4e86\u82b1\u3002\u53e6\u6709\u4e00\u4e2a\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," \uff0c\u80fd\u5426\u5728\u4e0d\u6253\u7834\u79cd\u690d\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u79cd\u5165 ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," \u6735\u82b1\uff1f\u80fd\u5219\u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," \uff0c\u4e0d\u80fd\u5219\u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1aflowerbed = [1,0,0,0,1], n = 1\n\u8f93\u51fa\uff1atrue\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1aflowerbed = [1,0,0,0,1], n = 2\n\u8f93\u51fa\uff1afalse\n\n")),(0,l.kt)("p",null,"\u63d0\u793a\uff1a"),(0,l.kt)("p",null,"1 <= flowerbed.length <= 2 * 104\nflowerbed","[i]"," \u4e3a 0 \u6216 1\nflowerbed \u4e2d\u4e0d\u5b58\u5728\u76f8\u90bb\u7684\u4e24\u6735\u82b1\n0 <= n <= flowerbed.length"),(0,l.kt)("h2",{id:"\u65b9\u6cd5\u8d2a\u5fc3"},"\u65b9\u6cd5\uff1a\u8d2a\u5fc3"),(0,l.kt)("p",null,"\u672c\u9898\u7684\u96be\u70b9\u662f\u300c\u5982\u4f55\u5199\u51fa\u4ee3\u7801\u300d"),(0,l.kt)("p",null,"\u7ecf\u8fc7\u904d\u5386\uff0c\u524d\u9762\u7684\u79cd\u82b1\u90fd\u662f\u7b26\u5408\u8981\u6c42\u7684\uff0c\u90a3\u4e48\u4ece\u5f53\u524d\u4f4d\u7f6e\u300c\u5f80\u540e\u770b\u300d\uff0c\u5176\u5b9e\u53ea\u6709\u4e09\u79cd\u53ef\u80fd"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u5f53\u524d\u4f4d\u7f6e0\uff0c\u4e0b\u4e2a\u4f4d\u7f6e0\uff0c00\uff0c\u5f53\u524d\u4f4d\u7f6e\u53ef\u4ee5\u79cd\u82b1(n--)\uff0c\u7136\u540e\u8df3\u5230\u4e0b\u4e0b\u4e2a\u4f4d\u7f6e(i+=2)\n\u5f53\u524d\u4f4d\u7f6e0\uff0c\u4e0b\u4e2a\u4f4d\u7f6e1\uff0c01\uff0c\u5f53\u524d\u4f4d\u7f6e\u4e0d\u53ef\u79cd\u82b1\uff0c\u7531\u4e8e\u4e0b\u4e2a\u4f4d\u7f6e\u4e3a1\uff0c\u4e0b\u4e0b\u4e2a\u4f4d\u7f6e\u5fc5\u7136\u4e3a0\uff0c010\uff0c\u8981\u8df3\u5230\u4e0b\u4e0b\u4e0b\u4e2a\u4f4d\u7f6e(i+=3)\n\u5f53\u524d\u4f4d\u7f6e1\uff0c\u4e0b\u4e2a\u4f4d\u7f6e0\uff0c01\uff0c\u5f53\u524d\u4f4d\u7f6e\u4e0d\u53ef\u79cd\u82b1\uff0c\u7136\u540e\u8df3\u5230\u4e0b\u4e0b\u4e2a\u4f4d\u7f6e(i+=2)\n\u5f53\u524d\u4f4d\u7f6e1\uff0c\u4e0b\u4e2a\u4f4d\u7f6e1\uff0c11\uff0c\u4e0d\u53ef\u80fd\u53d1\u751f\uff0c\u56e0\u4e3a\u9898\u76ee\u7ed9\u7684\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7ec4\n")),(0,l.kt)("p",null,"\u6240\u4ee5\u8003\u8651 00\u3001010\u300101 \u8fd9\u4e09\u79cd\u60c5\u51b5\u5373\u53ef"),(0,l.kt)("p",null,"\u6ce8\u610f\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u4e3a\u6700\u540e\u4e00\u4e2a\uff0c\u65e0\u6cd5\u300c\u5f80\u540e\u770b\u300d\uff0c\u4e5f\u4e0d\u9700\u8981\u5f80\u540e\u770b\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u82e5\u662f 0 \u5c31\u53ef\u79cd\u82b1"),(0,l.kt)("li",{parentName:"ul"},"\u5f80\u540e\u770b\u7684\u524d\uff0c\u9700\u8981\u68c0\u67e5\u4e0b i + 1 \u4f1a\u4e0d\u4f1a\u8d8a\u754c")),(0,l.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"O(n)")),(0,l.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"O(1)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool canPlaceFlowers(vector<int>& flowerbed, int n) {\n        int sz = flowerbed.size();\n        int i = 0;\n        while (i < flowerbed.size()) {\n            // cout << i << endl;\n            if (flowerbed[i] == 0) {\n                if (i == sz - 1) {\n                    n--;\n                    break;\n                }\n                if (flowerbed[i + 1] == 0) {  // 00 \u79cd\u82b1\n                    n--;\n                    i += 2;\n                } else if (flowerbed[i + 1] == 1) {  // 010 \u4e0d\u79cd\u82b1\n                    i += 3;\n                }\n            } else if (flowerbed[i] == 1) {  // 10 \u4e0d\u79cd\u82b1\n                i += 2;\n            }\n        }\n        return n <= 0;\n    }\n};\n\n")))}f.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[18995],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=i,f=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},44855:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const o={},a=void 0,l={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<\u54c8\u5e0c\u8868\u5efa\u6811>-\u6839\u636e\u63cf\u8ff0\u521b\u5efa\u4e8c\u53c9\u6811",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<\u54c8\u5e0c\u8868\u5efa\u6811>-\u6839\u636e\u63cf\u8ff0\u521b\u5efa\u4e8c\u53c9\u6811",title:"<\u54c8\u5e0c\u8868\u5efa\u6811>-\u6839\u636e\u63cf\u8ff0\u521b\u5efa\u4e8c\u53c9\u6811",description:"2196. \u6839\u636e\u63cf\u8ff0\u521b\u5efa\u4e8c\u53c9\u6811",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/2196-<\u54c8\u5e0c\u8868\u5efa\u6811>-\u6839\u636e\u63cf\u8ff0\u521b\u5efa\u4e8c\u53c9\u6811.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<\u54c8\u5e0c\u8868\u5efa\u6811>-\u6839\u636e\u63cf\u8ff0\u521b\u5efa\u4e8c\u53c9\u6811",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<\u54c8\u5e0c\u8868\u5efa\u6811>-\u6839\u636e\u63cf\u8ff0\u521b\u5efa\u4e8c\u53c9\u6811",draft:!1,tags:[],version:"current",sidebarPosition:2196,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u6700\u8fd1\u516c\u5171\u7956\u5148>-\u4ece\u4e8c\u53c9\u6811\u4e00\u4e2a\u8282\u70b9\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u6bcf\u4e00\u6b65\u7684\u65b9\u5411",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<\u6700\u8fd1\u516c\u5171\u7956\u5148>-\u4ece\u4e8c\u53c9\u6811\u4e00\u4e2a\u8282\u70b9\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u6bcf\u4e00\u6b65\u7684\u65b9\u5411"},next:{title:"<\u8d2a\u5fc3+\u7edf\u8ba1\u6bcf\u6761\u8fb9\u7684\u8d21\u732e>-\u5230\u8fbe\u9996\u90fd\u7684\u6700\u5c11\u6cb9\u8017",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u6811/<\u8d2a\u5fc3+\u7edf\u8ba1\u6bcf\u6761\u8fb9\u7684\u8d21\u732e>-\u5230\u8fbe\u9996\u90fd\u7684\u6700\u5c11\u6cb9\u8017"}},p={},s=[{value:"\u65b9\u6cd5\uff1a\u5229\u7528\u54c8\u5e0c\u8868\u5efa\u6811",id:"\u65b9\u6cd5\u5229\u7528\u54c8\u5e0c\u8868\u5efa\u6811",level:2}],c={toc:s};function d(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/create-binary-tree-from-descriptions/"},"2196. \u6839\u636e\u63cf\u8ff0\u521b\u5efa\u4e8c\u53c9\u6811")),(0,i.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"descriptions")," \uff0c\u5176\u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"descriptions[i] = [parenti, childi, isLefti]")," \u8868\u793a ",(0,i.kt)("inlineCode",{parentName:"p"},"parenti")," \u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"childi")," \u5728 ",(0,i.kt)("strong",{parentName:"p"},"\u4e8c\u53c9\u6811")," \u4e2d\u7684 ",(0,i.kt)("strong",{parentName:"p"},"\u7236\u8282\u70b9"),"\uff0c\u4e8c\u53c9\u6811\u4e2d\u5404\u8282\u70b9\u7684\u503c ",(0,i.kt)("strong",{parentName:"p"},"\u4e92\u4e0d\u76f8\u540c")," \u3002\u6b64\u5916\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5982\u679c ",(0,i.kt)("inlineCode",{parentName:"li"},"isLefti == 1")," \uff0c\u90a3\u4e48 ",(0,i.kt)("inlineCode",{parentName:"li"},"childi")," \u5c31\u662f ",(0,i.kt)("inlineCode",{parentName:"li"},"parenti")," \u7684\u5de6\u5b50\u8282\u70b9\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u5982\u679c ",(0,i.kt)("inlineCode",{parentName:"li"},"isLefti == 0")," \uff0c\u90a3\u4e48 ",(0,i.kt)("inlineCode",{parentName:"li"},"childi")," \u5c31\u662f ",(0,i.kt)("inlineCode",{parentName:"li"},"parenti")," \u7684\u53f3\u5b50\u8282\u70b9\u3002")),(0,i.kt)("p",null,"\u8bf7\u4f60\u6839\u636e ",(0,i.kt)("inlineCode",{parentName:"p"},"descriptions")," \u7684\u63cf\u8ff0\u6765\u6784\u9020\u4e8c\u53c9\u6811\u5e76\u8fd4\u56de\u5176 ",(0,i.kt)("strong",{parentName:"p"},"\u6839\u8282\u70b9")," \u3002"),(0,i.kt)("p",null,"\u6d4b\u8bd5\u7528\u4f8b\u4f1a\u4fdd\u8bc1\u53ef\u4ee5\u6784\u9020\u51fa ",(0,i.kt)("strong",{parentName:"p"},"\u6709\u6548")," \u7684\u4e8c\u53c9\u6811\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:n(97103).Z,width:"422",height:"332"})),(0,i.kt)("p",null,"\u8f93\u5165\uff1adescriptions = [","[20,15,1]",",","[20,17,0]",",","[50,20,1]",",","[50,80,0]",",","[80,19,1]","]\n\u8f93\u51fa\uff1a","[50,20,80,15,17,19]","\n\u89e3\u91ca\uff1a\u6839\u8282\u70b9\u662f\u503c\u4e3a 50 \u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u7236\u8282\u70b9\u3002\n\u7ed3\u679c\u4e8c\u53c9\u6811\u5982\u4e0a\u56fe\u6240\u793a\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:n(31564).Z,width:"162",height:"372"})),(0,i.kt)("p",null,"\u8f93\u5165\uff1adescriptions = [","[1,2,1]",",","[2,3,0]",",","[3,4,1]","]\n\u8f93\u51fa\uff1a","[1,2,null,null,3,4]","\n\u89e3\u91ca\uff1a\u6839\u8282\u70b9\u662f\u503c\u4e3a 1 \u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u7236\u8282\u70b9\u3002\n\u7ed3\u679c\u4e8c\u53c9\u6811\u5982\u4e0a\u56fe\u6240\u793a\u3002 "),(0,i.kt)("p",null,"\u63d0\u793a\uff1a"),(0,i.kt)("p",null,"1 <= descriptions.length <= 104\ndescriptions","[i]",".length == 3\n1 <= parenti, childi <= 105\n0 <= isLefti <= 1\ndescriptions \u6240\u63cf\u8ff0\u7684\u4e8c\u53c9\u6811\u662f\u4e00\u68f5\u6709\u6548\u4e8c\u53c9\u6811"),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u5229\u7528\u54c8\u5e0c\u8868\u5efa\u6811"},"\u65b9\u6cd5\uff1a\u5229\u7528\u54c8\u5e0c\u8868\u5efa\u6811"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    TreeNode* createBinaryTree(vector<vector<int>>& descriptions) {\n        unordered_map<int, TreeNode*> tree_map;\n        unordered_map<int, bool> is_root;\n        for (auto des : descriptions) {\n            tree_map[des[0]] = new TreeNode(des[0]);\n            tree_map[des[1]] = new TreeNode(des[1]);\n            is_root[des[0]] = true;\n            is_root[des[1]] = true;\n        }\n\n        for (auto des : descriptions) {\n            is_root[des[1]] = false;\n            if (des[2] == 1) { // \u5de6\u8282\u70b9\n                tree_map[des[0]]->left = tree_map[des[1]];\n            } else {\n                tree_map[des[0]]->right = tree_map[des[1]];\n            }\n        }\n\n        for (auto it = is_root.begin(); it != is_root.end(); it++) {\n            if (it->second == true) {\n                return tree_map[it->first];\n            }\n        }\n        return new(TreeNode);\n    }\n};\n")))}d.isMDXComponent=!0},97103:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/example1drawio-d461ceb618f846c3beb2ec3b4b39fa5c.png"},31564:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/example2drawio-2f56d1ddfcf925e576bb5e472cac7659.png"}}]);
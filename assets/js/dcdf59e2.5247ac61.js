"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[87037],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=u(t),d=a,k=s["".concat(p,".").concat(d)]||s[d]||c[d]||i;return t?r.createElement(k,o(o({ref:n},m),{},{components:t})):r.createElement(k,o({ref:n},m))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},95054:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const i={},o=void 0,l={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3+\u5206\u7c7b>-\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u6700\u5c11\u64cd\u4f5c\u6570",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3+\u5206\u7c7b>-\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u6700\u5c11\u64cd\u4f5c\u6570",title:"<\u8d2a\u5fc3+\u5206\u7c7b>-\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u6700\u5c11\u64cd\u4f5c\u6570",description:"2170. \u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u6700\u5c11\u64cd\u4f5c\u6570",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/2170-<\u8d2a\u5fc3+\u5206\u7c7b>-\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u6700\u5c11\u64cd\u4f5c\u6570.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3+\u5206\u7c7b>-\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u6700\u5c11\u64cd\u4f5c\u6570",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3+\u5206\u7c7b>-\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u6700\u5c11\u64cd\u4f5c\u6570",draft:!1,tags:[],version:"current",sidebarPosition:2170,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u8d2a\u5fc3>-\u4ece\u53cc\u500d\u6570\u7ec4\u4e2d\u8fd8\u539f\u539f\u6570\u7ec4",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u8d2a\u5fc3>-\u4ece\u53cc\u500d\u6570\u7ec4\u4e2d\u8fd8\u539f\u539f\u6570\u7ec4"},next:{title:"<\u5faa\u73af\u4e2d\u52a8\u6001\u53d8\u5316\u4e0a\u9650\u503c>-\u62c6\u5206\u6210\u6700\u591a\u6570\u76ee\u7684\u5076\u6574\u6570\u4e4b\u548c",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u8d2a\u5fc3/<\u5faa\u73af\u4e2d\u52a8\u6001\u53d8\u5316\u4e0a\u9650\u503c>-\u62c6\u5206\u6210\u6700\u591a\u6570\u76ee\u7684\u5076\u6574\u6570\u4e4b\u548c"}},p={},u=[{value:"\u65b9\u6cd5\uff1a\u8d2a\u5fc3+\u5206\u7c7b\u8ba8\u8bba",id:"\u65b9\u6cd5\u8d2a\u5fc3\u5206\u7c7b\u8ba8\u8bba",level:2}],m={toc:u};function s(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/minimum-operations-to-make-the-array-alternating/"},"2170. \u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u6700\u5c11\u64cd\u4f5c\u6570")),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u4e0b\u6807\u4ece ",(0,a.kt)("strong",{parentName:"p"},"0")," \u5f00\u59cb\u7684\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," \uff0c\u8be5\u6570\u7ec4\u7531 ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," \u4e2a\u6b63\u6574\u6570\u7ec4\u6210\u3002"),(0,a.kt)("p",null,"\u5982\u679c\u6ee1\u8db3\u4e0b\u8ff0\u6761\u4ef6\uff0c\u5219\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," \u662f\u4e00\u4e2a ",(0,a.kt)("strong",{parentName:"p"},"\u4ea4\u66ff\u6570\u7ec4")," \uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nums[i - 2] == nums[i]")," \uff0c\u5176\u4e2d ",(0,a.kt)("inlineCode",{parentName:"li"},"2 <= i <= n - 1")," \u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nums[i - 1] != nums[i]")," \uff0c\u5176\u4e2d ",(0,a.kt)("inlineCode",{parentName:"li"},"1 <= i <= n - 1")," \u3002")),(0,a.kt)("p",null,"\u5728\u4e00\u6b65 ",(0,a.kt)("strong",{parentName:"p"},"\u64cd\u4f5c")," \u4e2d\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e0b\u6807 ",(0,a.kt)("inlineCode",{parentName:"p"},"i")," \u5e76\u5c06 ",(0,a.kt)("inlineCode",{parentName:"p"},"nums[i]")," ",(0,a.kt)("strong",{parentName:"p"},"\u66f4\u6539")," \u4e3a ",(0,a.kt)("strong",{parentName:"p"},"\u4efb\u4e00")," \u6b63\u6574\u6570\u3002"),(0,a.kt)("p",null,"\u8fd4\u56de\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684 ",(0,a.kt)("strong",{parentName:"p"},"\u6700\u5c11\u64cd\u4f5c\u6570")," \u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anums = [3,1,3,2,4,3]\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\n\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u5c06\u8be5\u6570\u7ec4\u8f6c\u6362\u4e3a [3,1,3,1,3,1] \u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u64cd\u4f5c\u6570\u4e3a 3 \u3002\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u64cd\u4f5c\u6570\u5c11\u4e8e 3 \u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u3002\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1anums = [1,2,2,2,2]\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1a\n\u4f7f\u6570\u7ec4\u53d8\u6210\u4ea4\u66ff\u6570\u7ec4\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u5c06\u8be5\u6570\u7ec4\u8f6c\u6362\u4e3a [1,2,1,2,1].\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u64cd\u4f5c\u6570\u4e3a 2 \u3002\n\u6ce8\u610f\uff0c\u6570\u7ec4\u4e0d\u80fd\u8f6c\u6362\u6210 [2,2,2,2,2] \u3002\u56e0\u4e3a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cnums[0] == nums[1]\uff0c\u4e0d\u6ee1\u8db3\u4ea4\u66ff\u6570\u7ec4\u7684\u6761\u4ef6\u3002\n\n")),(0,a.kt)("p",null,"\u63d0\u793a\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 105")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums[i] <= 105"))),(0,a.kt)("h2",{id:"\u65b9\u6cd5\u8d2a\u5fc3\u5206\u7c7b\u8ba8\u8bba"},"\u65b9\u6cd5\uff1a\u8d2a\u5fc3+\u5206\u7c7b\u8ba8\u8bba"),(0,a.kt)("p",null,"\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u5947\u5076\u4e0b\u6807\u5206\u7ec4\uff0c\u8bb0\u4f5c a0 \u548c a1\uff0c\u6bcf\u7ec4\u5185\u7684\u5143\u7d20\u9700\u8981\u76f8\u7b49\u3002"),(0,a.kt)("p",null,"\u8003\u8651\u6bcf\u7ec4\u5185\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20\uff0c\u5206\u522b\u8bb0\u4f5c x \u548c y\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u82e5 x \u4e0d\u7b49\u4e8e y\uff0ca0 \u4fdd\u7559 x\uff0ca1 \u4fdd\u7559 y\uff0c\u5176\u4f59\u7684\u5143\u7d20\u8fdb\u884c\u4fee\u6539\uff0c\u4fee\u6539\u6b21\u6570\u4e3a nums\u957f\u5ea6 - x\u6b21\u6570 - y\u6b21\u6570"),(0,a.kt)("li",{parentName:"ul"},"\u82e5 x \u7b49\u4e8e y\uff0c\u8003\u8651\u6bcf\u7ec4\u5185\u7b2c\u4e8c\u591a\u7684\u5143\u7d20\uff0c\u4e0b\u5217\u4e24\u79cd\u60c5\u51b5\u53d6\u6700\u4f18",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"a0 \u4e2d\u51fa\u73b0\u6700\u591a\u7684\u5143\u7d20\uff0ca1\u4e2d\u7b2c\u4e8c\u591a\u7684\u5143\u7d20"),(0,a.kt)("li",{parentName:"ul"},"a0 \u4e2d\u51fa\u73b0\u7b2c\u4e8c\u591a\u7684\u5143\u7d20\uff0ca1\u4e2d\u6700\u591a\u7684\u5143\u7d20")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int minimumOperations(vector<int> &nums) {\n        unordered_map<int, int> cnt0, cnt1;\n        for (int i = 0; i < nums.size(); i++) {\n            if (i & 1) {\n                cnt1[nums[i]]++;  // \u5947\u6570\n            } else {\n                cnt0[nums[i]]++;  // \u5076\u6570\n            }\n        }\n        auto getMax = [&](unordered_map<int, int> &cnt_mp) {\n            vector<pair<int, int>> res;\n            for (auto &[k, v] : cnt_mp) {\n                res.push_back({k, v});\n            }\n            sort(res.begin(), res.end(), [&](const auto &x, const auto &y) {\n                return x.second > y.second;\n            });\n            res.resize(2);\n            return res;\n        };\n        vector<pair<int, int>> a0 = getMax(cnt0);  // \u5076\u6570\n        vector<pair<int, int>> a1 = getMax(cnt1);  // \u5076\u6570\n\n        int maxCnt = 0;\n        if (a0[0].first != a1[0].first) {\n            maxCnt = a0[0].second + a1[0].second;\n        } else {\n            maxCnt = max(a0[0].second + a1[1].second, a0[1].second + a1[0].second);\n        }\n        return nums.size() - maxCnt;\n    }\n};\n")))}s.isMDXComponent=!0}}]);
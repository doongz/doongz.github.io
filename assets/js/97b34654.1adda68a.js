"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1148],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),i=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,u=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=i(r),f=o,d=s["".concat(u,".").concat(f)]||s[f]||m[f]||l;return r?n.createElement(d,a(a({ref:t},c),{},{components:r})):n.createElement(d,a({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=f;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p[s]="string"==typeof e?e:o,a[1]=p;for(var i=2;i<l;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},10498:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var n=r(87462),o=(r(67294),r(3905));const l={},a=void 0,p={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u5251\u6307Offer-68-I-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u5251\u6307Offer-68-I-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",title:"\u5251\u6307Offer-68-I-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",description:"\u9898\u76ee\uff1a\u5251\u6307 Offer 68 - I. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u5251\u6307Offer-68-I-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u5251\u6307Offer-68-I-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u5251\u6307Offer-68-I-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u5251\u6307Offer-33-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u5251\u6307Offer-33-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217"},next:{title:"\u9762\u8bd5\u9898-04-02-<\u6784\u9020\u641c\u7d22\u6811>-\u6700\u5c0f\u9ad8\u5ea6\u6811",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u4e8c\u53c9\u641c\u7d22\u6811/\u9762\u8bd5\u9898-04-02-<\u6784\u9020\u641c\u7d22\u6811>-\u6700\u5c0f\u9ad8\u5ea6\u6811"}},u={},i=[{value:"\u65b9\u6cd5\u4e00\uff1a\u8fed\u4ee3",id:"\u65b9\u6cd5\u4e00\u8fed\u4ee3",level:4},{value:"\u65b9\u6cd5\u4e8c\uff1a\u9012\u5f52",id:"\u65b9\u6cd5\u4e8c\u9012\u5f52",level:4}],c={toc:i};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof/"},"\u5251\u6307 Offer 68 - I. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148")),(0,o.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811, \u627e\u5230\u8be5\u6811\u4e2d\u4e24\u4e2a\u6307\u5b9a\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002"),(0,o.kt)("p",null,"\u767e\u5ea6\u767e\u79d1\u4e2d\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u5b9a\u4e49\u4e3a\uff1a\u201c\u5bf9\u4e8e\u6709\u6839\u6811 T \u7684\u4e24\u4e2a\u7ed3\u70b9 p\u3001q\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u8868\u793a\u4e3a\u4e00\u4e2a\u7ed3\u70b9 x\uff0c\u6ee1\u8db3 x \u662f p\u3001q \u7684\u7956\u5148\u4e14 x \u7684\u6df1\u5ea6\u5c3d\u53ef\u80fd\u5927\uff08\u4e00\u4e2a\u8282\u70b9\u4e5f\u53ef\u4ee5\u662f\u5b83\u81ea\u5df1\u7684\u7956\u5148\uff09\u3002\u201d"),(0,o.kt)("p",null,"\u4f8b\u5982\uff0c\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u641c\u7d22\u6811:  root = ","[6,2,8,0,4,7,9,null,null,3,5]"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/binarysearchtree_improved.png",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1:\n\n\u8f93\u5165: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8\n\u8f93\u51fa: 6 \n\u89e3\u91ca: \u8282\u70b9 2 \u548c\u8282\u70b9 8 \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f 6\u3002\n\n\u793a\u4f8b 2:\n\n\u8f93\u5165: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4\n\u8f93\u51fa: 2\n\u89e3\u91ca: \u8282\u70b9 2 \u548c\u8282\u70b9 4 \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f 2, \u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9\u53ef\u4ee5\u4e3a\u8282\u70b9\u672c\u8eab\u3002\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u8bf4\u660e:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002"),(0,o.kt)("li",{parentName:"ul"},"p\u3001q \u4e3a\u4e0d\u540c\u8282\u70b9\u4e14\u5747\u5b58\u5728\u4e8e\u7ed9\u5b9a\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u3002")),(0,o.kt)("p",null,"\u6ce8\u610f\uff1a\u672c\u9898\u4e0e\u4e3b\u7ad9 235 \u9898\u76f8\u540c\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/"},"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"p,q \u4e0e rootroot \u7684\u5b50\u6811\u5173\u7cfb\uff0c\u5373\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u82e5 root.val < p.val \uff0c\u5219 pp \u5728 root \u53f3\u5b50\u6811 \u4e2d\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u82e5 root.val > p.val \uff0c\u5219 pp \u5728 root \u5de6\u5b50\u6811 \u4e2d\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u82e5 root.val = p.val \uff0c\u5219 pp \u548c root \u6307\u5411 \u540c\u4e00\u8282\u70b9 \u3002")),(0,o.kt)("h4",{id:"\u65b9\u6cd5\u4e00\u8fed\u4ee3"},"\u65b9\u6cd5\u4e00\uff1a\u8fed\u4ee3"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5faa\u73af\u641c\u7d22"),"\uff1a\u5f53\u8282\u70b9 root \u4e3a\u7a7a\u65f6\u8df3\u51fa\uff1b"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5f53 p, q \u90fd\u5728 root \u7684 \u53f3\u5b50\u6811 \u4e2d\uff0c\u5219\u904d\u5386\u81f3 root.right\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u5426\u5219\uff0c\u5f53 p, q \u90fd\u5728 root \u7684 \u5de6\u5b50\u6811 \u4e2d\uff0c\u5219\u904d\u5386\u81f3 root.left\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u5426\u5219\uff0c\u8bf4\u660e\u627e\u5230\u4e86 \u6700\u8fd1\u516c\u5171\u7956\u5148 \uff0c\u8df3\u51fa\u3002")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"),"\uff1a \u6700\u8fd1\u516c\u5171\u7956\u5148 root\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u590d\u6742\u5ea6\u5206\u6790"),"\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6 O(N)\uff1a \u5176\u4e2d N \u4e3a\u4e8c\u53c9\u6811\u8282\u70b9\u6570\uff1b\u6bcf\u5faa\u73af\u4e00\u8f6e\u6392\u9664\u4e00\u5c42\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5c42\u6570\u6700\u5c0f\u4e3a logN \uff08\u6ee1\u4e8c\u53c9\u6811\uff09\uff0c\u6700\u5927\u4e3a N \uff08\u9000\u5316\u4e3a\u94fe\u8868\uff09\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)\uff1a \u4f7f\u7528\u5e38\u6570\u5927\u5c0f\u7684\u989d\u5916\u7a7a\u95f4\u3002")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        while (root) {\n            if (root->val < p->val && root->val < q->val) {\n                // p,q \u90fd\u5728 root \u7684\u53f3\u5b50\u6811\u4e2d\n                root = root->right;\n            } else if (root->val > p->val && root->val > q->val) {\n                // p,q \u90fd\u5728 root \u7684\u5de6\u5b50\u6811\u4e2d\n                root = root->left;\n            } else {\n                // \u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u4e24\u4e2a\u6761\u4ef6\uff0c\u8bf4\u660e p,q \u5206\u53c9\u4e86\n                break;\n            }\n        }\n        return root;\n    }\n};\n")),(0,o.kt)("h4",{id:"\u65b9\u6cd5\u4e8c\u9012\u5f52"},"\u65b9\u6cd5\u4e8c\uff1a\u9012\u5f52"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u9012\u63a8\u5de5\u4f5c"),"\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5f53 p, q \u90fd\u5728 root \u7684 \u53f3\u5b50\u6811 \u4e2d\uff0c\u5219\u5f00\u542f\u9012\u5f52 root.right \u5e76\u8fd4\u56de\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u5426\u5219\uff0c\u5f53 p, q \u90fd\u5728 root \u7684 \u5de6\u5b50\u6811 \u4e2d\uff0c\u5219\u5f00\u542f\u9012\u5f52 root.left \u5e76\u8fd4\u56de\uff1b")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"),"\uff1a \u6700\u8fd1\u516c\u5171\u7956\u5148 root \u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u590d\u6742\u5ea6\u5206\u6790"),"\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6 O(N)\uff1a \u5176\u4e2d N \u4e3a\u4e8c\u53c9\u6811\u8282\u70b9\u6570\uff1b\u6bcf\u5faa\u73af\u4e00\u8f6e\u6392\u9664\u4e00\u5c42\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5c42\u6570\u6700\u5c0f\u4e3a logN \uff08\u6ee1\u4e8c\u53c9\u6811\uff09\uff0c\u6700\u5927\u4e3a N \uff08\u9000\u5316\u4e3a\u94fe\u8868\uff09\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6 O(N)\uff1a \u6700\u5dee\u60c5\u51b5\u4e0b\uff0c\u5373\u6811\u9000\u5316\u4e3a\u94fe\u8868\u65f6\uff0c\u9012\u5f52\u6df1\u5ea6\u8fbe\u5230\u6811\u7684\u5c42\u6570 N\u3002")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    TreeNode* dfs(TreeNode* cur, TreeNode* p, TreeNode* q) {\n        if (cur->val < p->val && cur->val < q->val) {\n            return dfs(cur->right, p, q);\n        } else if (cur->val > p->val && cur->val > q->val) {\n            return dfs(cur->left, p, q);\n        }\n        return cur;\n    }\n\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        return dfs(root, p, q);\n    }\n};\n")))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[13298],{3905:(n,r,e)=>{e.d(r,{Zo:()=>u,kt:()=>b});var t=e(67294);function o(n,r,e){return r in n?Object.defineProperty(n,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[r]=e,n}function i(n,r){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(n,r).enumerable}))),e.push.apply(e,t)}return e}function s(n){for(var r=1;r<arguments.length;r++){var e=null!=arguments[r]?arguments[r]:{};r%2?i(Object(e),!0).forEach((function(r){o(n,r,e[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(r){Object.defineProperty(n,r,Object.getOwnPropertyDescriptor(e,r))}))}return n}function c(n,r){if(null==n)return{};var e,t,o=function(n,r){if(null==n)return{};var e,t,o={},i=Object.keys(n);for(t=0;t<i.length;t++)e=i[t],r.indexOf(e)>=0||(o[e]=n[e]);return o}(n,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(t=0;t<i.length;t++)e=i[t],r.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(o[e]=n[e])}return o}var a=t.createContext({}),l=function(n){var r=t.useContext(a),e=r;return n&&(e="function"==typeof n?n(r):s(s({},r),n)),e},u=function(n){var r=l(n.components);return t.createElement(a.Provider,{value:r},n.children)},p="mdxType",f={inlineCode:"code",wrapper:function(n){var r=n.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(n,r){var e=n.components,o=n.mdxType,i=n.originalType,a=n.parentName,u=c(n,["components","mdxType","originalType","parentName"]),p=l(e),d=o,b=p["".concat(a,".").concat(d)]||p[d]||f[d]||i;return e?t.createElement(b,s(s({ref:r},u),{},{components:e})):t.createElement(b,s({ref:r},u))}));function b(n,r){var e=arguments,o=r&&r.mdxType;if("string"==typeof n||o){var i=e.length,s=new Array(i);s[0]=d;var c={};for(var a in r)hasOwnProperty.call(r,a)&&(c[a]=r[a]);c.originalType=n,c[p]="string"==typeof n?n:o,s[1]=c;for(var l=2;l<i;l++)s[l]=e[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,e)}d.displayName="MDXCreateElement"},15415:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=e(87462),o=(e(67294),e(3905));const i={},s=void 0,c={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<\u8fd4\u56de\u6700\u5148\u9047\u5230\u7684\u524d\u7f00>-\u5355\u8bcd\u66ff\u6362",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<\u8fd4\u56de\u6700\u5148\u9047\u5230\u7684\u524d\u7f00>-\u5355\u8bcd\u66ff\u6362",title:"<\u8fd4\u56de\u6700\u5148\u9047\u5230\u7684\u524d\u7f00>-\u5355\u8bcd\u66ff\u6362",description:"\u9898\u76ee\uff1a648. \u5355\u8bcd\u66ff\u6362",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/648-<\u8fd4\u56de\u6700\u5148\u9047\u5230\u7684\u524d\u7f00>-\u5355\u8bcd\u66ff\u6362.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<\u8fd4\u56de\u6700\u5148\u9047\u5230\u7684\u524d\u7f00>-\u5355\u8bcd\u66ff\u6362",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<\u8fd4\u56de\u6700\u5148\u9047\u5230\u7684\u524d\u7f00>-\u5355\u8bcd\u66ff\u6362",draft:!1,tags:[],version:"current",sidebarPosition:648,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5b57\u5178\u6811\u4f18\u5316dfs>-\u5355\u8bcd\u641c\u7d22II",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<\u5b57\u5178\u6811\u4f18\u5316dfs>-\u5355\u8bcd\u641c\u7d22II"},next:{title:"<dfs\u641c\u7d22\u5b57\u5178\u6811>-\u5b9e\u73b0\u4e00\u4e2a\u9b54\u6cd5\u5b57\u5178",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u5b57\u5178\u6811/<dfs\u641c\u7d22\u5b57\u5178\u6811>-\u5b9e\u73b0\u4e00\u4e2a\u9b54\u6cd5\u5b57\u5178"}},a={},l=[],u={toc:l};function p(n){let{components:r,...e}=n;return(0,o.kt)("wrapper",(0,t.Z)({},u,e,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/replace-words/"},"648. \u5355\u8bcd\u66ff\u6362")),(0,o.kt)("p",null,"\u5728\u82f1\u8bed\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u53eb\u505a \u8bcd\u6839(root) \u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u8bcd\u6839\u540e\u9762\u6dfb\u52a0\u5176\u4ed6\u4e00\u4e9b\u8bcd\u7ec4\u6210\u53e6\u4e00\u4e2a\u8f83\u957f\u7684\u5355\u8bcd\u2014\u2014\u6211\u4eec\u79f0\u8fd9\u4e2a\u8bcd\u4e3a \u7ee7\u627f\u8bcd(successor)\u3002\u4f8b\u5982\uff0c\u8bcd\u6839an\uff0c\u8ddf\u968f\u7740\u5355\u8bcd other(\u5176\u4ed6)\uff0c\u53ef\u4ee5\u5f62\u6210\u65b0\u7684\u5355\u8bcd another(\u53e6\u4e00\u4e2a)\u3002"),(0,o.kt)("p",null,"\u73b0\u5728\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u7531\u8bb8\u591a\u8bcd\u6839\u7ec4\u6210\u7684\u8bcd\u5178 dictionary \u548c\u4e00\u4e2a\u7528\u7a7a\u683c\u5206\u9694\u5355\u8bcd\u5f62\u6210\u7684\u53e5\u5b50 sentence\u3002\u4f60\u9700\u8981\u5c06\u53e5\u5b50\u4e2d\u7684\u6240\u6709\u7ee7\u627f\u8bcd\u7528\u8bcd\u6839\u66ff\u6362\u6389\u3002\u5982\u679c\u7ee7\u627f\u8bcd\u6709\u8bb8\u591a\u53ef\u4ee5\u5f62\u6210\u5b83\u7684\u8bcd\u6839\uff0c\u5219\u7528\u6700\u77ed\u7684\u8bcd\u6839\u66ff\u6362\u5b83\u3002"),(0,o.kt)("p",null,"\u4f60\u9700\u8981\u8f93\u51fa\u66ff\u6362\u4e4b\u540e\u7684\u53e5\u5b50\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1adictionary = ["cat","bat","rat"], sentence = "the cattle was rattled by the battery"\n\u8f93\u51fa\uff1a"the cat was rat by the bat"\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1adictionary = ["a","b","c"], sentence = "aadsfasf absbs bbab cadsfafs"\n\u8f93\u51fa\uff1a"a a b c"\n')),(0,o.kt)("p",null,"\u63d0\u793a\uff1a"),(0,o.kt)("p",null,"1 <= dictionary.length <= 1000\n1 <= dictionary","[i]",".length <= 100\ndictionary","[i]"," \u4ec5\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\n1 <= sentence.length <= 10^6\nsentence \u4ec5\u7531\u5c0f\u5199\u5b57\u6bcd\u548c\u7a7a\u683c\u7ec4\u6210\u3002\nsentence \u4e2d\u5355\u8bcd\u7684\u603b\u91cf\u5728\u8303\u56f4 ","[1, 1000]"," \u5185\u3002\nsentence \u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u5728\u8303\u56f4 ","[1, 1000]"," \u5185\u3002\nsentence \u4e2d\u5355\u8bcd\u4e4b\u95f4\u7531\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\nsentence \u6ca1\u6709\u524d\u5bfc\u6216\u5c3e\u968f\u7a7a\u683c\u3002"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"query\uff1a\u8fd4\u56de\u6700\u5148\u9047\u5230\u7684\u524d\u7f00"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'class Trie {\npublic:\n    Trie* son[26];  // \u5b58\u653e\u5f53\u524d\u5b57\u7b26\u4e4b\u540e\u7684\u5b57\u7b26\n    bool isWord;\n    string str;\n\n    Trie() {\n        for (int i = 0; i < 26; i++) son[i] = nullptr;\n        isWord = false;\n        str = "";\n    }\n    ~Trie() {\n        for (int i = 0; i < 26; i++) {\n            if (son[i] != nullptr) delete son[i];\n        }\n    }\n\n    void insert(string word) {\n        Trie* root = this;     // \u4ece\u5934\u8282\u70b9\u5f00\u59cb\u67e5\n        for (char c : word) {  // \u7c7b\u4f3c\u94fe\u8868\u7684\u904d\u5386\n            int cur = c - \'a\';\n            if (root->son[cur] == nullptr) root->son[cur] = new Trie();\n            root = root->son[cur];\n        }\n        root->isWord = true;  // \u5728\u5355\u8bcd\u7684\u7ed3\u5c3e\u8282\u70b9\u6807\u8bb0\u4e00\u4e0b \u662f\u5355\u8bcd\n        root->str = word;     // \u7ed3\u5c3e\u76f4\u63a5\u8bb0\u5f55\u5355\u8bcd\n    }\n\n    bool search(string word) {\n        Trie* root = this;  // \u4ece\u5934\u8282\u70b9\u5f00\u59cb\u67e5\n        for (char c : word) {\n            int cur = c - \'a\';\n            if (root->son[cur] == nullptr) return false;  // word\u8fd8\u6ca1\u904d\u5386\u5b8c\uff0c\u5c31\u627e\u4e0d\u5230\u4e86\n            root = root->son[cur];\n        }\n        return root->isWord;  // \u904d\u5386\u5230word\u7ed3\u5c3e\u7684\u8282\u70b9\uff0c\u662f\u5426\u662f\u4e4b\u524d\u5b58\u5728\u7684\u5355\u8bcd\n    }\n\n    bool startsWith(string prefix) {\n        Trie* root = this;\n        for (char c : prefix) {\n            int cur = c - \'a\';\n            if (root->son[cur] == nullptr) return false;  // prefix\u8fd8\u6ca1\u904d\u5386\u5b8c\uff0c\u5c31\u627e\u4e0d\u5230\u4e86\n            root = root->son[cur];\n        }\n        return true;  // prefix\u6b63\u5e38\u904d\u5386\u5b8c\uff0c\u5c31\u8fd4\u56detrue\n    }\n\n    string query(string& word) {\n        Trie* root = this;     // \u4ece\u5934\u8282\u70b9\u5f00\u59cb\u67e5\n        for (char c : word) {  // \u7c7b\u4f3c\u94fe\u8868\u7684\u904d\u5386\n            int cur = c - \'a\';\n            if (root->son[cur] == nullptr) return "";  // \u6ca1\u627e\u5230\n            if (root->son[cur]->isWord == true) {\n                return root->son[cur]->str;\n            }\n            root = root->son[cur];\n        }\n        return "";  // \u6ca1\u627e\u5230\n    }\n};\n\nclass Solution {\npublic:\n    string replaceWords(vector<string>& dictionary, string sentence) {\n        Trie trie;\n        for (string& word : dictionary) {\n            trie.insert(word);\n        }\n        int s = 0;\n        sentence += " ";\n        string ans = "";\n\n        for (int i = 0; i < sentence.size(); i++) {\n            if (sentence[i] == \' \') {\n                string sub = sentence.substr(s, i - s);\n                string pre = trie.query(sub);\n                if (pre != "") {\n                    ans += pre;\n                } else {\n                    ans += sub;\n                }\n                if (i != sentence.size() - 1) {\n                    ans += " ";\n                }\n                s = i + 1;\n            }\n        }\n\n        return ans;\n    }\n};\n')))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[93946],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(t),v=i,k=d["".concat(s,".").concat(v)]||d[v]||u[v]||a;return t?r.createElement(k,o(o({ref:n},c),{},{components:t})):r.createElement(k,o({ref:n},c))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=v;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[d]="string"==typeof e?e:i,o[1]=p;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},53867:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var r=t(87462),i=(t(67294),t(3905));const a={},o="\u8be6\u89e3 Kubernetes Service \u7684\u5b9e\u73b0\u539f\u7406",p={unversionedId:"Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/service",id:"Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/service",title:"\u8be6\u89e3 Kubernetes Service \u7684\u5b9e\u73b0\u539f\u7406",description:"\u6765\u6e90\uff1a\u8be6\u89e3 Kubernetes Service \u7684\u5b9e\u73b0\u539f\u7406",source:"@site/docs/Knowledge/05-\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/2-service.md",sourceDirName:"Knowledge/05-\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3",slug:"/Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/service",permalink:"/docs/Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/service",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"knowledgeSidebar",previous:{title:"\u8be6\u89e3 Kubernetes Pod \u7684\u5b9e\u73b0\u539f\u7406",permalink:"/docs/Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/pod"},next:{title:"\u8be6\u89e3 Kubernetes Volume \u7684\u5b9e\u73b0\u539f\u7406",permalink:"/docs/Knowledge/\u5bb9\u5668\u6280\u672f/kubernetes\u5bf9\u8c61\u8be6\u89e3/volume"}},s={},l=[{value:"\u4e00\u3001\u521b\u5efa\u670d\u52a1",id:"\u4e00\u521b\u5efa\u670d\u52a1",level:2},{value:"1\u3001\u63a7\u5236\u5668",id:"1\u63a7\u5236\u5668",level:3},{value:"1\uff09Service",id:"1service",level:4},{value:"2\uff09Endpoint",id:"2endpoint",level:4},{value:"2\u3001\u4ee3\u7406",id:"2\u4ee3\u7406",level:3},{value:"\u4e8c\u3001\u4ee3\u7406\u6a21\u5f0f",id:"\u4e8c\u4ee3\u7406\u6a21\u5f0f",level:2},{value:"1\u3001userspace",id:"1userspace",level:3},{value:"2\u3001iptables",id:"2iptables",level:3},{value:"3\u3001ipvs",id:"3ipvs",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2},{value:"References",id:"references",level:2}],c={toc:l};function d(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u8be6\u89e3-kubernetes-service-\u7684\u5b9e\u73b0\u539f\u7406"},"\u8be6\u89e3 Kubernetes Service \u7684\u5b9e\u73b0\u539f\u7406"),(0,i.kt)("p",null,"\u6765\u6e90\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://draveness.me/kubernetes-service/"},"\u8be6\u89e3 Kubernetes Service \u7684\u5b9e\u73b0\u539f\u7406")),(0,i.kt)("p",null,"\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86 ",(0,i.kt)("a",{parentName:"p",href:"https://draveness.me/kubernetes-pod"},"Kubernetes \u4e2d Pod \u7684\u5b9e\u73b0\u539f\u7406"),"\uff0cPod \u662f Kubernetes \u4e2d\u975e\u5e38\u8f7b\u91cf\u7684\u5bf9\u8c61\u3002"),(0,i.kt)("p",null,"\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a Pod \u90fd\u53ef\u4ee5\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"podIP")," \u88ab\u76f4\u63a5\u8bbf\u95ee\u7684\uff0c\u4f46\u662f\u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\uff0cKubernetes \u4e2d\u7684 Pod \u662f\u6709\u751f\u547d\u5468\u671f\u7684\u5bf9\u8c61\uff0c\u5c24\u5176\u662f\u88ab ReplicaSet\u3001Deployment \u7b49\u5bf9\u8c61\u7ba1\u7406\u7684 Pod\uff0c\u968f\u65f6\u90fd\u6709\u53ef\u80fd\u7531\u4e8e\u96c6\u7fa4\u7684\u72b6\u6001\u53d8\u5316\u88ab\u9500\u6bc1\u548c\u521b\u5efa\u3002"),(0,i.kt)("p",null,"\u8fd9\u4e5f\u5c31\u9020\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u610f\u601d\u7684\u95ee\u9898\uff0c\u5f53 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u4e00\u4e9b Pod \u9700\u8981\u4e3a\u53e6\u5916\u7684\u4e00\u4e9b Pod \u63d0\u4f9b\u670d\u52a1\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u4e3a\u63d0\u4f9b\u540c\u4e00\u529f\u80fd\u670d\u52a1\u7684\u4e00\u7ec4 Pod \u5efa\u7acb\u4e00\u4e2a\u62bd\u8c61\u5e76\u8ffd\u8e2a\u8fd9\u7ec4\u670d\u52a1\u4e2d\u8282\u70b9\u7684\u5065\u5eb7\u72b6\u6001\u3002"),(0,i.kt)("p",null,"\u8fd9\u4e00\u4e2a\u62bd\u8c61\u5728 Kubernetes \u4e2d\u5176\u5b9e\u5c31\u662f Service\uff0c\u6bcf\u4e00\u4e2a Kubernetes \u7684 Service \u90fd\u662f\u4e00\u7ec4 Pod \u7684\u903b\u8f91\u96c6\u5408\u548c\u8bbf\u95ee\u65b9\u5f0f\u7684\u62bd\u8c61\uff0c\u6211\u4e5f\u53ef\u4ee5\u628a Service \u52a0\u4e0a\u7684\u4e00\u7ec4 Pod \u79f0\u4f5c\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\u3002"),(0,i.kt)("p",null,"\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5206\u4e24\u4e2a\u90e8\u5206\u4ecb\u7ecd Kubernetes \u4e2d Service \u7684\u5b9e\u73b0\u539f\u7406\uff0c\u5728\u7b2c\u4e00\u90e8\u5206\u6211\u4eec\u5c06\u4ecb\u7ecd Kubernetes \u5982\u4f55\u5904\u7406\u670d\u52a1\u7684\u521b\u5efa\uff0c\u7b2c\u4e8c\u90e8\u5206\u4f1a\u4ecb\u7ecd\u5b83\u662f\u5982\u4f55\u8f6c\u53d1\u6765\u81ea\u8282\u70b9\u5185\u90e8\u548c\u5916\u90e8\u7684\u6d41\u91cf\u3002"),(0,i.kt)("h2",{id:"\u4e00\u521b\u5efa\u670d\u52a1"},"\u4e00\u3001\u521b\u5efa\u670d\u52a1"),(0,i.kt)("p",null,"\u5728 Kubernetes \u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Service \u5bf9\u8c61\u9700\u8981\u4e24\u5927\u6a21\u5757\u540c\u65f6\u534f\u4f5c\uff0c\u5176\u4e2d\u4e00\u4e2a\u6a21\u5757\u662f\u63a7\u5236\u5668\uff0c\u5b83\u9700\u8981\u5728\u6bcf\u6b21\u5ba2\u6237\u7aef\u521b\u5efa\u65b0\u7684 Service \u5bf9\u8c61\u65f6\uff0c\u751f\u6210\u5176\u4ed6\u7528\u4e8e\u66b4\u9732\u4e00\u7ec4 Pod \u7684 Kubernetes \u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f Endpoint \u5bf9\u8c61\uff1b\u53e6\u4e00\u4e2a\u6a21\u5757\u662f kube-proxy\uff0c\u5b83\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u4f1a\u6839\u636e Service \u548c Endpoint \u7684\u53d8\u52a8\u6539\u53d8\u8282\u70b9\u4e0a iptables \u6216\u8005 ipvs \u4e2d\u4fdd\u5b58\u7684\u89c4\u5219\u3002"),(0,i.kt)("h3",{id:"1\u63a7\u5236\u5668"},"1\u3001\u63a7\u5236\u5668"),(0,i.kt)("p",null,"\u63a7\u5236\u5668\u6a21\u5757\u5176\u5b9e\u603b\u5171\u6709\u4e24\u4e2a\u90e8\u5206\u76d1\u542c\u4e86 Service \u53d8\u52a8\u7684\u4e8b\u4ef6\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceController"),"\u3001\u53e6\u4e00\u4e2a\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointController"),"\uff0c\u6211\u4eec\u5206\u522b\u6765\u770b\u4e24\u8005\u5982\u4f55\u5e94\u5bf9 Service \u7684\u53d8\u52a8\u3002"),(0,i.kt)("h4",{id:"1service"},"1\uff09Service"),(0,i.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5148\u6765\u770b\u4e00\u4e0b ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceController")," \u5728 Service \u5bf9\u8c61\u53d8\u52a8\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u60c5\uff0c\u6bcf\u5f53\u6709\u670d\u52a1\u88ab\u521b\u5efa\u6216\u8005\u9500\u6bc1\u65f6\uff0cInformer \u90fd\u4f1a\u901a\u77e5 ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceController"),"\uff0c\u5b83\u4f1a\u5c06\u8fd9\u4e9b\u4efb\u52a1\u6295\u5165\u5de5\u4f5c\u961f\u5217\u4e2d\u5e76\u7531\u5176\u672c\u8eab\u542f\u52a8\u7684 Worker \u534f\u7a0b\u6d88\u8d39\uff1a"),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    participant I as Informer\n    participant SC as ServiceController\n    participant Q as WorkQueue\n    participant B as Balancer\n    I->>+SC: Add/Update/DeleteService\n    SC->>Q: Add\n    Q--\x3e>SC: return\n    deactivate SC\n    loop Worker\n        SC->>+Q: Get\n        Q--\x3e>-SC: key\n        SC->>SC: syncService\n        SC->>+B: EnsureLoadBalancer\n        B--\x3e>-SC: LoadBalancerStatus\n    end"}),(0,i.kt)("p",null,"\u4e0d\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceController")," \u5176\u5b9e\u53ea\u5904\u7406\u4e86\u8d1f\u8f7d\u5747\u8861\u7c7b\u578b\u7684 Service \u5bf9\u8c61\uff0c\u5b83\u4f1a\u8c03\u7528\u4e91\u670d\u52a1\u5546\u7684 API \u63a5\u53e3\uff0c\u4e0d\u540c\u7684\u4e91\u670d\u52a1\u5546\u4f1a\u5b9e\u73b0\u4e0d\u540c\u7684\u9002\u914d\u5668\u6765\u521b\u5efa LoadBalancer \u7c7b\u578b\u7684\u8d44\u6e90\u3002"),(0,i.kt)("p",null,"\u6211\u4eec\u4ee5 GCE \u4e3a\u4f8b\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b Google Cloud \u662f\u5982\u4f55\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u7c7b\u578b\u7684 Service\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (g *Cloud) EnsureLoadBalancer(ctx context.Context, clusterName string, svc *v1.Service, nodes []*v1.Node) (*v1.LoadBalancerStatus, error) {\n    loadBalancerName := g.GetLoadBalancerName(ctx, clusterName, svc)\n    desiredScheme := getSvcScheme(svc)\n    clusterID, _ := g.ClusterID.GetID()\n\n    existingFwdRule, _ := g.GetRegionForwardingRule(loadBalancerName, g.region)\n\n    if existingFwdRule != nil {\n        existingScheme := cloud.LbScheme(strings.ToUpper(existingFwdRule.LoadBalancingScheme))\n        if existingScheme != desiredScheme {\n            switch existingScheme {\n            case cloud.SchemeInternal:\n                g.ensureInternalLoadBalancerDeleted(clusterName, clusterID, svc)\n            default:\n                g.ensureExternalLoadBalancerDeleted(clusterName, clusterID, svc)\n            }\n            existingFwdRule = nil\n        }\n    }\n\n    var status *v1.LoadBalancerStatus\n    switch desiredScheme {\n    case cloud.SchemeInternal:\n        status, err = g.ensureInternalLoadBalancer(clusterName, clusterID, svc, existingFwdRule, nodes)\n    default:\n        status, err = g.ensureExternalLoadBalancer(clusterName, clusterID, svc, existingFwdRule, nodes)\n    }\n    return status, err\n}\n")),(0,i.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u4f1a\u5148\u5224\u65ad\u662f\u5426\u5e94\u8be5\u5148\u5220\u9664\u5df2\u7ecf\u5b58\u5728\u7684\u8d1f\u8f7d\u5747\u8861\u8d44\u6e90\uff0c\u968f\u540e\u4f1a\u8c03\u7528\u4e00\u4e2a\u5185\u90e8\u7684\u65b9\u6cd5 ",(0,i.kt)("inlineCode",{parentName:"p"},"ensureExternalLoadBalancer")," \u5728 Google Cloud \u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8d44\u6e90\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8c03\u7528\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u68c0\u67e5\u8f6c\u53d1\u89c4\u5219\u662f\u5426\u5b58\u5728\u5e76\u83b7\u53d6\u5b83\u7684 IP \u5730\u5740\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u786e\u5b9a\u5f53\u524d LoadBalancer \u4f7f\u7528\u7684 IP \u5730\u5740\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u5904\u7406\u9632\u706b\u5899\u7684\u89c4\u5219\u7684\u521b\u5efa\u548c\u66f4\u65b0\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u521b\u5efa\u548c\u5220\u9664\u6307\u5b9a\u7684\u5065\u5eb7\u68c0\u67e5\uff1b")),(0,i.kt)("p",null,"\u60f3\u8981\u4e86\u89e3 GCE \u662f\u5982\u4f55\u5bf9 LoadBalancer \u8fdb\u884c\u652f\u6301\u7684\u53ef\u4ee5\u5728 Kubernetes \u4e2d\u7684 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/tree/master/pkg/cloudprovider/providers/gce"},"gce")," package \u4e2d\u9605\u8bfb\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u8fd9\u91cc\u9762\u5c31\u662f gce \u5bf9\u4e8e\u4e91\u670d\u52a1\u5546\u7279\u5b9a\u8d44\u6e90\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002"),(0,i.kt)("h4",{id:"2endpoint"},"2\uff09Endpoint"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceController")," \u4e3b\u8981\u5904\u7406\u7684\u8fd8\u662f\u4e0e LoadBalancer \u76f8\u5173\u7684\u903b\u8f91\uff0c\u4f46\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointController")," \u7684\u4f5c\u7528\u5c31\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u5728\u4f7f\u7528 Kubernetes \u65f6\u867d\u7136\u5f88\u5c11\u4f1a\u76f4\u63a5\u4e0e Endpoint \u8d44\u6e90\u6253\u4ea4\u9053\uff0c\u4f46\u662f\u5b83\u5374\u662f Kubernetes \u4e2d\u975e\u5e38\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"EndpointController")," \u672c\u8eab\u5e76\u6ca1\u6709\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"Informer")," \u76d1\u542c Endpoint \u8d44\u6e90\u7684\u53d8\u52a8\uff0c\u4f46\u662f\u5b83\u5374\u540c\u65f6\u8ba2\u9605\u4e86 Service \u548c Pod \u8d44\u6e90\u7684\u589e\u5220\u4e8b\u4ef6\uff0c\u5bf9\u4e8e Service \u8d44\u6e90\u6765\u8bb2\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointController")," \u4f1a\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u8fdb\u884c\u5904\u7406\uff1a"),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    participant I as Informer\n    participant EC as EndpointController\n    participant Q as WorkQueue\n    participant PL as PodLister\n    participant C as Client\n    I->>+EC: Add/Update/DeleteService\n    EC->>Q: Add\n    Q--\x3e>EC: return\n    deactivate EC\n    loop Worker\n        EC->>+Q: Get\n        Q--\x3e>-EC: key\n        EC->>+EC: syncService\n        EC->>+PL: ListPod(service.Spec.Selector)\n        PL--\x3e>-EC: Pods\n        loop Every Pod\n            EC->>EC: addEndpointSubset\n        end\n        EC->>+C: Create/UpdateEndpoint\n        C--\x3e>-EC: result\n    end"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"EndpointController")," \u4e2d\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"syncService")," \u65b9\u6cd5\u662f\u7528\u4e8e\u521b\u5efa\u548c\u5220\u9664 Endpoint \u8d44\u6e90\u6700\u91cd\u8981\u7684\u65b9\u6cd5\uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u6211\u4eec\u4f1a\u6839\u636e Service \u5bf9\u8c61\u89c4\u683c\u4e2d\u7684\u9009\u62e9\u5668 Selector \u83b7\u53d6\u96c6\u7fa4\u4e2d\u5b58\u5728\u7684\u6240\u6709 Pod\uff0c\u5e76\u5c06 Service \u548c Pod \u4e0a\u7684\u7aef\u53e3\u8fdb\u884c\u6620\u5c04\u751f\u6210\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointPort")," \u7ed3\u6784\u4f53\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (e *EndpointController) syncService(key string) error {\n    namespace, name, _ := cache.SplitMetaNamespaceKey(key)\n    service, _ := e.serviceLister.Services(namespace).Get(name)\n    pods, _ := e.podLister.Pods(service.Namespace).List(labels.Set(service.Spec.Selector).AsSelectorPreValidated())\n\n    subsets := []v1.EndpointSubset{}\n    for _, pod := range pods {\n        epa := *podToEndpointAddress(pod)\n\n        for i := range service.Spec.Ports {\n            servicePort := &service.Spec.Ports[i]\n\n            portName := servicePort.Name\n            portProto := servicePort.Protocol\n            portNum, _ := podutil.FindPort(pod, servicePort)\n\n            epp := &v1.EndpointPort{Name: portName, Port: int32(portNum), Protocol: portProto}\n            subsets, _, _ = addEndpointSubset(subsets, pod, epa, epp, tolerateUnreadyEndpoints)\n        }\n    }\n    subsets = endpoints.RepackSubsets(subsets)\n\n    currentEndpoints = &v1.Endpoints{\n        ObjectMeta: metav1.ObjectMeta{\n            Name:   service.Name,\n            Labels: service.Labels,\n        },\n    }\n\n    newEndpoints := currentEndpoints.DeepCopy()\n    newEndpoints.Subsets = subsets\n    newEndpoints.Labels = service.Labels\n    e.client.CoreV1().Endpoints(service.Namespace).Create(newEndpoints)\n\n    return nil\n}\n")),(0,i.kt)("p",null,"\u5bf9\u4e8e\u6bcf\u4e00\u4e2a Pod \u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointSubset"),"\uff0c\u5176\u4e2d\u5305\u542b\u4e86 Pod \u7684 IP \u5730\u5740\u548c\u7aef\u53e3\u548c Service \u7684\u89c4\u683c\u4e2d\u6307\u5b9a\u7684\u8f93\u5165\u7aef\u53e3\u548c\u76ee\u6807\u7aef\u53e3\uff0c\u5728\u6700\u540e ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointSubset")," \u7684\u6570\u636e\u4f1a\u88ab\u91cd\u65b0\u6253\u5305\u5e76\u901a\u8fc7\u5ba2\u6237\u7aef\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Endpoint \u8d44\u6e90\u3002"),(0,i.kt)("p",null,"\u5728\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0c\u9664\u4e86 Service \u7684\u53d8\u52a8\u4f1a\u89e6\u53d1 Endpoint \u7684\u6539\u53d8\u4e4b\u5916\uff0cPod \u5bf9\u8c61\u7684\u589e\u5220\u4e5f\u4f1a\u89e6\u53d1 ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointController")," \u4e2d\u7684\u56de\u8c03\u51fd\u6570\u3002"),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    participant I as Informer\n    participant EC as EndpointController\n    participant Q as WorkQueue\n    participant SL as ServiceLister\n    I->>+EC: Add/Update/DeletePod\n    EC->>+SL: GetPodServices\n    SL--\x3e>-EC: []Service\n    EC->>Q: Add\n    Q--\x3e>EC: return\n    deactivate EC"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"getPodServiceMemberships")," \u4f1a\u83b7\u53d6\u8ddf\u5f53\u524d Pod \u6709\u5173\u7684 Service \u5bf9\u8c61\u5e76\u5c06\u6240\u6709\u7684 Service \u5bf9\u8c61\u90fd\u8f6c\u6362\u6210 ",(0,i.kt)("inlineCode",{parentName:"p"},"<namespace>/<name>")," \u7684\u5b57\u7b26\u4e32\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (e *EndpointController) getPodServiceMemberships(pod *v1.Pod) (sets.String, error) {\n    set := sets.String{}\n    services, _ := e.serviceLister.GetPodServices(pod)\n\n    for i := range services {\n        key, _ := controller.KeyFunc(services[i])\n        set.Insert(key)\n    }\n    return set, nil\n}\n")),(0,i.kt)("p",null,"\u8fd9\u4e9b\u670d\u52a1\u6700\u540e\u4f1a\u88ab\u52a0\u5165 ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointController")," \u7684\u961f\u5217\u4e2d\uff0c\u7b49\u5f85\u5b83\u6301\u6709\u7684\u51e0\u4e2a Worker \u5bf9 Service \u8fdb\u884c\u540c\u6b65\u3002"),(0,i.kt)("p",null,"\u8fd9\u4e9b\u5176\u5b9e\u5c31\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointController")," \u7684\u4f5c\u7528\uff0c\u8ba2\u9605 Pod \u548c Service \u5bf9\u8c61\u7684\u53d8\u66f4\uff0c\u5e76\u6839\u636e\u5f53\u524d\u96c6\u7fa4\u4e2d\u7684\u5bf9\u8c61\u751f\u6210 Endpoint \u5bf9\u8c61\u5c06\u4e24\u8005\u8fdb\u884c\u5173\u8054\u3002"),(0,i.kt)("h3",{id:"2\u4ee3\u7406"},"2\u3001\u4ee3\u7406"),(0,i.kt)("p",null,"\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u53e6\u4e00\u4e2a\u8ba2\u9605 Service \u5bf9\u8c61\u53d8\u52a8\u7684\u7ec4\u4ef6\u5c31\u662f kube-proxy \u4e86\uff0c\u6bcf\u5f53 kube-proxy \u5728\u65b0\u7684\u8282\u70b9\u4e0a\u542f\u52a8\u65f6\u90fd\u4f1a\u521d\u59cb\u5316\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceConfig")," \u5bf9\u8c61\uff0c\u5c31\u50cf\u4ecb\u7ecd iptables \u4ee3\u7406\u6a21\u5f0f\u65f6\u63d0\u5230\u7684\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u4f1a\u63a5\u53d7 Service \u7684\u53d8\u66f4\u4e8b\u4ef6\uff1a"),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    participant SCT as ServiceChangeTracker\n    participant SC as ServiceConfig\n    participant P as Proxier\n    participant EC as EndpointConfig\n    participant ECT as EndpointChangeTracker\n    participant SR as SyncRunner\n    SC->>+P: OnServiceAdd/Update/Delete/Synced\n    P->>SCT: Update\n    SCT--\x3e>P: Return ServiceMap\n    deactivate P\n    EC->>+P: OnEndpointsAdd/Update/Delete/Synced\n    ECT--\x3e>P: Return EndpointMap\n    P->>ECT: Update\n    deactivate P\n    loop Every minSyncPeriod ~ syncPeriod\n        SR->>P: syncProxyRules\n    end"}),(0,i.kt)("p",null,"\u8fd9\u4e9b\u53d8\u66f4\u4e8b\u4ef6\u90fd\u4f1a\u88ab\u8ba2\u9605\u4e86\u96c6\u7fa4\u4e2d\u5bf9\u8c61\u53d8\u52a8\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceConfig")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"EndpointConfig")," \u5bf9\u8c61\u63a8\u9001\u7ed9\u542f\u52a8\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"Proxier")," \u5b9e\u4f8b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (c *ServiceConfig) handleAddService(obj interface{}) {\n    service, ok := obj.(*v1.Service)\n    if !ok {\n        return\n    }\n    for i := range c.eventHandlers {\n        c.eventHandlers[i].OnServiceAdd(service)\n    }\n}\n")),(0,i.kt)("p",null,"\u6536\u5230\u4e8b\u4ef6\u53d8\u52a8\u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"Proxier")," \u5b9e\u4f8b\u968f\u540e\u4f1a\u6839\u636e\u542f\u52a8\u65f6\u7684\u914d\u7f6e\u66f4\u65b0 iptables \u6216\u8005 ipvs \u4e2d\u7684\u89c4\u5219\uff0c\u8fd9\u4e9b\u5e94\u7528\u6700\u7ec8\u4f1a\u8d1f\u8d23\u5bf9\u8fdb\u51fa\u7684\u6d41\u91cf\u8fdb\u884c\u8f6c\u53d1\u5e76\u5b8c\u6210\u4e00\u4e9b\u8d1f\u8f7d\u5747\u8861\u76f8\u5173\u7684\u4efb\u52a1\u3002"),(0,i.kt)("h2",{id:"\u4e8c\u4ee3\u7406\u6a21\u5f0f"},"\u4e8c\u3001\u4ee3\u7406\u6a21\u5f0f"),(0,i.kt)("p",null,"\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u8fd0\u884c\u7740\u4e00\u4e2a kube-proxy \u8fdb\u7a0b\uff0c\u8fd9\u4e2a\u8fdb\u7a0b\u4f1a\u8d1f\u8d23\u76d1\u542c Kubernetes \u4e3b\u8282\u70b9\u4e2d Service \u7684\u589e\u52a0\u548c\u5220\u9664\u4e8b\u4ef6\u5e76\u4fee\u6539\u8fd0\u884c\u4ee3\u7406\u7684\u914d\u7f6e\uff0c\u4e3a\u8282\u70b9\u5185\u7684\u5ba2\u6237\u7aef\u63d0\u4f9b\u6d41\u91cf\u7684\u8f6c\u53d1\u548c\u8d1f\u8f7d\u5747\u8861\u7b49\u529f\u80fd\uff0c\u4f46\u662f\u5f53\u524d kube-proxy \u7684\u4ee3\u7406\u6a21\u5f0f\u76ee\u524d\u6765\u770b\u6709\u4e09\u79cd\uff1a"),(0,i.kt)("p",null,"\u8fd9\u4e09\u79cd\u4ee3\u7406\u6a21\u5f0f\u4e2d\u7684\u7b2c\u4e00\u79cd userspace \u5176\u5b9e\u5c31\u662f\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u4ee3\u7406\uff0c\u6240\u6709\u7684\u6d41\u91cf\u6700\u7ec8\u90fd\u4f1a\u901a\u8fc7 kube-proxy \u672c\u8eab\u8f6c\u53d1\u7ed9\u5176\u4ed6\u7684\u670d\u52a1\uff0c\u540e\u4e24\u79cd iptable \u548c ipvs \u90fd\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u80fd\u591f\u4e3a Kubernetes \u96c6\u7fa4\u63d0\u4f9b\u66f4\u52a0\u5f3a\u5927\u7684\u6027\u80fd\u652f\u6301\u3002"),(0,i.kt)("h3",{id:"1userspace"},"1\u3001userspace"),(0,i.kt)("p",null,"\u4f5c\u4e3a\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u4ee3\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a Service \u90fd\u4f1a\u5728\u5f53\u524d\u7684\u8282\u70b9\u4e0a\u5f00\u542f\u4e00\u4e2a\u7aef\u53e3\uff0c\u6240\u6709\u8fde\u63a5\u5230\u5f53\u524d\u4ee3\u7406\u7aef\u53e3\u7684\u8bf7\u6c42\u90fd\u4f1a\u88ab\u8f6c\u53d1\u5230 Service \u80cc\u540e\u7684\u4e00\u7ec4 Pod \u4e0a\uff0c\u5b83\u5176\u5b9e\u4f1a\u5728\u8282\u70b9\u4e0a\u6dfb\u52a0 iptables \u89c4\u5219\uff0c\u901a\u8fc7 iptables \u5c06\u6d41\u91cf\u8f6c\u53d1\u7ed9 kube-proxy \u5904\u7406\u3002"),(0,i.kt)("p",null,"\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e0a\u7684 kube-proxy \u5728\u542f\u52a8\u65f6\u9009\u62e9\u4e86 userspace \u6a21\u5f0f\uff0c\u90a3\u4e48\u6bcf\u5f53\u6709\u65b0\u7684 Service \u88ab\u521b\u5efa\u65f6\uff0ckube-proxy \u5c31\u4f1a\u589e\u52a0\u4e00\u6761 iptables \u8bb0\u5f55\u5e76\u542f\u52a8\u4e00\u4e2a Goroutine\uff0c\u524d\u8005\u7528\u4e8e\u5c06\u8282\u70b9\u4e2d\u670d\u52a1\u5bf9\u5916\u53d1\u51fa\u7684\u6d41\u91cf\u8f6c\u53d1\u7ed9 kube-proxy\uff0c\u518d\u7531\u540e\u8005\u6301\u6709\u7684\u4e00\u7cfb\u5217 Goroutine \u5c06\u6d41\u91cf\u8f6c\u53d1\u5230\u76ee\u6807\u7684 Pod \u4e0a\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"k8s-17",src:t(43013).Z,width:"1200",height:"470"})),(0,i.kt)("p",null,"\u8fd9\u4e00\u7cfb\u5217\u7684\u5de5\u4f5c\u5927\u90fd\u662f\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"OnServiceAdd")," \u88ab\u89e6\u53d1\u65f6\u4e2d\u5b8c\u6210\u7684\uff0c\u6b63\u5982\u4e0a\u9762\u6240\u8bf4\u7684\uff0c\u8be5\u65b9\u6cd5\u4f1a\u8c03\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"mergeService")," \u5c06\u4f20\u5165\u670d\u52a1 Service \u7684\u7aef\u53e3\u53d8\u6210\u4e00\u6761 iptables \u7684\u914d\u7f6e\u547d\u4ee4\u4e3a\u5f53\u524d\u8282\u70b9\u589e\u52a0\u4e00\u6761\u89c4\u5219\uff0c\u540c\u65f6\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"addServiceOnPort")," \u65b9\u6cd5\u4e2d\u542f\u52a8\u4e00\u4e2a TCP \u6216 UDP \u7684 Socket\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func (proxier *Proxier) mergeService(service *v1.Service) sets.String {\n    svcName := types.NamespacedName{Namespace: service.Namespace, Name: service.Name}\n    existingPorts := sets.NewString()\n    for i := range service.Spec.Ports {\n        servicePort := &service.Spec.Ports[i]\n        serviceName := proxy.ServicePortName{NamespacedName: svcName, Port: servicePort.Name}\n        existingPorts.Insert(servicePort.Name)\n        info, exists := proxier.getServiceInfo(serviceName)\n        if exists {\n            proxier.closePortal(serviceName, info)\n            proxier.stopProxy(serviceName, info)\n        }\n        proxyPort,  := proxier.proxyPorts.AllocateNext()\n\n        serviceIP := net.ParseIP(service.Spec.ClusterIP)\n        info, _ = proxier.addServiceOnPort(serviceName, servicePort.Protocol, proxyPort, proxier.udpIdleTimeout)\n        info.portal.ip = serviceIP\n        info.portal.port = int(servicePort.Port)\n        info.externalIPs = service.Spec.ExternalIPs\n        info.loadBalancerStatus = *service.Status.LoadBalancer.DeepCopy()\n        info.nodePort = int(servicePort.NodePort)\n        info.sessionAffinityType = service.Spec.SessionAffinity\n\n        proxier.openPortal(serviceName, info)\n        proxier.loadBalancer.NewService(serviceName, info.sessionAffinityType, info.stickyMaxAgeSeconds)\n    }\n\n    return existingPorts\n}\n")),(0,i.kt)("p",null,"\u8fd9\u4e2a\u542f\u52a8\u7684\u8fdb\u7a0b\u4f1a\u76d1\u542c\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u8f6c\u53d1\u81ea\u6240\u6709\u8fdb\u7a0b\u7684 TCP \u548c UDP \u8bf7\u6c42\u5e76\u5c06\u8fd9\u4e9b\u6570\u636e\u5305\u53d1\u9001\u7ed9\u76ee\u6807\u7684 Pod \u5bf9\u8c61\u3002"),(0,i.kt)("p",null,"\u5728\u7528\u6237\u7a7a\u95f4\u6a21\u5f0f\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u8fde\u63a5\u88ab\u76ee\u6807\u670d\u52a1\u62d2\u7edd\uff0c\u6211\u4eec\u7684\u4ee3\u7406\u670d\u52a1\u80fd\u591f\u91cd\u65b0\u5c1d\u8bd5\u8fde\u63a5\u5176\u4ed6\u7684\u670d\u52a1\uff0c\u9664\u6b64\u4e4b\u5916\u7528\u6237\u7a7a\u95f4\u6a21\u5f0f\u5e76\u6ca1\u6709\u592a\u591a\u7684\u4f18\u52bf\u3002"),(0,i.kt)("h3",{id:"2iptables"},"2\u3001iptables"),(0,i.kt)("p",null,"\u53e6\u4e00\u79cd\u5e38\u89c1\u7684\u4ee3\u7406\u6a21\u5f0f\u5c31\u662f\u76f4\u63a5\u4f7f\u7528 iptables \u8f6c\u53d1\u5f53\u524d\u8282\u70b9\u4e0a\u7684\u5168\u90e8\u6d41\u91cf\uff0c\u8fd9\u79cd\u8131\u79bb\u4e86\u7528\u6237\u7a7a\u95f4\u5728\u5185\u6838\u7a7a\u95f4\u4e2d\u5b9e\u73b0\u8f6c\u53d1\u7684\u65b9\u5f0f\u80fd\u591f\u6781\u5927\u5730\u63d0\u9ad8 proxy \u7684\u6548\u7387\uff0c\u589e\u52a0 kube-proxy \u7684\u541e\u5410\u91cf\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"k8s-18",src:t(2845).Z,width:"1200",height:"470"})),(0,i.kt)("p",null,"iptables \u4f5c\u4e3a\u4e00\u79cd\u4ee3\u7406\u6a21\u5f0f\uff0c\u5b83\u540c\u6837\u5b9e\u73b0\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"OnServiceUpdate"),"\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"OnEndpointsUpdate")," \u7b49\u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5206\u522b\u8c03\u7528\u76f8\u5e94\u7684\u53d8\u66f4\u8ffd\u8e2a\u5bf9\u8c61\u3002"),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    participant SC as ServiceConfig\n    participant P as Proxier\n    participant SCT as ServiceChangeTracker\n    participant SR as SyncRunner\n    participant I as iptable\n    SC->>+P: OnServiceAdd\n    P->>P: OnServiceUpdate\n    P->>SCT: Update\n    SCT--\x3e>P: Return ServiceMap\n    deactivate P\n    loop Every minSyncPeriod ~ syncPeriod\n        SR->>+P: syncProxyRules\n        P->>I: UpdateChain\n        P->>P: writeLine x N\n        P->>I: RestoreAll\n        deactivate P\n    end"}),(0,i.kt)("p",null,"\u53d8\u66f4\u8ffd\u8e2a\u5bf9\u8c61\u4f1a\u6839\u636e ",(0,i.kt)("inlineCode",{parentName:"p"},"Service")," \u6216 ",(0,i.kt)("inlineCode",{parentName:"p"},"Endpoint")," \u5bf9\u8c61\u7684\u524d\u540e\u53d8\u5316\u6539\u53d8 ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceChangeTracker")," \u672c\u8eab\u7684\u72b6\u6001\uff0c\u8fd9\u4e9b\u53d8\u66f4\u4f1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u901a\u8fc7\u4e00\u4e2a 700 \u884c\u7684\u5de8\u5927\u65b9\u6cd5 ",(0,i.kt)("inlineCode",{parentName:"p"},"syncProxyRules")," \u540c\u6b65\uff0c\u5728\u8fd9\u91cc\u5c31\u4e0d\u4ecb\u7ecd\u8fd9\u4e2a\u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u4e86\uff0c\u5b83\u7684\u4e3b\u8981\u529f\u80fd\u5c31\u662f\u6839\u636e ",(0,i.kt)("inlineCode",{parentName:"p"},"Service")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"Endpoint")," \u5bf9\u8c61\u7684\u53d8\u66f4\u751f\u6210\u4e00\u6761\u4e00\u6761\u7684 iptables \u89c4\u5219\uff0c\u6bd4\u8f83\u611f\u5174\u8da3\u7684\u8bfb\u8005\uff0c\u53ef\u4ee5\u70b9\u51fb ",(0,i.kt)("a",{parentName:"p",href:"https://sourcegraph.com/github.com/kubernetes/kubernetes@master/-/blob/pkg/proxy/iptables/proxier.go#L640-1379"},"proxier.go#L640-1379")," \u67e5\u770b\u4ee3\u7801\u3002"),(0,i.kt)("p",null,"\u5f53\u6211\u4eec\u4f7f\u7528 iptables \u7684\u65b9\u5f0f\u542f\u52a8\u8282\u70b9\u4e0a\u7684\u4ee3\u7406\u65f6\uff0c\u6240\u6709\u7684\u6d41\u91cf\u90fd\u4f1a\u5148\u7ecf\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"PREROUTING")," \u6216\u8005 ",(0,i.kt)("inlineCode",{parentName:"p"},"OUTPUT")," \u94fe\uff0c\u968f\u540e\u8fdb\u5165 Kubernetes \u81ea\u5b9a\u4e49\u7684\u94fe\u5165\u53e3 KUBE-SERVICES\u3001\u5355\u4e2a Service \u5bf9\u5e94\u7684\u94fe ",(0,i.kt)("inlineCode",{parentName:"p"},"KUBE-SVC-XXXX")," \u4ee5\u53ca\u6bcf\u4e2a Pod \u5bf9\u5e94\u7684\u94fe ",(0,i.kt)("inlineCode",{parentName:"p"},"KUBE-SEP-XXXX"),"\uff0c\u7ecf\u8fc7\u8fd9\u4e9b\u94fe\u7684\u5904\u7406\uff0c\u6700\u7ec8\u624d\u80fd\u591f\u8bbf\u95ee\u5f53\u4e00\u4e2a\u670d\u52a1\u7684\u771f\u5b9e IP \u5730\u5740\u3002"),(0,i.kt)("p",null,"\u867d\u7136\u76f8\u6bd4\u4e8e\u7528\u6237\u7a7a\u95f4\u6765\u8bf4\uff0c\u76f4\u63a5\u8fd0\u884c\u5728\u5185\u6838\u6001\u7684 iptables \u80fd\u591f\u589e\u52a0\u4ee3\u7406\u7684\u541e\u5410\u91cf\uff0c\u4f46\u662f\u5f53\u96c6\u7fa4\u4e2d\u7684\u8282\u70b9\u6570\u91cf\u975e\u5e38\u591a\u65f6\uff0ciptables \u5e76\u4e0d\u80fd\u8fbe\u5230\u751f\u4ea7\u7ea7\u522b\u7684\u53ef\u7528\u6027\u8981\u6c42\uff0c\u6bcf\u6b21\u5bf9\u89c4\u5219\u8fdb\u884c\u5339\u914d\u65f6\u90fd\u4f1a\u904d\u5386 iptables \u4e2d\u7684\u6240\u6709 Service \u94fe\u3002"),(0,i.kt)("p",null,"\u89c4\u5219\u7684\u66f4\u65b0\u4e5f\u4e0d\u662f\u589e\u91cf\u5f0f\u7684\uff0c\u5f53\u96c6\u7fa4\u4e2d\u7684 Service \u8fbe\u5230 5,000 \u4e2a\uff0c\u6bcf\u589e\u52a0\u4e00\u6761\u89c4\u5219\u90fd\u9700\u8981\u8017\u65f6 11min\uff0c\u5f53\u96c6\u7fa4\u4e2d\u7684 Service \u8fbe\u5230 20,000 \u4e2a\u65f6\uff0c\u6bcf\u589e\u52a0\u4e00\u6761\u89c4\u5219\u90fd\u9700\u8981\u6d88\u8017 5h \u7684\u65f6\u95f4\uff0c\u8fd9\u4e5f\u5c31\u662f\u544a\u8bc9\u6211\u4eec\u5728\u5927\u89c4\u6a21\u96c6\u7fa4\u4e2d\u4f7f\u7528 iptables \u4f5c\u4e3a\u4ee3\u7406\u6a21\u5f0f\u662f\u5b8c\u5168\u4e0d\u53ef\u7528\u7684\u3002"),(0,i.kt)("h3",{id:"3ipvs"},"3\u3001ipvs"),(0,i.kt)("p",null,"ipvs \u5c31\u662f\u7528\u4e8e\u89e3\u51b3\u5728\u5927\u91cf Service \u65f6\uff0ciptables \u89c4\u5219\u540c\u6b65\u53d8\u5f97\u4e0d\u53ef\u7528\u7684\u6027\u80fd\u95ee\u9898\u3002\u4e0e iptables \u6bd4\u8f83\u50cf\u7684\u662f\uff0cipvs \u7684\u5b9e\u73b0\u867d\u7136\u4e5f\u57fa\u4e8e netfilter \u7684\u94a9\u5b50\u51fd\u6570\uff0c\u4f46\u662f\u5b83\u5374\u4f7f\u7528\u54c8\u5e0c\u8868\u4f5c\u4e3a\u5e95\u5c42\u7684\u6570\u636e\u7ed3\u6784\u5e76\u4e14\u5de5\u4f5c\u5728\u5185\u6838\u6001\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4 ipvs \u5728\u91cd\u5b9a\u5411\u6d41\u91cf\u548c\u540c\u6b65\u4ee3\u7406\u89c4\u5219\u6709\u7740\u66f4\u597d\u7684\u6027\u80fd\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"k8s-19",src:t(95354).Z,width:"1200",height:"470"})),(0,i.kt)("p",null,"\u5728\u5904\u7406 Service \u7684\u53d8\u5316\u65f6\uff0cipvs \u5305\u548c iptables \u5176\u5b9e\u5c31\u6709\u975e\u5e38\u76f8\u4f3c\u4e86\uff0c\u5b83\u4eec\u90fd\u540c\u6837\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceChangeTracker")," \u5bf9\u8c61\u6765\u8ffd\u8e2a\u53d8\u66f4\uff0c\u53ea\u662f\u4e24\u8005\u5bf9\u4e8e\u540c\u6b65\u53d8\u66f4\u7684\u65b9\u6cd5 ",(0,i.kt)("inlineCode",{parentName:"p"},"syncProxyRules")," \u5b9e\u73b0\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\u3002"),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    participant P as Proxier\n    participant SR as SyncRunner\n    participant IP as ipvs\n    participant I as iptable\n    loop Every minSyncPeriod ~ syncPeriod\n        SR->>+P: syncProxyRules\n        P->>P: writeLine(iptable)\n        P->>IP: Add/UpdateVirtualServer(syncService)\n        IP--\x3e>P: result\n        P->>IP: AddRealServer(syncEndpoint)\n        IP--\x3e>P: result\n        P->>I: RestoreAll\n        deactivate P\n    end"}),(0,i.kt)("p",null,"\u6211\u4eec\u4ece ipvs \u7684\u6e90\u4ee3\u7801\u548c\u4e0a\u8ff0\u7684\u65f6\u5e8f\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cKubernetes ipvs \u7684\u5b9e\u73b0\u5176\u5b9e\u662f\u4f9d\u8d56\u4e8e iptables \u7684\uff0c\u540e\u8005\u80fd\u591f\u8f85\u52a9\u5b83\u5b8c\u6210\u4e00\u4e9b\u529f\u80fd\uff0c\u4f7f\u7528 ipvs \u76f8\u6bd4 iptables \u80fd\u591f\u51cf\u5c11\u8282\u70b9\u4e0a\u7684 iptables \u89c4\u5219\u6570\u91cf\uff0c\u8fd9\u4e5f\u662f\u56e0\u4e3a ipvs \u63a5\u7ba1\u4e86\u539f\u6765\u5b58\u50a8\u5728 iptables \u4e2d\u7684\u89c4\u5219\u3002"),(0,i.kt)("p",null,"\u9664\u4e86\u80fd\u591f\u63d0\u5347\u6027\u80fd\u4e4b\u5916\uff0cipvs \u4e5f\u63d0\u4f9b\u4e86\u591a\u79cd\u7c7b\u578b\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\uff0c\u9664\u4e86\u6700\u5e38\u89c1\u7684 Round-Robin \u4e4b\u5916\uff0c\u8fd8\u652f\u6301\u6700\u5c0f\u8fde\u63a5\u3001\u76ee\u6807\u54c8\u5e0c\u3001\u6700\u5c0f\u5ef6\u8fdf\u7b49\u7b97\u6cd5\uff0c\u80fd\u591f\u5f88\u597d\u5730\u63d0\u5347\u8d1f\u8f7d\u5747\u8861\u7684\u6548\u7387\u3002"),(0,i.kt)("p",null,"\u4e09\u79cd\u4e0d\u540c\u7684\u4ee3\u7406\u6a21\u5f0f\u5176\u5b9e\u662f\u4e00\u4e2a\u9010\u6e10\u6f14\u5316\u7684\u8fc7\u7a0b\uff0c\u4ece\u6700\u5f00\u59cb\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u9700\u8981\u300e\u624b\u52a8\u300f\u76d1\u542c\u7aef\u53e3\u5e76\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u8f6c\u53d1\u7684\u7528\u6237\u7a7a\u95f4\u6a21\u5f0f\uff0c\u5230\u4e4b\u540e\u4f7f\u7528\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u7684 iptables \u6a21\u5f0f\uff0c\u518d\u5230 Kubernetes 1.9 \u7248\u672c\u4e2d\u51fa\u73b0\u7684 ipvs \u6a21\u5f0f\uff0c\u51e0\u79cd\u4e0d\u540c\u7684\u6a21\u5f0f\u5728\u5927\u91cf Service \u5b58\u5728\u65f6\u6709\u6570\u91cf\u7ea7\u522b\u6548\u7387\u5dee\u5f02\u3002"),(0,i.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,i.kt)("p",null,"Kubernetes \u4e2d\u7684 Service \u5c06\u4e00\u7ec4 Pod \u4ee5\u7edf\u4e00\u7684\u5f62\u5f0f\u5bf9\u5916\u66b4\u9732\u6210\u4e00\u4e2a\u670d\u52a1\uff0c\u5b83\u5229\u7528\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u7684 iptables \u6216\u8005 ipvs \u9ad8\u6548\u5730\u8f6c\u53d1\u6765\u81ea\u8282\u70b9\u5185\u90e8\u548c\u5916\u90e8\u7684\u6d41\u91cf\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4f5c\u4e3a\u975e\u5e38\u91cd\u8981\u7684 Kubernetes \u5bf9\u8c61\uff0cService \u4e0d\u4ec5\u5728\u903b\u8f91\u4e0a\u63d0\u4f9b\u4e86\u5fae\u670d\u52a1\u7684\u6982\u5ff5\uff0c\u8fd8\u5f15\u5165 LoadBalancer \u7c7b\u578b\u7684 Service \u65e0\u7f1d\u5bf9\u63a5\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u590d\u6742\u8d44\u6e90\u3002"),(0,i.kt)("p",null,"\u7406\u89e3 Kubernetes \u7684 Service \u5bf9\u8c61\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u68b3\u7406\u96c6\u7fa4\u5185\u90e8\u7684\u7f51\u7edc\u62d3\u6251\u5173\u7cfb\uff0c\u4e5f\u80fd\u8ba9\u6211\u4eec\u66f4\u6e05\u695a\u5b83\u662f\u5982\u4f55\u5728\u96c6\u7fa4\u5185\u90e8\u5b9e\u73b0\u670d\u52a1\u53d1\u73b0\u3001\u8d1f\u8f7d\u5747\u8861\u7b49\u529f\u80fd\u7684\uff0c\u5728\u540e\u9762\u7684\u6587\u7ae0\u4e2d\u6211\u4eec\u4f1a\u5c55\u5f00\u4ecb\u7ecd kube-proxy \u7684\u4f5c\u7528\u548c\u5b9e\u73b0\u3002"),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://sq.163yun.com/blog/article/174981072898940928"},"\u6d45\u8c08 kubernetes service \u90a3\u4e9b\u4e8b\uff08\u4e0a\u7bc7\uff09")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://containerops.org/2017/01/30/kubernetes-services-and-ingress-under-x-ray/"},"Kubernetes Services and Ingress Under X-ray")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/services-networking/service/"},"Services - Kubernetes"))))}d.isMDXComponent=!0},43013:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/k8s-17-29dce93a702b7cbe34dad16bc855b0df.png"},2845:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/k8s-18-eb68b2e069ef0101872b0cbbd487833e.png"},95354:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/k8s-19-37bf9293d375128489a6ce26784898c8.png"}}]);
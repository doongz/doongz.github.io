"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[42906],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),s=a,k=d["".concat(u,".").concat(s)]||d[s]||m[s]||l;return t?r.createElement(k,i(i({ref:n},p),{},{components:t})):r.createElement(k,i({ref:n},p))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=s;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},33684:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const l={},i="\u5e38\u7528\u51fd\u6570",o={unversionedId:"Skill/C++/\u5e38\u7528\u51fd\u6570",id:"Skill/C++/\u5e38\u7528\u51fd\u6570",title:"\u5e38\u7528\u51fd\u6570",description:"\u4e00\u3001\u5185\u7f6e\u51fd\u6570",source:"@site/docs/Skill/C++/\u5e38\u7528\u51fd\u6570.md",sourceDirName:"Skill/C++",slug:"/Skill/C++/\u5e38\u7528\u51fd\u6570",permalink:"/docs/Skill/C++/\u5e38\u7528\u51fd\u6570",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"skillSidebar",previous:{title:"printf \u5f69\u8272",permalink:"/docs/Skill/C++/\u6269\u5145\u77e5\u8bc6/printf\u5f69\u8272"},next:{title:"Golang \u6761\u4ef6\u5224\u65ad",permalink:"/docs/Skill/Golang/\u57fa\u7840\u77e5\u8bc6/\u6761\u4ef6\u5224\u65ad"}},u={},c=[{value:"\u4e00\u3001\u5185\u7f6e\u51fd\u6570",id:"\u4e00\u5185\u7f6e\u51fd\u6570",level:2},{value:"1\u3001swap()",id:"1swap",level:3},{value:"2\u3001max()\u3001min()",id:"2maxmin",level:3},{value:"3\u3001rans()",id:"3rans",level:3},{value:"\u4e8c\u3001numeric",id:"\u4e8cnumeric",level:2},{value:"1\u3001accumulate() \u6c42\u548c",id:"1accumulate-\u6c42\u548c",level:3},{value:"2\u3001iota() \u7d2f\u52a0\u586b\u5145",id:"2iota-\u7d2f\u52a0\u586b\u5145",level:3},{value:"\u4e09\u3001cmath \u6570\u5b66\u51fd\u6570",id:"\u4e09cmath-\u6570\u5b66\u51fd\u6570",level:2}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u5e38\u7528\u51fd\u6570"},"\u5e38\u7528\u51fd\u6570"),(0,a.kt)("h2",{id:"\u4e00\u5185\u7f6e\u51fd\u6570"},"\u4e00\u3001\u5185\u7f6e\u51fd\u6570"),(0,a.kt)("p",null,"\u4e0d\u7528\u5f15\u5165\u5934\u6587\u4ef6"),(0,a.kt)("h3",{id:"1swap"},"1\u3001swap()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <vector>\nusing namespace std;\n\nvoid show(vector<int> vec) {\n    for (int i = 0; i < vec.size(); i++) {\n        cout << vec[i] << " ";\n    }\n    cout << endl;\n}\n\nint main() {\n    vector<int> vec1 = {1, 2, 3};\n    vector<int> vec2 = {4, 5, 6};\n    swap(vec1, vec2);\n    show(vec1);  // 4 5 6\n    show(vec2);  // 1 2 3\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"2maxmin"},"2\u3001max()\u3001min()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nint main() {\n    int res1 = max(5, 4);\n    cout << res1 << endl;  // 5\n\n    int res2 = min(1, min(2, 3));\n    cout << res2 << endl;  // 1\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"3rans"},"3\u3001rans()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main() {\n\n    int r1 = rand() % 5;  // \u5728 [0, 4] \u4e2d\u7684 5 \u4e2a\u6570\uff0c\u968f\u673a\u53d6\u503c\n    cout << r1 << endl;\n\n    int n = 10, k = 5;\n    int r2 = k + rand() % (n-k);  // \u5728 [k, n) \u4e2d\u7684 5 \u4e2a\u6570\uff0c[5, 10)\u968f\u673a\u53d6\u503c\n    cout << r2 << endl;\n\n    // \u5728 [0, k) \u8303\u56f4\u5185\u8fdb\u884c\u968f\u673a\uff0c\u82e5\u968f\u673a\u5230\u7ed3\u679c\u4e3a 0\uff08\u53d1\u751f\u6982\u7387\u4e3a 1/k\uff09\n    k = 6;\n    if (rand() % k == 0) cout << "do something";\n\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"\u4e8cnumeric"},"\u4e8c\u3001numeric"),(0,a.kt)("p",null,"\u9700\u5f15\u5165\u5934\u6587\u4ef6 ",(0,a.kt)("inlineCode",{parentName:"p"},"#include <iostream>")),(0,a.kt)("h3",{id:"1accumulate-\u6c42\u548c"},"1\u3001accumulate() \u6c42\u548c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <numeric>\n#include <vector>\nusing namespace std;\n\nint main() {\n    vector<int> nums = {1, 2, 3, 4, 5};\n    int sum = accumulate(nums.begin(), nums.end(), 0); // 0LL\n    cout << sum << endl;  // 15\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"2iota-\u7d2f\u52a0\u586b\u5145"},"2\u3001iota() \u7d2f\u52a0\u586b\u5145"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <numeric>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    vector<int> parent(5);  // 0 0 0 0 0\n    iota(parent.begin(), parent.end(), 0);\n    for (int i = 0; i < parent.size(); i++) {\n        cout << parent[i] << " ";\n    }\n    // 0 1 2 3 4\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"\u4e09cmath-\u6570\u5b66\u51fd\u6570"},"\u4e09\u3001cmath \u6570\u5b66\u51fd\u6570"),(0,a.kt)("p",null,"\u9700\u8981\u5f15\u7528\u6570\u5b66\u5934\u6587\u4ef6 ",(0,a.kt)("inlineCode",{parentName:"p"},"<cmath>")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"\u51fd\u6570"),(0,a.kt)("th",{parentName:"tr",align:null},"\u63cf\u8ff0"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"int abs(int);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u6574\u6570\u7684\u7edd\u5bf9\u503c")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double fabs(double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u6d6e\u70b9\u6570\u7684\u7edd\u5bf9\u503c")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double floor(double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u4e00\u4e2a\u5c0f\u4e8e\u6216\u7b49\u4e8e\u4f20\u5165\u53c2\u6570\u7684\u6700\u5927\u6574\u6570")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double sqrt(double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u53c2\u6570\u7684\u5e73\u65b9\u6839")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double pow(double, double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a x\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a y\uff0c\u8fd4\u56de x \u7684 y \u6b21\u65b9")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double hypot(double, double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u4e24\u4e2a\u53c2\u6570\u7684\u5e73\u65b9\u603b\u548c\u7684\u5e73\u65b9\u6839\uff0c\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u4e24\u4e2a\u76f4\u89d2\u8fb9\u6c42\u659c\u8fb9")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double log(double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u53c2\u6570\u7684\u81ea\u7136\u5bf9\u6570")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double sin(double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u5f27\u5ea6\u89d2\uff08double \u578b\uff09\u7684\u6b63\u5f26")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double cos(double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u5f27\u5ea6\u89d2\uff08double \u578b\uff09\u7684\u4f59\u5f26")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"double tan(double);"),(0,a.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u5f27\u5ea6\u89d2\uff08double \u578b\uff09\u7684\u6b63\u5207")))),(0,a.kt)("p",null,"\u751f\u6210\u968f\u673a\u6570\u3002",(0,a.kt)("strong",{parentName:"p"},"rand()"),"\uff0c\u8be5\u51fd\u6570\u53ea\u8fd4\u56de\u4e00\u4e2a\u4f2a\u968f\u673a\u6570\uff0c\u751f\u6210\u968f\u673a\u6570\u4e4b\u524d\u5fc5\u987b\u5148\u8c03\u7528 ",(0,a.kt)("strong",{parentName:"p"},"srand()")," \u51fd\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <ctime>\n#include <cstdlib>\n\nusing namespace std;\n\nint main()\n{\n    int i, j;\n\n    // \u8bbe\u7f6e\u79cd\u5b50\n    srand((unsigned)time(NULL));\n\n    /* \u751f\u6210 10 \u4e2a\u968f\u673a\u6570 */\n    for (i = 0; i < 10; i++)\n    {\n        // \u751f\u6210\u5b9e\u9645\u7684\u968f\u673a\u6570\n        j = rand();\n        cout << "\u968f\u673a\u6570\uff1a " << j << endl;\n    }\n\n    return 0;\n}\n')))}d.isMDXComponent=!0}}]);
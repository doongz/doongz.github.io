"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[34029],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=c(r),f=o,d=s["".concat(i,".").concat(f)]||s[f]||m[f]||a;return r?n.createElement(d,l(l({ref:t},u),{},{components:r})):n.createElement(d,l({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=f;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[s]="string"==typeof e?e:o,l[1]=p;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},76848:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={},l=void 0,p={unversionedId:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u6240\u6709\u8def\u5f84>-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84",id:"Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u6240\u6709\u8def\u5f84>-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84",title:"<\u6240\u6709\u8def\u5f84>-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84",description:"\u9898\u76ee\uff1a257. \u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84",source:"@site/docs/Algorithm/6-\u7cfb\u5217\u9898\u76ee/06-\u6811\u7684\u8def\u5f84\u95ee\u9898/257-<\u6240\u6709\u8def\u5f84>-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84.md",sourceDirName:"Algorithm/6-\u7cfb\u5217\u9898\u76ee/06-\u6811\u7684\u8def\u5f84\u95ee\u9898",slug:"/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u6240\u6709\u8def\u5f84>-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u6240\u6709\u8def\u5f84>-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84",draft:!1,tags:[],version:"current",sidebarPosition:257,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u4efb\u610f\u8282\u70b9\u5230\u4efb\u610f\u8282\u70b9>-\u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u4efb\u610f\u8282\u70b9\u5230\u4efb\u610f\u8282\u70b9>-\u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c"},next:{title:"<\u524d\u7f00\u548c>-\u8def\u5f84\u603b\u548cIII",permalink:"/docs/Algorithm/\u7cfb\u5217\u9898\u76ee/\u6811\u7684\u8def\u5f84\u95ee\u9898/<\u524d\u7f00\u548c>-\u8def\u5f84\u603b\u548cIII"}},i={},c=[],u={toc:c};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u9898\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/binary-tree-paths/"},"257. \u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84")),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," \uff0c\u6309 ",(0,o.kt)("strong",{parentName:"p"},"\u4efb\u610f\u987a\u5e8f")," \uff0c\u8fd4\u56de\u6240\u6709\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u53f6\u5b50\u8282\u70b9")," \u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 1\uff1a")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/03/12/paths-tree.jpg",alt:"img"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1aroot = [1,2,3,null,5]\n\u8f93\u51fa\uff1a["1->2->5","1->3"]\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u793a\u4f8b 2\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165\uff1aroot = [1]\n\u8f93\u51fa\uff1a["1"]\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6811\u4e2d\u8282\u70b9\u7684\u6570\u76ee\u5728\u8303\u56f4 ",(0,o.kt)("inlineCode",{parentName:"li"},"[1, 100]")," \u5185"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-100 <= Node.val <= 100"))),(0,o.kt)("hr",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c++"},'class Solution {\npublic:\n    vector<string> ans;\n\n    void dfs(TreeNode* cur, string path) {\n        if (cur == nullptr) return;\n        path += to_string(cur->val);\n        if (!cur->left && !cur->right) {\n            ans.push_back(path);\n            return;\n        }\n        path += "->";\n        if (cur->left) dfs(cur->left, path);\n        if (cur->right) dfs(cur->right, path);\n    }\n\n    vector<string> binaryTreePaths(TreeNode* root) {\n        dfs(root, "");\n        return ans;\n    }\n};\n')))}s.isMDXComponent=!0}}]);
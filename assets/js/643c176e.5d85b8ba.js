"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[93349],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),d=i,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},29448:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(87462),i=(t(67294),t(3905));const a={},o=void 0,l={unversionedId:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740",id:"Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740",title:"<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740",description:"93. \u590d\u539f IP \u5730\u5740",source:"@site/docs/Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS/93-<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740.md",sourceDirName:"Algorithm/4-\u56fe\u8bba/\u4f8b\u9898-DFS",slug:"/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u7ec6\u8282\u9898>-\u590d\u539fIP\u5730\u5740",draft:!1,tags:[],version:"current",sidebarPosition:93,frontMatter:{},sidebar:"docsSidebar",previous:{title:"<\u591a\u8f6e\u56de\u6eaf>-\u5355\u8bcd\u641c\u7d22",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u591a\u8f6e\u56de\u6eaf>-\u5355\u8bcd\u641c\u7d22"},next:{title:"<\u56de\u6eaf>-\u5206\u5272\u56de\u6587\u4e32",permalink:"/docs/Algorithm/\u56fe\u8bba/\u4f8b\u9898-DFS/<\u56de\u6eaf>-\u5206\u5272\u56de\u6587\u4e32"}},s={},p=[{value:"93. \u590d\u539f IP \u5730\u5740",id:"93-\u590d\u539f-ip-\u5730\u5740",level:4}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"93-\u590d\u539f-ip-\u5730\u5740"},(0,i.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/restore-ip-addresses/"},"93. \u590d\u539f IP \u5730\u5740")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6709\u6548 IP \u5730\u5740")," \u6b63\u597d\u7531\u56db\u4e2a\u6574\u6570\uff08\u6bcf\u4e2a\u6574\u6570\u4f4d\u4e8e ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," \u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"255")," \u4e4b\u95f4\u7ec4\u6210\uff0c\u4e14\u4e0d\u80fd\u542b\u6709\u524d\u5bfc ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),"\uff09\uff0c\u6574\u6570\u4e4b\u95f4\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"'.'")," \u5206\u9694\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4f8b\u5982\uff1a",(0,i.kt)("inlineCode",{parentName:"li"},'"0.1.2.201"')," \u548c",(0,i.kt)("inlineCode",{parentName:"li"},' "192.168.1.1"')," \u662f ",(0,i.kt)("strong",{parentName:"li"},"\u6709\u6548")," IP \u5730\u5740\uff0c\u4f46\u662f",(0,i.kt)("inlineCode",{parentName:"li"},'"0.011.255.245"'),"\u3001",(0,i.kt)("inlineCode",{parentName:"li"},'"192.168.1.312"')," \u548c ",(0,i.kt)("inlineCode",{parentName:"li"},'"192.168@1.1"')," \u662f ",(0,i.kt)("strong",{parentName:"li"},"\u65e0\u6548")," IP \u5730\u5740\u3002")),(0,i.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b\u6570\u5b57\u7684\u5b57\u7b26\u4e32 ",(0,i.kt)("inlineCode",{parentName:"p"},"s")," \uff0c\u7528\u4ee5\u8868\u793a\u4e00\u4e2a IP \u5730\u5740\uff0c\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684",(0,i.kt)("strong",{parentName:"p"},"\u6709\u6548 IP \u5730\u5740"),"\uff0c\u8fd9\u4e9b\u5730\u5740\u53ef\u4ee5\u901a\u8fc7\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"s")," \u4e2d\u63d2\u5165 ",(0,i.kt)("inlineCode",{parentName:"p"},"'.'")," \u6765\u5f62\u6210\u3002\u4f60 ",(0,i.kt)("strong",{parentName:"p"},"\u4e0d\u80fd")," \u91cd\u65b0\u6392\u5e8f\u6216\u5220\u9664 ",(0,i.kt)("inlineCode",{parentName:"p"},"s")," \u4e2d\u7684\u4efb\u4f55\u6570\u5b57\u3002\u4f60\u53ef\u4ee5\u6309 ",(0,i.kt)("strong",{parentName:"p"},"\u4efb\u4f55")," \u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1as = "25525511135"\n\u8f93\u51fa\uff1a["255.255.11.135","255.255.111.35"]\n\n\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1as = "0000"\n\u8f93\u51fa\uff1a["0.0.0.0"]\n\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1as = "101023"\n\u8f93\u51fa\uff1a["1.0.10.23","1.0.102.3","10.1.0.23","10.10.2.3","101.0.2.3"]\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= s.length <= 20")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"s")," \u4ec5\u7531\u6570\u5b57\u7ec4\u6210")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int n;\n    string s;\n    vector<string> ans;\n    int len_list[3] = {1, 2, 3};\n\n    bool isValid(string &sub) {\n        // ip \u6bb5\u65e0\u6548\u7684\u60c5\u51b5\uff1a1\u3001\u957f\u5ea6\u5927\u4e8e1\uff0c0\u5f00\u5934 2\u3001\u957f\u5ea6\u4e3a3\uff0c\u5927\u4e8e255\n        int sz = sub.size();\n        if (sz == 1) return true;\n\n        // 2,3\n        if (sub[0] == '0') return false;\n        int num = 0;\n        int weight = 1;\n        for (int i = sub.size() - 1; i >= 0; i--) {\n            num += (sub[i]-48) * weight;\n            weight *= 10;\n        }\n        if (num > 255) return false;\n        return true;\n    }\n    \n    // \u4ece start \u4e0b\u6807\u5f00\u59cb\u622a\u53d6\uff0ccnt \u5df2\u7ecf\u9009\u7528\u7684\u6bb5\u7684\u6570\u91cf\n    void dfs(int start, string &ip, int cnt) {\n        int ip_sz = ip.size();\n        if (cnt == 4) {\n            // cout << ip << endl;\n            if (ip_sz == n+3) ans.push_back(ip);\n            return;\n        }\n        \n        for (int len : len_list) {\n            if (start + len > n) continue; // \u622a\u53d6\u7684\u957f\u5ea6\u8d85\u8fc7\u539f\u5b57\u7b26\u4e32\n\n            string sub = s.substr(start, len);;\n            if (!isValid(sub)) continue; // ip\u6bb5\u65e0\u6548\n\n            if (cnt != 0) ip += '.';\n            ip += sub;\n            dfs(start + len, ip, cnt+1);\n            ip.erase(ip_sz, len);\n            if (cnt != 0) ip.pop_back();\n        }\n    }\n\n    vector<string> restoreIpAddresses(string _s) {\n        // \u6bcf\u4e00\u5c42\u9009 1\u30012\u30013\u4f4d\n        // \u5230\u4e86\u56db\u5c42\u5c31\u8bb0\u5f55ip\uff0c\u7136\u540ereturn\n        s = _s;\n        n = s.size();\n        string ip;\n        dfs(0, ip, 0);\n        return ans;\n    }\n};\n")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[69510],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=p(n),d=l,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[u]="string"==typeof e?e:l,i[1]=a;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},27279:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var r=n(87462),l=(n(67294),n(3905));const o={},i=void 0,a={unversionedId:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u9762\u8bd5\u9898-02-05-\u94fe\u8868\u6c42\u548c",id:"Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u9762\u8bd5\u9898-02-05-\u94fe\u8868\u6c42\u548c",title:"\u9762\u8bd5\u9898-02-05-\u94fe\u8868\u6c42\u548c",description:"\u9762\u8bd5\u9898 02.05. \u94fe\u8868\u6c42\u548c",source:"@site/docs/Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u9762\u8bd5\u9898-02-05-\u94fe\u8868\u6c42\u548c.md",sourceDirName:"Algorithm/1-\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868",slug:"/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u9762\u8bd5\u9898-02-05-\u94fe\u8868\u6c42\u548c",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u9762\u8bd5\u9898-02-05-\u94fe\u8868\u6c42\u548c",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u5251\u6307Offer-II-029-<\u94fe\u8868\u6a21\u62df>-\u6392\u5e8f\u7684\u5faa\u73af\u94fe\u8868",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u4f8b\u9898-\u94fe\u8868/\u5251\u6307Offer-II-029-<\u94fe\u8868\u6a21\u62df>-\u6392\u5e8f\u7684\u5faa\u73af\u94fe\u8868"},next:{title:"LRU \u7f13\u5b58\u5b9e\u73b0",permalink:"/docs/Algorithm/\u6570\u636e\u7ed3\u6784/\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784/LRU\u7f13\u5b58\u5b9e\u73b0"}},c={},p=[{value:"\u9762\u8bd5\u9898 02.05. \u94fe\u8868\u6c42\u548c",id:"\u9762\u8bd5\u9898-0205-\u94fe\u8868\u6c42\u548c",level:4}],s={toc:p};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"\u9762\u8bd5\u9898-0205-\u94fe\u8868\u6c42\u548c"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/sum-lists-lcci/"},"\u9762\u8bd5\u9898 02.05. \u94fe\u8868\u6c42\u548c")),(0,l.kt)("p",null,"\u7ed9\u5b9a\u4e24\u4e2a\u7528\u94fe\u8868\u8868\u793a\u7684\u6574\u6570\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u6570\u4f4d\u3002"),(0,l.kt)("p",null,"\u8fd9\u4e9b\u6570\u4f4d\u662f\u53cd\u5411\u5b58\u653e\u7684\uff0c\u4e5f\u5c31\u662f\u4e2a\u4f4d\u6392\u5728\u94fe\u8868\u9996\u90e8\u3002"),(0,l.kt)("p",null,"\u7f16\u5199\u51fd\u6570\u5bf9\u8fd9\u4e24\u4e2a\u6574\u6570\u6c42\u548c\uff0c\u5e76\u7528\u94fe\u8868\u5f62\u5f0f\u8fd4\u56de\u7ed3\u679c\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1a(7 -> 1 -> 6) + (5 -> 9 -> 2)\uff0c\u5373617 + 295\n\u8f93\u51fa\uff1a2 -> 1 -> 9\uff0c\u5373912\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u8fdb\u9636\uff1a"),"\u601d\u8003\u4e00\u4e0b\uff0c\u5047\u8bbe\u8fd9\u4e9b\u6570\u4f4d\u662f\u6b63\u5411\u5b58\u653e\u7684\uff0c\u53c8\u8be5\u5982\u4f55\u89e3\u51b3\u5462?"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u8f93\u5165\uff1a(6 -> 1 -> 7) + (2 -> 9 -> 5)\uff0c\u5373617 + 295\n\u8f93\u51fa\uff1a9 -> 1 -> 2\uff0c\u5373912\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c++"},"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode *head = nullptr, *tail = nullptr;\n        int carry = 0;\n        while (l1 || l2) {\n            int n1 = l1 ? l1->val: 0;\n            int n2 = l2 ? l2->val: 0;\n            int sum = n1 + n2 + carry;\n            if (!head) {\n                head = tail = new ListNode(sum % 10);\n            } else {\n                tail->next = new ListNode(sum % 10);\n                tail = tail->next;\n            }\n            carry = sum / 10;\n            if (l1) {\n                l1 = l1->next;\n            }\n            if (l2) {\n                l2 = l2->next;\n            }\n        }\n        if (carry > 0) {\n            tail->next = new ListNode(carry);\n        }\n        return head;\n    }\n};\n\n")))}u.isMDXComponent=!0}}]);
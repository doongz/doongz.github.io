"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[96768],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>g});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var o=r.createContext({}),s=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},p=function(n){var e=s(n.components);return r.createElement(o.Provider,{value:e},n.children)},m="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,l=n.originalType,o=n.parentName,p=u(n,["components","mdxType","originalType","parentName"]),m=s(t),f=i,g=m["".concat(o,".").concat(f)]||m[f]||c[f]||l;return t?r.createElement(g,a(a({ref:e},p),{},{components:t})):r.createElement(g,a({ref:e},p))}));function g(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var l=t.length,a=new Array(l);a[0]=f;var u={};for(var o in e)hasOwnProperty.call(e,o)&&(u[o]=e[o]);u.originalType=n,u[m]="string"==typeof n?n:i,a[1]=u;for(var s=2;s<l;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},54491:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const l={},a=void 0,u={unversionedId:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/<\u6392\u5e8f\u9884\u5904\u7406+\u4e8c\u5206-\u53cc\u6307\u9488>-\u6709\u6548\u4e09\u89d2\u5f62\u7684\u4e2a\u6570",id:"Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/<\u6392\u5e8f\u9884\u5904\u7406+\u4e8c\u5206-\u53cc\u6307\u9488>-\u6709\u6548\u4e09\u89d2\u5f62\u7684\u4e2a\u6570",title:"<\u6392\u5e8f\u9884\u5904\u7406+\u4e8c\u5206-\u53cc\u6307\u9488>-\u6709\u6548\u4e09\u89d2\u5f62\u7684\u4e2a\u6570",description:"611. \u6709\u6548\u4e09\u89d2\u5f62\u7684\u4e2a\u6570",source:"@site/docs/Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/611-<\u6392\u5e8f\u9884\u5904\u7406+\u4e8c\u5206-\u53cc\u6307\u9488>-\u6709\u6548\u4e09\u89d2\u5f62\u7684\u4e2a\u6570.md",sourceDirName:"Algorithm/2-\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f",slug:"/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/<\u6392\u5e8f\u9884\u5904\u7406+\u4e8c\u5206-\u53cc\u6307\u9488>-\u6709\u6548\u4e09\u89d2\u5f62\u7684\u4e2a\u6570",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/<\u6392\u5e8f\u9884\u5904\u7406+\u4e8c\u5206-\u53cc\u6307\u9488>-\u6709\u6548\u4e09\u89d2\u5f62\u7684\u4e2a\u6570",draft:!1,tags:[],version:"current",sidebarPosition:611,frontMatter:{},sidebar:"algorithmSidebar",previous:{title:"<\u5b57\u5178\u5e8f>-\u6700\u5927\u6570",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/<\u5b57\u5178\u5e8f>-\u6700\u5927\u6570"},next:{title:"<\u9009\u62e9\u6392\u5e8f>-\u714e\u997c\u6392\u5e8f",permalink:"/docs/Algorithm/\u7b97\u6cd5\u57fa\u7840/\u4f8b\u9898-\u6392\u5e8f/<\u9009\u62e9\u6392\u5e8f>-\u714e\u997c\u6392\u5e8f"}},o={},s=[{value:"\u65b9\u6cd5\u4e00\uff1a\u6392\u5e8f+\u4e09\u91cd\u5faa\u73af\uff08\u8d85\u65f6\uff09",id:"\u65b9\u6cd5\u4e00\u6392\u5e8f\u4e09\u91cd\u5faa\u73af\u8d85\u65f6",level:2},{value:"\u65b9\u6cd5\u4e8c\uff1a\u6392\u5e8f+\u4e8c\u5206",id:"\u65b9\u6cd5\u4e8c\u6392\u5e8f\u4e8c\u5206",level:2},{value:"\u65b9\u6cd5\u4e09\uff1a\u6392\u5e8f+\u4e24\u7aef\u53cc\u6307\u9488",id:"\u65b9\u6cd5\u4e09\u6392\u5e8f\u4e24\u7aef\u53cc\u6307\u9488",level:2}],p={toc:s};function m(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/valid-triangle-number/"},"611. \u6709\u6548\u4e09\u89d2\u5f62\u7684\u4e2a\u6570")),(0,i.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u975e\u8d1f\u6574\u6570\u7684\u6570\u7ec4 ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," \uff0c\u8fd4\u56de\u5176\u4e2d\u53ef\u4ee5\u7ec4\u6210\u4e09\u89d2\u5f62\u4e09\u6761\u8fb9\u7684\u4e09\u5143\u7ec4\u4e2a\u6570\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1:\n\n\u8f93\u5165: nums = [2,2,3,4]\n\u8f93\u51fa: 3\n\u89e3\u91ca:\u6709\u6548\u7684\u7ec4\u5408\u662f: \n2,3,4 (\u4f7f\u7528\u7b2c\u4e00\u4e2a 2)\n2,3,4 (\u4f7f\u7528\u7b2c\u4e8c\u4e2a 2)\n2,2,3\n\n\u793a\u4f8b 2:\n\n\u8f93\u5165: nums = [4,2,3,4]\n\u8f93\u51fa: 4\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u63d0\u793a:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 1000")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0 <= nums[i] <= 1000"))),(0,i.kt)("hr",null),(0,i.kt)("p",null,"\u672c\u9898\u65e0\u8bba\u4ec0\u4e48\u89e3\u6cd5\uff0c\u90fd\u9700\u8981\u5c06\u5143\u7d20\u300c\u4ece\u5c0f\u5230\u5927\u300d\u6392\u5e8f"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u56e0\u4e3a\u4e09\u6761\u7ebf\u6bb5\u80fd\u7ec4\u6210\u4e09\u89d2\u5f62\u7684\u6700\u4f4e\u6761\u4ef6\u662f\uff1a\u4e24\u4e2a\u77ed\u8fb9\u76f8\u52a0\u5927\u4e8e\u6700\u957f\u8fb9")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e00\u6392\u5e8f\u4e09\u91cd\u5faa\u73af\u8d85\u65f6"},"\u65b9\u6cd5\u4e00\uff1a\u6392\u5e8f+\u4e09\u91cd\u5faa\u73af\uff08\u8d85\u65f6\uff09"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n^3)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(logn)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int triangleNumber(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n\n        int n = nums.size();\n        int ans = 0;\n        if (n < 3) return ans;\n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if (nums[i] + nums[j] > nums[k]) {\n                        ans++;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};\n")),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e8c\u6392\u5e8f\u4e8c\u5206"},"\u65b9\u6cd5\u4e8c\uff1a\u6392\u5e8f+\u4e8c\u5206"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u9996\u5148\u8fdb\u884c\u6392\u5e8f"),(0,i.kt)("li",{parentName:"ul"},"\u56fa\u5b9a\u6700\u77ed\u7684\u4e24\u6761\u8fb9\uff0c\u957f\u5ea6\u4e3a a \u548c b\uff0c\u4e8c\u5206\u67e5\u627e a + b \u7684\u66f4\u5de6\u4fa7\u4f4d\u7f6e\uff08lower_bound\uff09"),(0,i.kt)("li",{parentName:"ul"},"\u5176\u5b9e\u4e8c\u5206\u5f88\u96be\uff0c\u5404\u79cd\u5199\u6cd5\u5f88\u591a\uff0c\u5173\u952e\u662f\u627e\u5230\u81ea\u5df1\u5f7b\u5e95\u660e\u767d\u7684\u5199\u6cd5")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"lower_bound \u4f4d\u7f6e\u6709\u4e2a\u7279\u6b8a\u6027\uff1a\u4e0b\u6807 idx \u4ee3\u8868\u4e86\u6392\u5e8f\u6570\u7ec4\u4e2d\u5c0f\u4e8e nums","[idx]"," \u7684\u5143\u7d20\u6709 idx \u4e2a")),(0,i.kt)("p",null,"\u4e5f\u5c31\u662f\u5c0f\u4e8e a + b \u7684\u5143\u7d20\u6709 idx \u4e2a\uff0c\u6ee1\u8db3\u300c\u4e24\u4e2a\u77ed\u8fb9\u76f8\u52a0\u5927\u4e8e\u6700\u957f\u8fb9\u300d\u7684\u6761\u4ef6"),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n^2logn)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(logn)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    int triangleNumber(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        int ans = 0;\n        if (n < 3) return ans;\n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                int target = nums[i] + nums[j];\n                int left = j + 1;\n                int right = n;\n                while (left < right) {\n                    int mid = left + (right - left) / 2;\n                    if (nums[mid] == target) {\n                        right = mid;\n                    } else if (target < nums[mid]) {\n                        right = mid;\n                    } else if (nums[mid] < target) {\n                        left = mid + 1;\n                    }\n                }\n                // cout << j+1 << " " << left << endl;\n                // \u56fa\u5b9a\u5f53\u524d\u4e24\u4e2a\u6700\u77ed\u8fb9\u540e\uff0c\u627e\u5230\u4e86 left - (j + 1) \u4e2a\uff0cj+1\u4e3a\u8d77\u70b9\n                ans += left - (j + 1);  \n            }\n        }\n        return ans;\n    }\n};\n')),(0,i.kt)("p",null,"\u8c03\u5305\u4e5f\u884c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    int triangleNumber(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        int ans = 0;\n        if (n < 3) return ans;\n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                int target = nums[i] + nums[j];\n                auto it = lower_bound(nums.begin() + j + 1, nums.end(), target);\n                // cout << j + 1 << " " << it - nums.begin() << endl;\n                ans += (it - nums.begin()) - (j + 1);\n            }\n        }\n        return ans;\n    }\n};\n')),(0,i.kt)("h2",{id:"\u65b9\u6cd5\u4e09\u6392\u5e8f\u4e24\u7aef\u53cc\u6307\u9488"},"\u65b9\u6cd5\u4e09\uff1a\u6392\u5e8f+\u4e24\u7aef\u53cc\u6307\u9488"),(0,i.kt)("p",null,"\u9996\u5148\u56fa\u5b9a\u6700\u957f\u4e00\u7aef\uff0c\u5269\u4e0b\u7684\u7247\u6bb5\u7528\u53cc\u6307\u9488 left right \u6307\u5411\u4e24\u7aef"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6838\u5fc3\u601d\u60f3\uff1a\u518d\u56fa\u5b9a right \u7aef\uff0c\u6700\u540e\u79fb\u52a8 left \u7aef")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5982\u679c\u5f53\u524d left \u6ee1\u8db3\uff0c\u90a3\u4e2d\u95f4\u7684\u90a3\u4e9b\u6bd4 nums","[left]"," \u8fd8\u5927\u7684\u503c\u4e5f\u6ee1\u8db3\uff0c\u76f4\u63a5\u53d6\u5bf9\u6570 right - left \u4e2a",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u518d\u7f29\u5c0f right\uff0c\u4f7f\u5f97\u4e2d\u95f4\u7684\u90a3\u4e9b nums","[left]","+nums","[right]"," \u6574\u4f53\u53d8\u5c0f\uff0c\u300c\u7f29\u7d27\u6761\u4ef6\u300d\u8fdb\u5165\u4e0b\u4e00\u8f6e\u5224\u65ad"))),(0,i.kt)("li",{parentName:"ul"},"\u5982\u679c\u5f53\u524d left \u4e0d\u6ee1\u8db3\uff0cleft \u589e\u52a0\u5230\u4e0b\u4e00\u4f4d\uff0c\u4f7f\u5f97\u4e2d\u95f4\u7684\u90a3\u4e9b nums","[left]","+nums","[right]"," \u6574\u4f53\u53d8\u5927\uff0c\u300c\u653e\u5bbd\u6761\u4ef6\u300d\u8fdb\u5165\u4e0b\u4e00\u8f6e\u5224\u65ad")),(0,i.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(n^2)")),(0,i.kt)("p",null,"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"O(logn)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int triangleNumber(vector<int>& nums) {\n        sort(nums.begin(), nums.end());\n        int n = nums.size();\n        int ans = 0;\n        if (n < 3) return ans;\n        for (int i = n - 1; i >= 0; i--) {\n            int left = 0;\n            int right = i - 1;\n            while (left < right) {  // \u4e24\u4e2a\u6307\u9488\u4e0d\u80fd\u91cd\u5408\n                if (nums[left] + nums[right] > nums[i]) {\n                    ans += right - left;\n                    right--;\n                } else {\n                    left++;\n                }\n            }\n        }\n        return ans;\n    }\n};\n")))}m.isMDXComponent=!0}}]);